<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.8" doxygen_gitid="c2fe5c3e4986974eb2a97608b24086683502f07f">
  <compound kind="file">
    <name>changelog.dox</name>
    <path>docsource/</path>
    <filename>changelog_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>contributors.dox</name>
    <path>docsource/</path>
    <filename>contributors_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>error.dox</name>
    <path>docsource/</path>
    <filename>error_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>faq.dox</name>
    <path>docsource/</path>
    <filename>faq_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>frequent.dox</name>
    <path>docsource/</path>
    <filename>frequent_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-app.dox</name>
    <path>docsource/</path>
    <filename>guide-app_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-brown.dox</name>
    <path>docsource/</path>
    <filename>guide-brown_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-collision.dox</name>
    <path>docsource/</path>
    <filename>guide-collision_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-compiling.dox</name>
    <path>docsource/</path>
    <filename>guide-compiling_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-concepts.dox</name>
    <path>docsource/</path>
    <filename>guide-concepts_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-debug.dox</name>
    <path>docsource/</path>
    <filename>guide-debug_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-effects.dox</name>
    <path>docsource/</path>
    <filename>guide-effects_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-fbo.dox</name>
    <path>docsource/</path>
    <filename>guide-fbo_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-files.dox</name>
    <path>docsource/</path>
    <filename>guide-files_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-install.dox</name>
    <path>docsource/</path>
    <filename>guide-install_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-intro.dox</name>
    <path>docsource/</path>
    <filename>guide-intro_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-macosx.dox</name>
    <path>docsource/</path>
    <filename>guide-macosx_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-meshes.dox</name>
    <path>docsource/</path>
    <filename>guide-meshes_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-network.dox</name>
    <path>docsource/</path>
    <filename>guide-network_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-opengl.dox</name>
    <path>docsource/</path>
    <filename>guide-opengl_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-physics.dox</name>
    <path>docsource/</path>
    <filename>guide-physics_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-shaders.dox</name>
    <path>docsource/</path>
    <filename>guide-shaders_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-tutorial.dox</name>
    <path>docsource/</path>
    <filename>guide-tutorial_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-ui.dox</name>
    <path>docsource/</path>
    <filename>guide-ui_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-var.dox</name>
    <path>docsource/</path>
    <filename>guide-var_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-video.dox</name>
    <path>docsource/</path>
    <filename>guide-video_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>guide-welcome.dox</name>
    <path>docsource/</path>
    <filename>guide-welcome_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>license.dox</name>
    <path>docsource/</path>
    <filename>license_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>topic-index.dox</name>
    <path>docsource/</path>
    <filename>topic-index_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>AABox.h</name>
    <path>include/G3D/</path>
    <filename>AABox_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">debug.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <class kind="class">G3D::AABox</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>AABox_8h.html</anchorfile>
      <anchor>ad579d2ddee5adb75d1b6ae543aa8417e</anchor>
      <arglist>(const G3D::AABox &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AABSPTree.h</name>
    <path>include/G3D/</path>
    <filename>AABSPTree_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="Table_8h" name="Table.h" local="yes" import="no" module="no" objc="no">Table.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="AABox_8h" name="AABox.h" local="yes" import="no" module="no" objc="no">AABox.h</includes>
    <includes id="Sphere_8h" name="Sphere.h" local="yes" import="no" module="no" objc="no">Sphere.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" import="no" module="no" objc="no">Box.h</includes>
    <includes id="Triangle_8h" name="Triangle.h" local="yes" import="no" module="no" objc="no">Triangle.h</includes>
    <includes id="Ray_8h" name="Ray.h" local="yes" import="no" module="no" objc="no">Ray.h</includes>
    <includes id="GCamera_8h" name="GCamera.h" local="yes" import="no" module="no" objc="no">GCamera.h</includes>
    <includes id="BinaryInput_8h" name="BinaryInput.h" local="yes" import="no" module="no" objc="no">BinaryInput.h</includes>
    <includes id="BinaryOutput_8h" name="BinaryOutput.h" local="yes" import="no" module="no" objc="no">BinaryOutput.h</includes>
    <includes id="CollisionDetection_8h" name="CollisionDetection.h" local="yes" import="no" module="no" objc="no">CollisionDetection.h</includes>
    <class kind="class">G3D::AABSPTree</class>
    <class kind="class">G3D::AABSPTree::BoxIntersectionIterator</class>
    <class kind="class">G3D::AABSPTree::RayIntersectionIterator</class>
    <class kind="class">G3D::AABSPTree::Iterator</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>KDTreeSet</name>
      <anchorfile>AABSPTree_8h.html</anchorfile>
      <anchor>a61236fccd472dc81de9205293d97b029</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>AABSPTree_8h.html</anchorfile>
      <anchor>a9df42928a1ab0fcc00854847e43cbfcc</anchor>
      <arglist>(const G3D::Vector3 &amp;v, G3D::AABox &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>AABSPTree_8h.html</anchorfile>
      <anchor>a20dc561b36244cddbbfb3d52e7360666</anchor>
      <arglist>(const G3D::AABox &amp;a, G3D::AABox &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>AABSPTree_8h.html</anchorfile>
      <anchor>a265eeb2940167cbdfc83ac5bdbbacbc0</anchor>
      <arglist>(const G3D::Sphere &amp;s, G3D::AABox &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>AABSPTree_8h.html</anchorfile>
      <anchor>af8cc203cb2a7eed947e2571fc59ff3b7</anchor>
      <arglist>(const G3D::Box &amp;b, G3D::AABox &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>AABSPTree_8h.html</anchorfile>
      <anchor>ae6fa9aa08ffc8295bc7d636d8f26739e</anchor>
      <arglist>(const G3D::Triangle &amp;t, G3D::AABox &amp;out)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AnyVal.h</name>
    <path>include/G3D/</path>
    <filename>AnyVal_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="TextInput_8h" name="TextInput.h" local="yes" import="no" module="no" objc="no">TextInput.h</includes>
    <class kind="class">G3D::AnyVal</class>
    <class kind="class">G3D::AnyVal::Exception</class>
    <class kind="class">G3D::AnyVal::WrongType</class>
    <class kind="class">G3D::AnyVal::KeyNotFound</class>
    <class kind="class">G3D::AnyVal::IndexOutOfBounds</class>
    <class kind="class">G3D::AnyVal::CorruptText</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Array.h</name>
    <path>include/G3D/</path>
    <filename>Array_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">debug.h</includes>
    <includes id="System_8h" name="System.h" local="yes" import="no" module="no" objc="no">System.h</includes>
    <class kind="class">G3D::Array</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>AtomicInt32.h</name>
    <path>include/G3D/</path>
    <filename>AtomicInt32_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <class kind="class">G3D::AtomicInt32</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>BinaryFormat.h</name>
    <path>include/G3D/</path>
    <filename>BinaryFormat_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <class kind="class">G3D::_internal::_BinaryFormat</class>
    <namespace>G3D</namespace>
    <namespace>G3D::_internal</namespace>
    <member kind="define">
      <type>#define</type>
      <name>binaryFormatOf</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>a370ccb98a856823d60d7d67a41957a55</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>a15292a9bcedf82f67aab53c5bfed120f</anchor>
      <arglist>(CType, EnumType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>abf5b3a2884555ffb9d447bca63a3348a</anchor>
      <arglist>(bool, BOOL8_BINFMT) DECLARE_BINARYFORMATOF(uint8</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>a0edc6b83ca4f9eb5b90e9b20d1d82adc</anchor>
      <arglist>(int8, INT8_BINFMT) DECLARE_BINARYFORMATOF(uint16</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT UINT16_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>aea0b4c72622228703fa9a74f796a2d6a</anchor>
      <arglist>(int16, INT16_BINFMT) DECLARE_BINARYFORMATOF(uint32</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT UINT16_BINFMT UINT32_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>a9d3b9f60756eefaf3580c6601dd37f0e</anchor>
      <arglist>(int32, INT32_BINFMT) DECLARE_BINARYFORMATOF(uint64</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT UINT16_BINFMT UINT32_BINFMT UINT64_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>ae5399ad1f7ca402e6d0f331ee9baef1c</anchor>
      <arglist>(int64, INT64_BINFMT) DECLARE_BINARYFORMATOF(float32</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT UINT16_BINFMT UINT32_BINFMT UINT64_BINFMT FLOAT32_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>ad53c1e528d5454e26a95f6c1cadced57</anchor>
      <arglist>(float64, FLOAT64_BINFMT) DECLARE_BINARYFORMATOF(Vector2</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT UINT16_BINFMT UINT32_BINFMT UINT64_BINFMT FLOAT32_BINFMT VECTOR2_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>a7d1eaba7438beac505bf025161d368ac</anchor>
      <arglist>(Vector2int16, VECTOR2INT16_BINFMT) DECLARE_BINARYFORMATOF(Vector3</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT UINT16_BINFMT UINT32_BINFMT UINT64_BINFMT FLOAT32_BINFMT VECTOR2_BINFMT VECTOR3_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>a32c9cb8d0f5510156fd2db3db6e9e249</anchor>
      <arglist>(Vector3int16, VECTOR3INT16_BINFMT) DECLARE_BINARYFORMATOF(Vector4</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT UINT16_BINFMT UINT32_BINFMT UINT64_BINFMT FLOAT32_BINFMT VECTOR2_BINFMT VECTOR3_BINFMT VECTOR4_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>afe9450a908fcb9f3e333a26d7095397b</anchor>
      <arglist>(Vector4int16, VECTOR4INT16_BINFMT) DECLARE_BINARYFORMATOF(Color3</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT UINT16_BINFMT UINT32_BINFMT UINT64_BINFMT FLOAT32_BINFMT VECTOR2_BINFMT VECTOR3_BINFMT VECTOR4_BINFMT COLOR3_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>a8a74d02e676c2267327d5fccbf643381</anchor>
      <arglist>(Color3uint8, COLOR3UINT8_BINFMT) DECLARE_BINARYFORMATOF(Color4</arglist>
    </member>
    <member kind="function">
      <type>UINT8_BINFMT UINT16_BINFMT UINT32_BINFMT UINT64_BINFMT FLOAT32_BINFMT VECTOR2_BINFMT VECTOR3_BINFMT VECTOR4_BINFMT COLOR3_BINFMT COLOR4_BINFMT</type>
      <name>DECLARE_BINARYFORMATOF</name>
      <anchorfile>BinaryFormat_8h.html</anchorfile>
      <anchor>ae2219610309ea9102a99edaf28a6a0b2</anchor>
      <arglist>(Color4uint8, COLOR4UINT8_BINFMT) namespace G3D</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BinaryInput.h</name>
    <path>include/G3D/</path>
    <filename>BinaryInput_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">Color4.h</includes>
    <includes id="Color3_8h" name="Color3.h" local="yes" import="no" module="no" objc="no">Color3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">Vector4.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">Vector2.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">debug.h</includes>
    <includes id="System_8h" name="System.h" local="yes" import="no" module="no" objc="no">System.h</includes>
    <class kind="class">G3D::BinaryInput</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_READER</name>
      <anchorfile>BinaryInput_8h.html</anchorfile>
      <anchor>ad88ccdb65de620d7f8bb37eaf46bbd64</anchor>
      <arglist>(ucase, lcase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BinaryOutput.h</name>
    <path>include/G3D/</path>
    <filename>BinaryOutput_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">Color4.h</includes>
    <includes id="Color3_8h" name="Color3.h" local="yes" import="no" module="no" objc="no">Color3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">Vector4.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">Vector2.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">debug.h</includes>
    <includes id="BinaryInput_8h" name="BinaryInput.h" local="yes" import="no" module="no" objc="no">BinaryInput.h</includes>
    <includes id="System_8h" name="System.h" local="yes" import="no" module="no" objc="no">System.h</includes>
    <class kind="class">G3D::BinaryOutput</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_WRITER</name>
      <anchorfile>BinaryOutput_8h.html</anchorfile>
      <anchor>ad2ed9d9d64ca6cc038a918c878e6fa1e</anchor>
      <arglist>(ucase, lcase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Box.h</name>
    <path>include/G3D/</path>
    <filename>Box_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="Plane_8h" name="Plane.h" local="yes" import="no" module="no" objc="no">Plane.h</includes>
    <class kind="class">G3D::Box</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Capsule.h</name>
    <path>include/G3D/</path>
    <filename>Capsule_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <class kind="class">G3D::Capsule</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionDetection.h</name>
    <path>include/G3D/</path>
    <filename>CollisionDetection_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Plane_8h" name="Plane.h" local="yes" import="no" module="no" objc="no">Plane.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" import="no" module="no" objc="no">Box.h</includes>
    <includes id="Triangle_8h" name="Triangle.h" local="yes" import="no" module="no" objc="no">Triangle.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="Ray_8h" name="Ray.h" local="yes" import="no" module="no" objc="no">Ray.h</includes>
    <includes id="Line_8h" name="Line.h" local="yes" import="no" module="no" objc="no">Line.h</includes>
    <class kind="class">G3D::CollisionDetection</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Color3.h</name>
    <path>include/G3D/</path>
    <filename>Color3_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <class kind="class">G3D::Color3</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Color3uint8.h</name>
    <path>include/G3D/</path>
    <filename>Color3uint8_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <class kind="class">G3D::Color3uint8</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Color4.h</name>
    <path>include/G3D/</path>
    <filename>Color4_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Color3_8h" name="Color3.h" local="yes" import="no" module="no" objc="no">Color3.h</includes>
    <class kind="class">G3D::Color4</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Color4uint8.h</name>
    <path>include/G3D/</path>
    <filename>Color4uint8_8h.html</filename>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Color3uint8_8h" name="Color3uint8.h" local="yes" import="no" module="no" objc="no">Color3uint8.h</includes>
    <class kind="class">G3D::Color4uint8</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Cone.h</name>
    <path>include/G3D/</path>
    <filename>Cone_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <class kind="class">G3D::Cone</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>ConvexPolyhedron.h</name>
    <path>include/G3D/</path>
    <filename>ConvexPolyhedron_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">Vector2.h</includes>
    <includes id="CoordinateFrame_8h" name="CoordinateFrame.h" local="yes" import="no" module="no" objc="no">CoordinateFrame.h</includes>
    <includes id="Plane_8h" name="Plane.h" local="yes" import="no" module="no" objc="no">Plane.h</includes>
    <includes id="Line_8h" name="Line.h" local="yes" import="no" module="no" objc="no">Line.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <class kind="class">G3D::DirectedEdge</class>
    <class kind="class">G3D::ConvexPolygon</class>
    <class kind="class">G3D::ConvexPolyhedron</class>
    <class kind="class">G3D::ConvexPolygon2D</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>CoordinateFrame.h</name>
    <path>include/G3D/</path>
    <filename>CoordinateFrame_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">Vector4.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" import="no" module="no" objc="no">Matrix3.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <class kind="class">G3D::CoordinateFrame</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Crypto.h</name>
    <path>include/G3D/</path>
    <filename>Crypto_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <class kind="class">G3D::MD5Hash</class>
    <class kind="class">G3D::Crypto</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Cylinder.h</name>
    <path>include/G3D/</path>
    <filename>Cylinder_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <class kind="class">G3D::Cylinder</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>debug.h</name>
    <path>include/G3D/</path>
    <filename>debug_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="debugPrintf_8h" name="debugPrintf.h" local="yes" import="no" module="no" objc="no">debugPrintf.h</includes>
    <includes id="debugAssert_8h" name="debugAssert.h" local="yes" import="no" module="no" objc="no">debugAssert.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>debugAssert.h</name>
    <path>include/G3D/</path>
    <filename>debugAssert_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <namespace>G3D</namespace>
    <namespace>G3D::_internal</namespace>
    <member kind="define">
      <type>#define</type>
      <name>rawBreak</name>
      <anchorfile>debugAssert_8h.html</anchorfile>
      <anchor>ab93087d7057f31678923a4f4ee8353b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>debugBreak</name>
      <anchorfile>debugAssert_8h.html</anchorfile>
      <anchor>a13bf501f420bb63f3cf9b62b06b03574</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>debugAssert</name>
      <anchorfile>debugAssert_8h.html</anchorfile>
      <anchor>adb3cef18983da8440d55b7557f83358c</anchor>
      <arglist>(exp)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__debugPromptShowDialog__</name>
      <anchorfile>debugAssert_8h.html</anchorfile>
      <anchor>ad5fb4f42d2412c6d85b3f2c3e22638b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>debugAssertM</name>
      <anchorfile>debugAssert_8h.html</anchorfile>
      <anchor>af7e8ca29ffa4af20db0de5a93e1b81e9</anchor>
      <arglist>(exp, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>alwaysAssertM</name>
      <anchorfile>debugAssert_8h.html</anchorfile>
      <anchor>ac765dd93625b827ed4487eaa30a7c532</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>debugPrintf.h</name>
    <path>include/G3D/</path>
    <filename>debugPrintf_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="format_8h" name="format.h" local="yes" import="no" module="no" objc="no">format.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Discovery.h</name>
    <path>include/G3D/</path>
    <filename>Discovery_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="G3DGameUnits_8h" name="G3DGameUnits.h" local="yes" import="no" module="no" objc="no">G3DGameUnits.h</includes>
    <includes id="NetworkDevice_8h" name="NetworkDevice.h" local="yes" import="no" module="no" objc="no">NetworkDevice.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" import="no" module="no" objc="no">Log.h</includes>
    <class kind="class">G3D::DiscoverySettings</class>
    <class kind="class">G3D::DiscoveryAdvertisement</class>
    <class kind="class">G3D::DiscoveryServerAddressMessage</class>
    <class kind="class">G3D::Discovery</class>
    <class kind="class">G3D::DiscoveryServer</class>
    <class kind="class">G3D::IncompatibleServerDescription</class>
    <class kind="class">G3D::DiscoveryClient</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>G3D_DISCOVERY_PROTOCOL_NAME</name>
      <anchorfile>Discovery_8h.html</anchorfile>
      <anchor>a395dbd60cc373ff5b585d89b2e99cd36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G3D_DISCOVERY_PROTOCOL_VERSION</name>
      <anchorfile>Discovery_8h.html</anchorfile>
      <anchor>a286d68cdab8e7a72dac7d0b7cc39e148</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fileutils.h</name>
    <path>include/G3D/</path>
    <filename>fileutils_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <namespace>G3D</namespace>
    <namespace>G3D::_internal</namespace>
  </compound>
  <compound kind="file">
    <name>format.h</name>
    <path>include/G3D/</path>
    <filename>format_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>__cdecl</name>
      <anchorfile>format_8h.html</anchorfile>
      <anchor>a238347d7669f8f1e9c83bfe63a2730c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>g3derror.h</name>
    <path>include/G3D/</path>
    <filename>g3derror_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="prompt_8h" name="prompt.h" local="yes" import="no" module="no" objc="no">prompt.h</includes>
    <namespace>G3D</namespace>
    <namespace>G3D::_internal</namespace>
    <member kind="define">
      <type>#define</type>
      <name>error</name>
      <anchorfile>g3derror_8h.html</anchorfile>
      <anchor>ae2334686416adb08246a7b1ec9b643d9</anchor>
      <arglist>(level, message, showPrompt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>G3DGameUnits.h</name>
    <path>include/G3D/</path>
    <filename>G3DGameUnits_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CENTIMETER</name>
      <anchorfile>G3DGameUnits_8h.html</anchorfile>
      <anchor>a78694f7337eab548d502a425c71f2b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DECIMETER</name>
      <anchorfile>G3DGameUnits_8h.html</anchorfile>
      <anchor>ad99a3ecd76cc64f474742e081a3dddd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>g3dmath.h</name>
    <path>include/G3D/</path>
    <filename>g3dmath_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">debug.h</includes>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_ISOC9X_SOURCE1</name>
      <anchorfile>g3dmath_8h.html</anchorfile>
      <anchor>af0421481b955878e6fc3dbd93c21e936</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ISOC99_SOURCE1</name>
      <anchorfile>g3dmath_8h.html</anchorfile>
      <anchor>acdfac2ff5663911fd433252264d863c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__USE_ISOC9X1</name>
      <anchorfile>g3dmath_8h.html</anchorfile>
      <anchor>a5d481958ccf3517b2e98e9775d86c701</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__USE_ISOC991</name>
      <anchorfile>g3dmath_8h.html</anchorfile>
      <anchor>a2a49e7958d449ebd0eff3a67427fe567</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G3D_PI</name>
      <anchorfile>g3dmath_8h.html</anchorfile>
      <anchor>ae0f75ad2275e76e25b678de6df643e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G3D_HALF_PI</name>
      <anchorfile>g3dmath_8h.html</anchorfile>
      <anchor>a0845521f07ed907afbd6dc53e8f7eb3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G3D_TWO_PI</name>
      <anchorfile>g3dmath_8h.html</anchorfile>
      <anchor>aac87b30ea5b3142021f471d58833fc57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GCamera.h</name>
    <path>include/G3D/</path>
    <filename>GCamera_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="CoordinateFrame_8h" name="CoordinateFrame.h" local="yes" import="no" module="no" objc="no">CoordinateFrame.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Plane_8h" name="Plane.h" local="yes" import="no" module="no" objc="no">Plane.h</includes>
    <includes id="debugAssert_8h" name="debugAssert.h" local="yes" import="no" module="no" objc="no">debugAssert.h</includes>
    <class kind="class">G3D::GCamera</class>
    <class kind="class">G3D::GCamera::Frustum</class>
    <class kind="class">G3D::GCamera::Frustum::Face</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>GImage.h</name>
    <path>include/G3D/</path>
    <filename>GImage_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="stringutils_8h" name="stringutils.h" local="yes" import="no" module="no" objc="no">stringutils.h</includes>
    <includes id="Color3uint8_8h" name="Color3uint8.h" local="yes" import="no" module="no" objc="no">Color3uint8.h</includes>
    <includes id="Color4uint8_8h" name="Color4uint8.h" local="yes" import="no" module="no" objc="no">Color4uint8.h</includes>
    <class kind="class">G3D::GImage</class>
    <class kind="class">G3D::GImage::Error</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>GLight.h</name>
    <path>include/G3D/</path>
    <filename>GLight_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">Vector4.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">Color4.h</includes>
    <class kind="class">G3D::GLight</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>GThread.h</name>
    <path>include/G3D/</path>
    <filename>GThread_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <class kind="class">G3D::GThread</class>
    <class kind="class">G3D::GMutex</class>
    <class kind="class">G3D::GMutexLock</class>
    <namespace>G3D</namespace>
    <namespace>G3D::_internal</namespace>
  </compound>
  <compound kind="file">
    <name>Line.h</name>
    <path>include/G3D/</path>
    <filename>Line_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <class kind="class">G3D::Line</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>LineSegment.h</name>
    <path>include/G3D/</path>
    <filename>LineSegment_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <class kind="class">G3D::LineSegment</class>
    <class kind="class">G3D::LineSegment2D</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Log.h</name>
    <path>include/G3D/</path>
    <filename>Log_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <class kind="class">G3D::Log</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Matrix3.h</name>
    <path>include/G3D/</path>
    <filename>Matrix3_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">Vector4.h</includes>
    <includes id="debugAssert_8h" name="debugAssert.h" local="yes" import="no" module="no" objc="no">debugAssert.h</includes>
    <class kind="class">G3D::Matrix3</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Matrix4.h</name>
    <path>include/G3D/</path>
    <filename>Matrix4_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">G3D/platform.h</includes>
    <includes id="debugAssert_8h" name="debugAssert.h" local="yes" import="no" module="no" objc="no">G3D/debugAssert.h</includes>
    <class kind="class">G3D::Matrix4</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>MeshAlg.h</name>
    <path>include/G3D/</path>
    <filename>MeshAlg_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <class kind="class">G3D::MeshAlg</class>
    <class kind="class">G3D::MeshAlg::Vertex</class>
    <class kind="class">G3D::MeshAlg::Face</class>
    <class kind="class">G3D::MeshAlg::Edge</class>
    <class kind="class">G3D::MeshAlg::Geometry</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>MeshBuilder.h</name>
    <path>include/G3D/</path>
    <filename>MeshBuilder_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Triangle_8h" name="Triangle.h" local="yes" import="no" module="no" objc="no">Triangle.h</includes>
    <class kind="class">G3D::MeshBuilder</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>NetAddress.h</name>
    <path>include/G3D/</path>
    <filename>NetAddress_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <class kind="class">G3D::NetAddress</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>G3D_WINSOCK_MAJOR_VERSION</name>
      <anchorfile>NetAddress_8h.html</anchorfile>
      <anchor>ada1853d9c587f71b1b15a988405d30c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G3D_WINSOCK_MINOR_VERSION</name>
      <anchorfile>NetAddress_8h.html</anchorfile>
      <anchor>a8eb68ec29664c842ec7b19e729bb9f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOCKADDR_IN</name>
      <anchorfile>NetAddress_8h.html</anchorfile>
      <anchor>a91d11a5e66bd1e10b0e62aadb7775c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOCKET</name>
      <anchorfile>NetAddress_8h.html</anchorfile>
      <anchor>aff55fe551a9992a54ec54621c524d0a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>NetAddress_8h.html</anchorfile>
      <anchor>ae7fdaac799a0609dde91d96ebc4d813a</anchor>
      <arglist>(const G3D::NetAddress &amp;a)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NetworkDevice.h</name>
    <path>include/G3D/</path>
    <filename>NetworkDevice_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="NetAddress_8h" name="NetAddress.h" local="yes" import="no" module="no" objc="no">NetAddress.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="ReferenceCount_8h" name="ReferenceCount.h" local="yes" import="no" module="no" objc="no">ReferenceCount.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="BinaryOutput_8h" name="BinaryOutput.h" local="yes" import="no" module="no" objc="no">BinaryOutput.h</includes>
    <class kind="class">G3D::NetMessage</class>
    <class kind="class">G3D::Conduit</class>
    <class kind="class">G3D::ReliableConduit</class>
    <class kind="class">G3D::LightweightConduit</class>
    <class kind="class">G3D::LightweightConduit::PacketSizeException</class>
    <class kind="class">G3D::NetListener</class>
    <class kind="class">G3D::NetworkDevice</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>PhysicsFrame.h</name>
    <path>include/G3D/</path>
    <filename>PhysicsFrame_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" import="no" module="no" objc="no">Matrix3.h</includes>
    <includes id="Quat_8h" name="Quat.h" local="yes" import="no" module="no" objc="no">Quat.h</includes>
    <includes id="CoordinateFrame_8h" name="CoordinateFrame.h" local="yes" import="no" module="no" objc="no">CoordinateFrame.h</includes>
    <class kind="class">G3D::PhysicsFrame</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Plane.h</name>
    <path>include/G3D/</path>
    <filename>Plane_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">Vector4.h</includes>
    <includes id="debugAssert_8h" name="debugAssert.h" local="yes" import="no" module="no" objc="no">debugAssert.h</includes>
    <class kind="class">G3D::Plane</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>platform.h</name>
    <path>include/G3D/</path>
    <filename>platform_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>G3D_VER</name>
      <anchorfile>platform_8h.html</anchorfile>
      <anchor>a679412beed631a174356c4aca8cf3b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G3D_DEBUG</name>
      <anchorfile>platform_8h.html</anchorfile>
      <anchor>a3b656010a0cc9369b29d53c6288e3885</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSE</name>
      <anchorfile>platform_8h.html</anchorfile>
      <anchor>ad518177eb0b052ffed6ce4d0d63e6ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STR</name>
      <anchorfile>platform_8h.html</anchorfile>
      <anchor>a18d295a837ac71add5578860b55e5502</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prompt.h</name>
    <path>include/G3D/</path>
    <filename>prompt_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Quat.h</name>
    <path>include/G3D/</path>
    <filename>Quat_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" import="no" module="no" objc="no">Matrix3.h</includes>
    <class kind="class">G3D::Quat</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>G3D::Quat</type>
      <name>pow</name>
      <anchorfile>Quat_8h.html</anchorfile>
      <anchor>af063f5297855c03609abe8c6b9dfbec6</anchor>
      <arglist>(const G3D::Quat &amp;q, double x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Queue.h</name>
    <path>include/G3D/</path>
    <filename>Queue_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="System_8h" name="System.h" local="yes" import="no" module="no" objc="no">System.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">debug.h</includes>
    <class kind="class">G3D::Queue</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FIND_ENDS</name>
      <anchorfile>Queue_8h.html</anchorfile>
      <anchor>a360adbfcf3772a118fe6e4b165f13081</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Ray.h</name>
    <path>include/G3D/</path>
    <filename>Ray_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Triangle_8h" name="Triangle.h" local="yes" import="no" module="no" objc="no">Triangle.h</includes>
    <class kind="class">G3D::Ray</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EPSILON</name>
      <anchorfile>Ray_8h.html</anchorfile>
      <anchor>a002b2f4894492820fe708b1b7e7c5e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CROSS</name>
      <anchorfile>Ray_8h.html</anchorfile>
      <anchor>a275587ce22080c4c09deb818b1ce3564</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT</name>
      <anchorfile>Ray_8h.html</anchorfile>
      <anchor>a7942047af87f6f42fe6880a4c7c842ae</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB</name>
      <anchorfile>Ray_8h.html</anchorfile>
      <anchor>a241dda3a0a43611f1187bdfebc3391d7</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Rect2D.h</name>
    <path>include/G3D/</path>
    <filename>Rect2D_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">Vector2.h</includes>
    <class kind="class">G3D::Rect2D</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>ReferenceCount.h</name>
    <path>include/G3D/</path>
    <filename>ReferenceCount_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">debug.h</includes>
    <includes id="AtomicInt32_8h" name="AtomicInt32.h" local="yes" import="no" module="no" objc="no">AtomicInt32.h</includes>
    <class kind="class">G3D::_WeakPtr</class>
    <class kind="class">G3D::_WeakPtrLinkedList</class>
    <class kind="class">G3D::ReferenceCountedObject</class>
    <class kind="class">G3D::ReferenceCountedPointer</class>
    <class kind="class">G3D::WeakReferenceCountedPointer</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>RegistryUtil.h</name>
    <path>include/G3D/</path>
    <filename>RegistryUtil_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
  </compound>
  <compound kind="file">
    <name>Set.h</name>
    <path>include/G3D/</path>
    <filename>Set_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Table_8h" name="Table.h" local="yes" import="no" module="no" objc="no">Table.h</includes>
    <class kind="class">G3D::Set</class>
    <class kind="class">G3D::Set::Iterator</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Sphere.h</name>
    <path>include/G3D/</path>
    <filename>Sphere_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="Sphere_8h" name="Sphere.h" local="yes" import="no" module="no" objc="no">Sphere.h</includes>
    <class kind="class">G3D::Sphere</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Sphere_8h.html</anchorfile>
      <anchor>a3ec69f5722508ba3bfaaacb5c2a39578</anchor>
      <arglist>(const G3D::Sphere &amp;sphere)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>spline.h</name>
    <path>include/G3D/</path>
    <filename>spline_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">debug.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Stopwatch.h</name>
    <path>include/G3D/</path>
    <filename>Stopwatch_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Queue_8h" name="Queue.h" local="yes" import="no" module="no" objc="no">Queue.h</includes>
    <includes id="G3DGameUnits_8h" name="G3DGameUnits.h" local="yes" import="no" module="no" objc="no">G3DGameUnits.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <class kind="class">G3D::Stopwatch</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>stringutils.h</name>
    <path>include/G3D/</path>
    <filename>stringutils_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>System.h</name>
    <path>include/G3D/</path>
    <filename>System_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="G3DGameUnits_8h" name="G3DGameUnits.h" local="yes" import="no" module="no" objc="no">G3DGameUnits.h</includes>
    <includes id="BinaryFormat_8h" name="BinaryFormat.h" local="yes" import="no" module="no" objc="no">BinaryFormat.h</includes>
    <class kind="class">G3D::System</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Table.h</name>
    <path>include/G3D/</path>
    <filename>Table_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">debug.h</includes>
    <includes id="System_8h" name="System.h" local="yes" import="no" module="no" objc="no">System.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" import="no" module="no" objc="no">Crypto.h</includes>
    <class kind="class">G3D::Hashable</class>
    <class kind="class">G3D::Table</class>
    <class kind="class">G3D::Table::Entry</class>
    <class kind="class">G3D::Table::Iterator</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Table_8h.html</anchorfile>
      <anchor>ac7466cd4a3f7a5a82a9e8995bcc1e644</anchor>
      <arglist>(const int a)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Table_8h.html</anchorfile>
      <anchor>a924676fd133a620210c71fac08743103</anchor>
      <arglist>(const G3D::uint32 a)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Table_8h.html</anchorfile>
      <anchor>a1801d3fb1311bf3e7911c85306dd4000</anchor>
      <arglist>(const G3D::uint64 a)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Table_8h.html</anchorfile>
      <anchor>a1a93b3e7d93f029d8a090f1b1f476b48</anchor>
      <arglist>(const void *a)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Table_8h.html</anchorfile>
      <anchor>a21f09c9cdf6979f33875feb8452aae03</anchor>
      <arglist>(const G3D::Hashable *a)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Table_8h.html</anchorfile>
      <anchor>a8d1bff1073ba4369af194bb8fe88f026</anchor>
      <arglist>(const G3D::Hashable &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Table_8h.html</anchorfile>
      <anchor>a193c88a6df18196b5cf519fad99ab418</anchor>
      <arglist>(const std::string &amp;a)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextInput.h</name>
    <path>include/G3D/</path>
    <filename>TextInput_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <class kind="class">G3D::Token</class>
    <class kind="class">G3D::TextInput</class>
    <class kind="class">G3D::TextInput::Settings</class>
    <class kind="class">G3D::TextInput::TokenException</class>
    <class kind="class">G3D::TextInput::BadMSVCSpecial</class>
    <class kind="class">G3D::TextInput::WrongTokenType</class>
    <class kind="class">G3D::TextInput::WrongSymbol</class>
    <class kind="class">G3D::TextInput::WrongString</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>TextOutput.h</name>
    <path>include/G3D/</path>
    <filename>TextOutput_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">Array.h</includes>
    <class kind="class">G3D::TextOutput</class>
    <class kind="class">G3D::TextOutput::Options</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Triangle.h</name>
    <path>include/G3D/</path>
    <filename>Triangle_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Plane_8h" name="Plane.h" local="yes" import="no" module="no" objc="no">Plane.h</includes>
    <includes id="debugAssert_8h" name="debugAssert.h" local="yes" import="no" module="no" objc="no">debugAssert.h</includes>
    <class kind="class">G3D::Triangle</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Triangle_8h.html</anchorfile>
      <anchor>a25fc81fe939a35a9bc8017bcab570cdc</anchor>
      <arglist>(const G3D::Triangle &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector2.h</name>
    <path>include/G3D/</path>
    <filename>Vector2_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Vector2int16_8h" name="Vector2int16.h" local="yes" import="no" module="no" objc="no">Vector2int16.h</includes>
    <class kind="class">G3D::Vector2</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>G3D::Vector2</type>
      <name>operator*</name>
      <anchorfile>Vector2_8h.html</anchorfile>
      <anchor>a3f33541826ab9522261824db5592b8a6</anchor>
      <arglist>(double s, const G3D::Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>G3D::Vector2</type>
      <name>operator*</name>
      <anchorfile>Vector2_8h.html</anchorfile>
      <anchor>a4d5beefaf049ea25bac51ac71eb92502</anchor>
      <arglist>(int s, const G3D::Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Vector2_8h.html</anchorfile>
      <anchor>ab0c1b8ac2a381a40cd4e03f4b8d1d829</anchor>
      <arglist>(const G3D::Vector2 &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector2int16.h</name>
    <path>include/G3D/</path>
    <filename>Vector2int16_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <class kind="class">G3D::Vector2int16</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Vector3.h</name>
    <path>include/G3D/</path>
    <filename>Vector3_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">Vector2.h</includes>
    <class kind="class">G3D::Vector3</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Vector3_8h.html</anchorfile>
      <anchor>a1fb8b2ca1f1ff6412ddbee4322ef7823</anchor>
      <arglist>(const G3D::Vector3 &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Vector3int16.h</name>
    <path>include/G3D/</path>
    <filename>Vector3int16_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <class kind="class">G3D::Vector3int16</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Vector4.h</name>
    <path>include/G3D/</path>
    <filename>Vector4_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">Vector2.h</includes>
    <class kind="class">G3D::Vector4</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>G3D::Vector4</type>
      <name>operator*</name>
      <anchorfile>Vector4_8h.html</anchorfile>
      <anchor>a5594b7739564b3e965f906363f4f49e9</anchor>
      <arglist>(float s, const G3D::Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Vector4_8h.html</anchorfile>
      <anchor>a8d5494a65ec69e86bcae540c6ef4a777</anchor>
      <arglist>(const G3D::Vector4 &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vectorMath.h</name>
    <path>include/G3D/</path>
    <filename>vectorMath_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">g3dmath.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">Vector2.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">Vector3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">Vector4.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" import="no" module="no" objc="no">Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" import="no" module="no" objc="no">Matrix4.h</includes>
    <includes id="Color3_8h" name="Color3.h" local="yes" import="no" module="no" objc="no">Color3.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">Color4.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>G3DAll.h</name>
    <path>include/</path>
    <filename>G3DAll_8h.html</filename>
    <includes id="graphics3D_8h" name="graphics3D.h" local="yes" import="no" module="no" objc="no">graphics3D.h</includes>
    <includes id="GLG3D_8h" name="GLG3D.h" local="yes" import="no" module="no" objc="no">GLG3D.h</includes>
  </compound>
  <compound kind="file">
    <name>GLG3D.h</name>
    <path>include/</path>
    <filename>GLG3D_8h.html</filename>
    <includes id="graphics3D_8h" name="graphics3D.h" local="yes" import="no" module="no" objc="no">graphics3D.h</includes>
    <includes id="glcalls_8h" name="glcalls.h" local="yes" import="no" module="no" objc="no">GLG3D/glcalls.h</includes>
    <includes id="getOpenGLState_8h" name="getOpenGLState.h" local="yes" import="no" module="no" objc="no">GLG3D/getOpenGLState.h</includes>
    <includes id="TextureFormat_8h" name="TextureFormat.h" local="yes" import="no" module="no" objc="no">GLG3D/TextureFormat.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">GLG3D/Texture.h</includes>
    <includes id="glFormat_8h" name="glFormat.h" local="yes" import="no" module="no" objc="no">GLG3D/glFormat.h</includes>
    <includes id="Milestone_8h" name="Milestone.h" local="yes" import="no" module="no" objc="no">GLG3D/Milestone.h</includes>
    <includes id="RenderDevice_8h" name="RenderDevice.h" local="yes" import="no" module="no" objc="no">GLG3D/RenderDevice.h</includes>
    <includes id="VARArea_8h" name="VARArea.h" local="yes" import="no" module="no" objc="no">GLG3D/VARArea.h</includes>
    <includes id="VAR_8h" name="VAR.h" local="yes" import="no" module="no" objc="no">GLG3D/VAR.h</includes>
    <includes id="GFont_8h" name="GFont.h" local="yes" import="no" module="no" objc="no">GLG3D/GFont.h</includes>
    <includes id="LightingParameters_8h" name="LightingParameters.h" local="yes" import="no" module="no" objc="no">GLG3D/LightingParameters.h</includes>
    <includes id="Sky_8h" name="Sky.h" local="yes" import="no" module="no" objc="no">GLG3D/Sky.h</includes>
    <includes id="UserInput_8h" name="UserInput.h" local="yes" import="no" module="no" objc="no">GLG3D/UserInput.h</includes>
    <includes id="ManualCameraController_8h" name="ManualCameraController.h" local="yes" import="no" module="no" objc="no">GLG3D/ManualCameraController.h</includes>
    <includes id="VertexProgram_8h" name="VertexProgram.h" local="yes" import="no" module="no" objc="no">GLG3D/VertexProgram.h</includes>
    <includes id="Draw_8h" name="Draw.h" local="yes" import="no" module="no" objc="no">GLG3D/Draw.h</includes>
    <includes id="tesselate_8h" name="tesselate.h" local="yes" import="no" module="no" objc="no">GLG3D/tesselate.h</includes>
    <includes id="GApp_8h" name="GApp.h" local="yes" import="no" module="no" objc="no">GLG3D/GApp.h</includes>
    <includes id="PosedModel_8h" name="PosedModel.h" local="yes" import="no" module="no" objc="no">GLG3D/PosedModel.h</includes>
    <includes id="IFSModel_8h" name="IFSModel.h" local="yes" import="no" module="no" objc="no">GLG3D/IFSModel.h</includes>
    <includes id="MD2Model_8h" name="MD2Model.h" local="yes" import="no" module="no" objc="no">GLG3D/MD2Model.h</includes>
    <includes id="TextureManager_8h" name="TextureManager.h" local="yes" import="no" module="no" objc="no">GLG3D/TextureManager.h</includes>
    <includes id="shadowVolume_8h" name="shadowVolume.h" local="yes" import="no" module="no" objc="no">GLG3D/shadowVolume.h</includes>
    <includes id="GWindow_8h" name="GWindow.h" local="yes" import="no" module="no" objc="no">GLG3D/GWindow.h</includes>
    <includes id="SDLWindow_8h" name="SDLWindow.h" local="yes" import="no" module="no" objc="no">GLG3D/SDLWindow.h</includes>
    <includes id="edgeFeatures_8h" name="edgeFeatures.h" local="yes" import="no" module="no" objc="no">GLG3D/edgeFeatures.h</includes>
    <includes id="Shader_8h" name="Shader.h" local="yes" import="no" module="no" objc="no">GLG3D/Shader.h</includes>
    <includes id="GLCaps_8h" name="GLCaps.h" local="yes" import="no" module="no" objc="no">GLG3D/GLCaps.h</includes>
    <includes id="Shape_8h" name="Shape.h" local="yes" import="no" module="no" objc="no">GLG3D/Shape.h</includes>
    <includes id="Renderbuffer_8h" name="Renderbuffer.h" local="yes" import="no" module="no" objc="no">GLG3D/Renderbuffer.h</includes>
    <includes id="Framebuffer_8h" name="Framebuffer.h" local="yes" import="no" module="no" objc="no">GLG3D/Framebuffer.h</includes>
    <includes id="GModule_8h" name="GModule.h" local="yes" import="no" module="no" objc="no">GLG3D/GModule.h</includes>
    <includes id="ThirdPersonManipulator_8h" name="ThirdPersonManipulator.h" local="yes" import="no" module="no" objc="no">GLG3D/ThirdPersonManipulator.h</includes>
  </compound>
  <compound kind="file">
    <name>Draw.h</name>
    <path>include/GLG3D/</path>
    <filename>Draw_8h.html</filename>
    <includes id="Color3_8h" name="Color3.h" local="yes" import="no" module="no" objc="no">../G3D/Color3.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">../G3D/Color4.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">../G3D/Vector3.h</includes>
    <includes id="MeshAlg_8h" name="MeshAlg.h" local="yes" import="no" module="no" objc="no">../G3D/MeshAlg.h</includes>
    <includes id="Rect2D_8h" name="Rect2D.h" local="yes" import="no" module="no" objc="no">../G3D/Rect2D.h</includes>
    <includes id="GCamera_8h" name="GCamera.h" local="yes" import="no" module="no" objc="no">../G3D/GCamera.h</includes>
    <class kind="class">G3D::Draw</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>DXCaps.h</name>
    <path>include/GLG3D/</path>
    <filename>DXCaps_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">../G3D/g3dmath.h</includes>
    <class kind="class">G3D::DXCaps</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>edgeFeatures.h</name>
    <path>include/GLG3D/</path>
    <filename>edgeFeatures_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">../G3D/g3dmath.h</includes>
    <includes id="PosedModel_8h" name="PosedModel.h" local="yes" import="no" module="no" objc="no">PosedModel.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Framebuffer.h</name>
    <path>include/GLG3D/</path>
    <filename>Framebuffer_8h.html</filename>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">../G3D/Array.h</includes>
    <includes id="Table_8h" name="Table.h" local="yes" import="no" module="no" objc="no">../G3D/Table.h</includes>
    <includes id="Rect2D_8h" name="Rect2D.h" local="yes" import="no" module="no" objc="no">../G3D/Rect2D.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <includes id="Renderbuffer_8h" name="Renderbuffer.h" local="yes" import="no" module="no" objc="no">Renderbuffer.h</includes>
    <class kind="class">G3D::Framebuffer</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>Framebuffer_8h.html</anchorfile>
      <anchor>a28bf2e9d7e3d6f9583c1397d381c176e</anchor>
      <arglist>(const G3D::Framebuffer::AttachmentPoint &amp;a)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GApp.h</name>
    <path>include/GLG3D/</path>
    <filename>GApp_8h.html</filename>
    <includes id="Stopwatch_8h" name="Stopwatch.h" local="yes" import="no" module="no" objc="no">../G3D/Stopwatch.h</includes>
    <includes id="GFont_8h" name="GFont.h" local="yes" import="no" module="no" objc="no">GFont.h</includes>
    <includes id="GCamera_8h" name="GCamera.h" local="yes" import="no" module="no" objc="no">../G3D/GCamera.h</includes>
    <includes id="ManualCameraController_8h" name="ManualCameraController.h" local="yes" import="no" module="no" objc="no">ManualCameraController.h</includes>
    <includes id="RenderDevice_8h" name="RenderDevice.h" local="yes" import="no" module="no" objc="no">RenderDevice.h</includes>
    <includes id="TextureManager_8h" name="TextureManager.h" local="yes" import="no" module="no" objc="no">TextureManager.h</includes>
    <includes id="NetworkDevice_8h" name="NetworkDevice.h" local="yes" import="no" module="no" objc="no">../G3D/NetworkDevice.h</includes>
    <includes id="GWindow_8h" name="GWindow.h" local="yes" import="no" module="no" objc="no">GWindow.h</includes>
    <includes id="GModule_8h" name="GModule.h" local="yes" import="no" module="no" objc="no">GModule.h</includes>
    <class kind="class">G3D::GApp</class>
    <class kind="class">G3D::GApp::Settings</class>
    <class kind="class">G3D::GApplet</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>getOpenGLState.h</name>
    <path>include/GLG3D/</path>
    <filename>getOpenGLState_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="glcalls_8h" name="glcalls.h" local="yes" import="no" module="no" objc="no">glcalls.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>GFont.h</name>
    <path>include/GLG3D/</path>
    <filename>GFont_8h.html</filename>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <includes id="BinaryInput_8h" name="BinaryInput.h" local="yes" import="no" module="no" objc="no">../G3D/BinaryInput.h</includes>
    <includes id="CoordinateFrame_8h" name="CoordinateFrame.h" local="yes" import="no" module="no" objc="no">../G3D/CoordinateFrame.h</includes>
    <class kind="class">G3D::GFont</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>glcalls.h</name>
    <path>include/GLG3D/</path>
    <filename>glcalls_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">../G3D/Vector2.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">../G3D/Vector3.h</includes>
    <includes id="Vector3int16_8h" name="Vector3int16.h" local="yes" import="no" module="no" objc="no">../G3D/Vector3int16.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">../G3D/Vector4.h</includes>
    <includes id="Color3_8h" name="Color3.h" local="yes" import="no" module="no" objc="no">../G3D/Color3.h</includes>
    <includes id="Color3uint8_8h" name="Color3uint8.h" local="yes" import="no" module="no" objc="no">../G3D/Color3uint8.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">../G3D/Color4.h</includes>
    <includes id="Color4uint8_8h" name="Color4uint8.h" local="yes" import="no" module="no" objc="no">../G3D/Color4uint8.h</includes>
    <includes id="debugAssert_8h" name="debugAssert.h" local="yes" import="no" module="no" objc="no">../G3D/debugAssert.h</includes>
    <includes id="getOpenGLState_8h" name="getOpenGLState.h" local="yes" import="no" module="no" objc="no">GLG3D/getOpenGLState.h</includes>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>debugAssertGLOk</name>
      <anchorfile>glcalls_8h.html</anchorfile>
      <anchor>a217d3d4aca9349616bd517a107be9465</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GLCaps.h</name>
    <path>include/GLG3D/</path>
    <filename>GLCaps_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Set_8h" name="Set.h" local="yes" import="no" module="no" objc="no">../G3D/Set.h</includes>
    <includes id="NetworkDevice_8h" name="NetworkDevice.h" local="yes" import="no" module="no" objc="no">../G3D/NetworkDevice.h</includes>
    <class kind="class">G3D::GLCaps</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_EXT</name>
      <anchorfile>GLCaps_8h.html</anchorfile>
      <anchor>aae810b857a487e229f70b3d51f9409d1</anchor>
      <arglist>(extname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>glFormat.h</name>
    <path>include/GLG3D/</path>
    <filename>glFormat_8h.html</filename>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">../G3D/g3dmath.h</includes>
    <class kind="class">G3D::_internal::_GLFormat</class>
    <namespace>G3D</namespace>
    <namespace>G3D::_internal</namespace>
    <member kind="define">
      <type>#define</type>
      <name>glFormatOf</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>a3ec7935c5a4599509f6cf591e6eddf9e</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_GLFORMATOF</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>a7d1bdb0acc1e64a69815dc9b434052d1</anchor>
      <arglist>(G3DType, GLType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_GLFORMATOF</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>a890506420c4b8fe70aa88e7d461c5fc4</anchor>
      <arglist>(Vector2, GL_FLOAT) DECLARE_GLFORMATOF(Vector3</arglist>
    </member>
    <member kind="function">
      <type>GL_FLOAT</type>
      <name>DECLARE_GLFORMATOF</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>a6d614b092cfb72be2aabeee7a6cd7d01</anchor>
      <arglist>(Vector4, GL_FLOAT) DECLARE_GLFORMATOF(Vector3int16</arglist>
    </member>
    <member kind="function">
      <type>GL_FLOAT GL_SHORT</type>
      <name>DECLARE_GLFORMATOF</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>ad5a713f51b748326cb5a247511230566</anchor>
      <arglist>(Vector2int16, GL_SHORT) DECLARE_GLFORMATOF(Color3uint8</arglist>
    </member>
    <member kind="function">
      <type>GL_FLOAT GL_SHORT GL_UNSIGNED_BYTE</type>
      <name>DECLARE_GLFORMATOF</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>a73680ca6fd986cf6fe59296d0f8cfa55</anchor>
      <arglist>(Color3, GL_FLOAT) DECLARE_GLFORMATOF(Color4</arglist>
    </member>
    <member kind="function">
      <type>GL_FLOAT GL_SHORT GL_UNSIGNED_BYTE GL_FLOAT</type>
      <name>DECLARE_GLFORMATOF</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>a6386c970c97836beeb0c01638a93721d</anchor>
      <arglist>(Color4uint8, GL_UNSIGNED_BYTE) DECLARE_GLFORMATOF(uint8</arglist>
    </member>
    <member kind="function">
      <type>GL_FLOAT GL_SHORT GL_UNSIGNED_BYTE GL_FLOAT GL_UNSIGNED_BYTE</type>
      <name>DECLARE_GLFORMATOF</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>a6f19ecf89ae435079f116f7a031e02a6</anchor>
      <arglist>(uint16, GL_UNSIGNED_SHORT) DECLARE_GLFORMATOF(uint32</arglist>
    </member>
    <member kind="function">
      <type>GL_FLOAT GL_SHORT GL_UNSIGNED_BYTE GL_FLOAT GL_UNSIGNED_BYTE GL_UNSIGNED_INT</type>
      <name>DECLARE_GLFORMATOF</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>ada19128fc92c4b9029a947e941eb32ba</anchor>
      <arglist>(int8, GL_BYTE) DECLARE_GLFORMATOF(int16</arglist>
    </member>
    <member kind="function">
      <type>GL_FLOAT GL_SHORT GL_UNSIGNED_BYTE GL_FLOAT GL_UNSIGNED_BYTE GL_UNSIGNED_INT GL_SHORT</type>
      <name>DECLARE_GLFORMATOF</name>
      <anchorfile>glFormat_8h.html</anchorfile>
      <anchor>a4e03750f1a8257778c19cfa064adaad8</anchor>
      <arglist>(int32, GL_INT) DECLARE_GLFORMATOF(float</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GModule.h</name>
    <path>include/GLG3D/</path>
    <filename>GModule_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">../G3D/Array.h</includes>
    <includes id="ReferenceCount_8h" name="ReferenceCount.h" local="yes" import="no" module="no" objc="no">../G3D/ReferenceCount.h</includes>
    <includes id="PosedModel_8h" name="PosedModel.h" local="yes" import="no" module="no" objc="no">PosedModel.h</includes>
    <includes id="GWindow_8h" name="GWindow.h" local="yes" import="no" module="no" objc="no">GWindow.h</includes>
    <class kind="class">G3D::GModule</class>
    <class kind="class">G3D::GModuleManager</class>
    <class kind="class">G3D::Manipulator</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>GPUProgram.h</name>
    <path>include/GLG3D/</path>
    <filename>GPUProgram_8h.html</filename>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">../G3D/Vector4.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <includes id="TextInput_8h" name="TextInput.h" local="yes" import="no" module="no" objc="no">../G3D/TextInput.h</includes>
    <includes id="Table_8h" name="Table.h" local="yes" import="no" module="no" objc="no">../G3D/Table.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" import="no" module="no" objc="no">../G3D/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" import="no" module="no" objc="no">../G3D/Matrix4.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">../G3D/Color4.h</includes>
    <includes id="CoordinateFrame_8h" name="CoordinateFrame.h" local="yes" import="no" module="no" objc="no">../G3D/CoordinateFrame.h</includes>
    <class kind="class">G3D::GPUProgram</class>
    <class kind="class">G3D::GPUProgram::BindingTable::Binding</class>
    <class kind="class">G3D::GPUProgram::ArgList</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>GWindow.h</name>
    <path>include/GLG3D/</path>
    <filename>GWindow_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="GImage_8h" name="GImage.h" local="yes" import="no" module="no" objc="no">../G3D/GImage.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">../G3D/Array.h</includes>
    <class kind="class">G3D::GWindow</class>
    <class kind="class">G3D::GWindow::Settings</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>GWindowSettings.h</name>
    <path>include/GLG3D/</path>
    <filename>GWindowSettings_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="GWindow_8h" name="GWindow.h" local="yes" import="no" module="no" objc="no">GWindow.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>IFSModel.h</name>
    <path>include/GLG3D/</path>
    <filename>IFSModel_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Sphere_8h" name="Sphere.h" local="yes" import="no" module="no" objc="no">../G3D/Sphere.h</includes>
    <includes id="AABox_8h" name="AABox.h" local="yes" import="no" module="no" objc="no">../G3D/AABox.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" import="no" module="no" objc="no">../G3D/Box.h</includes>
    <includes id="System_8h" name="System.h" local="yes" import="no" module="no" objc="no">../G3D/System.h</includes>
    <includes id="PosedModel_8h" name="PosedModel.h" local="yes" import="no" module="no" objc="no">PosedModel.h</includes>
    <class kind="class">G3D::IFSModel</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>LightingParameters.h</name>
    <path>include/GLG3D/</path>
    <filename>LightingParameters_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <includes id="Color3_8h" name="Color3.h" local="yes" import="no" module="no" objc="no">../G3D/Color3.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">../G3D/Vector3.h</includes>
    <includes id="CoordinateFrame_8h" name="CoordinateFrame.h" local="yes" import="no" module="no" objc="no">../G3D/CoordinateFrame.h</includes>
    <includes id="GLight_8h" name="GLight.h" local="yes" import="no" module="no" objc="no">../G3D/GLight.h</includes>
    <class kind="class">G3D::LightingParameters</class>
    <class kind="class">G3D::Lighting</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BROWN_UNIVERSITY_LATITUDE</name>
      <anchorfile>LightingParameters_8h.html</anchorfile>
      <anchor>a569c51477bf5f38daa6f0d8ae76c7901</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BROWN_UNIVERSITY_LONGITUDE</name>
      <anchorfile>LightingParameters_8h.html</anchorfile>
      <anchor>a23c2177b069c2ab77b74ab588225eb86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIDEREAL_DAY</name>
      <anchorfile>LightingParameters_8h.html</anchorfile>
      <anchor>ae76e361688d56175e386e0be1ebb744a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ManualCameraController.h</name>
    <path>include/GLG3D/</path>
    <filename>ManualCameraController_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">../G3D/Vector3.h</includes>
    <includes id="CoordinateFrame_8h" name="CoordinateFrame.h" local="yes" import="no" module="no" objc="no">../G3D/CoordinateFrame.h</includes>
    <includes id="GModule_8h" name="GModule.h" local="yes" import="no" module="no" objc="no">GModule.h</includes>
    <class kind="class">G3D::FirstPersonManipulator</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>MD2Model.h</name>
    <path>include/GLG3D/</path>
    <filename>MD2Model_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" import="no" module="no" objc="no">../G3D/Box.h</includes>
    <includes id="Sphere_8h" name="Sphere.h" local="yes" import="no" module="no" objc="no">../G3D/Sphere.h</includes>
    <includes id="RenderDevice_8h" name="RenderDevice.h" local="yes" import="no" module="no" objc="no">RenderDevice.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <includes id="PosedModel_8h" name="PosedModel.h" local="yes" import="no" module="no" objc="no">PosedModel.h</includes>
    <class kind="class">G3D::MD2Model</class>
    <class kind="class">G3D::MD2Model::Pose</class>
    <class kind="class">G3D::MD2Model::PosedMD2Model</class>
    <class kind="class">G3D::MD2Model::PackedGeometry</class>
    <class kind="class">G3D::MD2Model::MD2AnimInfo</class>
    <class kind="class">G3D::MD2Model::Primitive</class>
    <class kind="class">G3D::MD2Model::Primitive::PVertex</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Milestone.h</name>
    <path>include/GLG3D/</path>
    <filename>Milestone_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="ReferenceCount_8h" name="ReferenceCount.h" local="yes" import="no" module="no" objc="no">../G3D/ReferenceCount.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">../G3D/Array.h</includes>
    <class kind="class">G3D::Milestone</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>PixelProgram.h</name>
    <path>include/GLG3D/</path>
    <filename>PixelProgram_8h.html</filename>
    <includes id="GPUProgram_8h" name="GPUProgram.h" local="yes" import="no" module="no" objc="no">GPUProgram.h</includes>
    <class kind="class">G3D::PixelProgram</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>PosedModel.h</name>
    <path>include/GLG3D/</path>
    <filename>PosedModel_8h.html</filename>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">../G3D/Array.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <includes id="LightingParameters_8h" name="LightingParameters.h" local="yes" import="no" module="no" objc="no">LightingParameters.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">../G3D/Color4.h</includes>
    <includes id="MeshAlg_8h" name="MeshAlg.h" local="yes" import="no" module="no" objc="no">../G3D/MeshAlg.h</includes>
    <class kind="class">G3D::GMaterial</class>
    <class kind="class">G3D::PosedModel</class>
    <class kind="class">G3D::PosedModelWrapper</class>
    <class kind="class">G3D::PosedModel2D</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Renderbuffer.h</name>
    <path>include/GLG3D/</path>
    <filename>Renderbuffer_8h.html</filename>
    <includes id="ReferenceCount_8h" name="ReferenceCount.h" local="yes" import="no" module="no" objc="no">../G3D/ReferenceCount.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">../G3D/Vector2.h</includes>
    <includes id="Rect2D_8h" name="Rect2D.h" local="yes" import="no" module="no" objc="no">../G3D/Rect2D.h</includes>
    <class kind="class">G3D::Renderbuffer</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>RenderDevice.h</name>
    <path>include/GLG3D/</path>
    <filename>RenderDevice_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">../G3D/Array.h</includes>
    <includes id="GLight_8h" name="GLight.h" local="yes" import="no" module="no" objc="no">../G3D/GLight.h</includes>
    <includes id="TextOutput_8h" name="TextOutput.h" local="yes" import="no" module="no" objc="no">../G3D/TextOutput.h</includes>
    <includes id="MeshAlg_8h" name="MeshAlg.h" local="yes" import="no" module="no" objc="no">../G3D/MeshAlg.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <includes id="Milestone_8h" name="Milestone.h" local="yes" import="no" module="no" objc="no">Milestone.h</includes>
    <includes id="VertexProgram_8h" name="VertexProgram.h" local="yes" import="no" module="no" objc="no">VertexProgram.h</includes>
    <includes id="PixelProgram_8h" name="PixelProgram.h" local="yes" import="no" module="no" objc="no">PixelProgram.h</includes>
    <includes id="Shader_8h" name="Shader.h" local="yes" import="no" module="no" objc="no">Shader.h</includes>
    <includes id="VARArea_8h" name="VARArea.h" local="yes" import="no" module="no" objc="no">VARArea.h</includes>
    <includes id="GWindowSettings_8h" name="GWindowSettings.h" local="yes" import="no" module="no" objc="no">GWindowSettings.h</includes>
    <includes id="GWindow_8h" name="GWindow.h" local="yes" import="no" module="no" objc="no">GWindow.h</includes>
    <includes id="GLCaps_8h" name="GLCaps.h" local="yes" import="no" module="no" objc="no">GLCaps.h</includes>
    <includes id="VAR_8h" name="VAR.h" local="yes" import="no" module="no" objc="no">VAR.h</includes>
    <includes id="Framebuffer_8h" name="Framebuffer.h" local="yes" import="no" module="no" objc="no">Framebuffer.h</includes>
    <class kind="class">G3D::RenderDevice</class>
    <class kind="class">G3D::RenderDevice::DebugSettings</class>
    <class kind="class">G3D::RenderDevice::StatusInfo</class>
    <class kind="class">G3D::RenderDevice::RenderState::TextureUnit</class>
    <class kind="class">G3D::RenderDevice::RenderState::Lights</class>
    <class kind="class">G3D::RenderDevice::RenderState::Stencil</class>
    <class kind="class">G3D::RenderDevice::RenderState::Matrices</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BUFFER_SIZE</name>
      <anchorfile>RenderDevice_8h.html</anchorfile>
      <anchor>ad4d796b98c583d49e83adabd74a63bf6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SDLWindow.h</name>
    <path>include/GLG3D/</path>
    <filename>SDLWindow_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="GWindowSettings_8h" name="GWindowSettings.h" local="yes" import="no" module="no" objc="no">GWindowSettings.h</includes>
    <includes id="GWindow_8h" name="GWindow.h" local="yes" import="no" module="no" objc="no">GWindow.h</includes>
    <includes id="glcalls_8h" name="glcalls.h" local="yes" import="no" module="no" objc="no">glcalls.h</includes>
    <class kind="class">G3D::SDLWindow</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Shader.h</name>
    <path>include/GLG3D/</path>
    <filename>Shader_8h.html</filename>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <includes id="Set_8h" name="Set.h" local="yes" import="no" module="no" objc="no">../G3D/Set.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">../G3D/Vector4.h</includes>
    <includes id="CoordinateFrame_8h" name="CoordinateFrame.h" local="yes" import="no" module="no" objc="no">../G3D/CoordinateFrame.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">../G3D/Vector3.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">../G3D/Color4.h</includes>
    <includes id="Color3_8h" name="Color3.h" local="yes" import="no" module="no" objc="no">../G3D/Color3.h</includes>
    <class kind="class">G3D::ObjectShader</class>
    <class kind="class">G3D::VertexAndPixelShader</class>
    <class kind="class">G3D::VertexAndPixelShader::UniformDeclaration</class>
    <class kind="class">G3D::VertexAndPixelShader::GPUShader</class>
    <class kind="class">G3D::VertexAndPixelShader::ArgumentError</class>
    <class kind="class">G3D::VertexAndPixelShader::ArgList</class>
    <class kind="class">G3D::Shader</class>
    <namespace>G3D</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_SHADER</name>
      <anchorfile>Shader_8h.html</anchorfile>
      <anchor>a3912e24f242247276fd0ba4303359916</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>shadowVolume.h</name>
    <path>include/GLG3D/</path>
    <filename>shadowVolume_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="PosedModel_8h" name="PosedModel.h" local="yes" import="no" module="no" objc="no">PosedModel.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Shape.h</name>
    <path>include/GLG3D/</path>
    <filename>Shape_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="ReferenceCount_8h" name="ReferenceCount.h" local="yes" import="no" module="no" objc="no">../G3D/ReferenceCount.h</includes>
    <includes id="Triangle_8h" name="Triangle.h" local="yes" import="no" module="no" objc="no">../G3D/Triangle.h</includes>
    <includes id="Sphere_8h" name="Sphere.h" local="yes" import="no" module="no" objc="no">../G3D/Sphere.h</includes>
    <includes id="Plane_8h" name="Plane.h" local="yes" import="no" module="no" objc="no">../G3D/Plane.h</includes>
    <includes id="Ray_8h" name="Ray.h" local="yes" import="no" module="no" objc="no">../G3D/Ray.h</includes>
    <includes id="Cylinder_8h" name="Cylinder.h" local="yes" import="no" module="no" objc="no">../G3D/Cylinder.h</includes>
    <includes id="Capsule_8h" name="Capsule.h" local="yes" import="no" module="no" objc="no">../G3D/Capsule.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">../G3D/Color4.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" import="no" module="no" objc="no">../G3D/Box.h</includes>
    <includes id="AABSPTree_8h" name="AABSPTree.h" local="yes" import="no" module="no" objc="no">../G3D/AABSPTree.h</includes>
    <class kind="class">G3D::Shape</class>
    <class kind="class">G3D::MeshShape</class>
    <class kind="class">G3D::BoxShape</class>
    <class kind="class">G3D::RayShape</class>
    <class kind="class">G3D::AxesShape</class>
    <class kind="class">G3D::CylinderShape</class>
    <class kind="class">G3D::SphereShape</class>
    <class kind="class">G3D::CapsuleShape</class>
    <class kind="class">G3D::PlaneShape</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Sky.h</name>
    <path>include/GLG3D/</path>
    <filename>Sky_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <includes id="RenderDevice_8h" name="RenderDevice.h" local="yes" import="no" module="no" objc="no">RenderDevice.h</includes>
    <class kind="class">G3D::Sky</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>tesselate.h</name>
    <path>include/GLG3D/</path>
    <filename>tesselate_8h.html</filename>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">../G3D/Vector3.h</includes>
    <includes id="Triangle_8h" name="Triangle.h" local="yes" import="no" module="no" objc="no">../G3D/Triangle.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">../G3D/Array.h</includes>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Texture.h</name>
    <path>include/GLG3D/</path>
    <filename>Texture_8h.html</filename>
    <includes id="ReferenceCount_8h" name="ReferenceCount.h" local="yes" import="no" module="no" objc="no">../G3D/ReferenceCount.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">../G3D/Array.h</includes>
    <includes id="TextureFormat_8h" name="TextureFormat.h" local="yes" import="no" module="no" objc="no">TextureFormat.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">../G3D/Vector2.h</includes>
    <class kind="class">G3D::Texture</class>
    <class kind="class">G3D::Texture::Settings</class>
    <class kind="class">G3D::Texture::PreProcess</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>G3D::uint32</type>
      <name>hashCode</name>
      <anchorfile>Texture_8h.html</anchorfile>
      <anchor>a13e97ec351098422cb890cd3faea508d</anchor>
      <arglist>(const G3D::Texture::Parameters &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextureFormat.h</name>
    <path>include/GLG3D/</path>
    <filename>TextureFormat_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <class kind="class">G3D::TextureFormat</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>TextureFormat_8h.html</anchorfile>
      <anchor>af6d296f21d6ae1d9905c6420ef288189</anchor>
      <arglist>(const G3D::TextureFormat *f)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextureManager.h</name>
    <path>include/GLG3D/</path>
    <filename>TextureManager_8h.html</filename>
    <includes id="Table_8h" name="Table.h" local="yes" import="no" module="no" objc="no">../G3D/Table.h</includes>
    <includes id="Texture_8h" name="Texture.h" local="yes" import="no" module="no" objc="no">Texture.h</includes>
    <class kind="class">G3D::TextureManager</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>ThirdPersonManipulator.h</name>
    <path>include/GLG3D/</path>
    <filename>ThirdPersonManipulator_8h.html</filename>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">G3D/Array.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">G3D/Vector3.h</includes>
    <includes id="LineSegment_8h" name="LineSegment.h" local="yes" import="no" module="no" objc="no">G3D/LineSegment.h</includes>
    <includes id="ConvexPolyhedron_8h" name="ConvexPolyhedron.h" local="yes" import="no" module="no" objc="no">G3D/ConvexPolyhedron.h</includes>
    <includes id="ReferenceCount_8h" name="ReferenceCount.h" local="yes" import="no" module="no" objc="no">G3D/ReferenceCount.h</includes>
    <includes id="ManualCameraController_8h" name="ManualCameraController.h" local="yes" import="no" module="no" objc="no">GLG3D/ManualCameraController.h</includes>
    <class kind="class">G3D::_internal::PolyLineGeneric</class>
    <class kind="class">G3D::_internal::UIGeom</class>
    <class kind="class">G3D::ThirdPersonManipulator</class>
    <namespace>G3D</namespace>
    <namespace>G3D::_internal</namespace>
  </compound>
  <compound kind="file">
    <name>UserInput.h</name>
    <path>include/GLG3D/</path>
    <filename>UserInput_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">../G3D/Array.h</includes>
    <includes id="Table_8h" name="Table.h" local="yes" import="no" module="no" objc="no">../G3D/Table.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">../G3D/Vector2.h</includes>
    <includes id="GWindow_8h" name="GWindow.h" local="yes" import="no" module="no" objc="no">GWindow.h</includes>
    <class kind="class">G3D::UserInput</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>VAR.h</name>
    <path>include/GLG3D/</path>
    <filename>VAR_8h.html</filename>
    <includes id="RenderDevice_8h" name="RenderDevice.h" local="yes" import="no" module="no" objc="no">RenderDevice.h</includes>
    <includes id="getOpenGLState_8h" name="getOpenGLState.h" local="yes" import="no" module="no" objc="no">getOpenGLState.h</includes>
    <includes id="glFormat_8h" name="glFormat.h" local="yes" import="no" module="no" objc="no">glFormat.h</includes>
    <includes id="VARArea_8h" name="VARArea.h" local="yes" import="no" module="no" objc="no">VARArea.h</includes>
    <class kind="class">G3D::VAR</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>VARArea.h</name>
    <path>include/GLG3D/</path>
    <filename>VARArea_8h.html</filename>
    <includes id="ReferenceCount_8h" name="ReferenceCount.h" local="yes" import="no" module="no" objc="no">../G3D/ReferenceCount.h</includes>
    <includes id="Milestone_8h" name="Milestone.h" local="yes" import="no" module="no" objc="no">Milestone.h</includes>
    <class kind="class">G3D::VARArea</class>
    <namespace>G3D</namespace>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>VARArea_8h.html</anchorfile>
      <anchor>ac1e49291d5199032e09f11ae25f73fdc</anchor>
      <arglist>(const G3D::VARArea *v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>VertexProgram.h</name>
    <path>include/GLG3D/</path>
    <filename>VertexProgram_8h.html</filename>
    <includes id="GPUProgram_8h" name="GPUProgram.h" local="yes" import="no" module="no" objc="no">GPUProgram.h</includes>
    <class kind="class">G3D::VertexProgram</class>
    <namespace>G3D</namespace>
  </compound>
  <compound kind="file">
    <name>Win32Window.h</name>
    <path>include/GLG3D/</path>
    <filename>Win32Window_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">../G3D/platform.h</includes>
    <includes id="Set_8h" name="Set.h" local="yes" import="no" module="no" objc="no">../G3D/Set.h</includes>
    <includes id="Rect2D_8h" name="Rect2D.h" local="yes" import="no" module="no" objc="no">../G3D/Rect2D.h</includes>
  </compound>
  <compound kind="file">
    <name>X11Window.h</name>
    <path>include/GLG3D/</path>
    <filename>X11Window_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="no" import="no" module="no" objc="no">G3D/platform.h</includes>
    <includes id="SDLWindow_8h" name="SDLWindow.h" local="yes" import="no" module="no" objc="no">SDLWindow.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>G3D_X11WWINDOW_H</name>
      <anchorfile>X11Window_8h.html</anchorfile>
      <anchor>ab20e66ef151cb40226e3dd0beadbc871</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>X11Window</name>
      <anchorfile>X11Window_8h.html</anchorfile>
      <anchor>a73f9bc89eddc4a6b25f99bd81fccafd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graphics3D.h</name>
    <path>include/</path>
    <filename>graphics3D_8h.html</filename>
    <includes id="platform_8h" name="platform.h" local="yes" import="no" module="no" objc="no">G3D/platform.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" import="no" module="no" objc="no">G3D/Array.h</includes>
    <includes id="Queue_8h" name="Queue.h" local="yes" import="no" module="no" objc="no">G3D/Queue.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" import="no" module="no" objc="no">G3D/Crypto.h</includes>
    <includes id="format_8h" name="format.h" local="yes" import="no" module="no" objc="no">G3D/format.h</includes>
    <includes id="Vector2_8h" name="Vector2.h" local="yes" import="no" module="no" objc="no">G3D/Vector2.h</includes>
    <includes id="Vector3_8h" name="Vector3.h" local="yes" import="no" module="no" objc="no">G3D/Vector3.h</includes>
    <includes id="Vector4_8h" name="Vector4.h" local="yes" import="no" module="no" objc="no">G3D/Vector4.h</includes>
    <includes id="Color3_8h" name="Color3.h" local="yes" import="no" module="no" objc="no">G3D/Color3.h</includes>
    <includes id="Color4_8h" name="Color4.h" local="yes" import="no" module="no" objc="no">G3D/Color4.h</includes>
    <includes id="Matrix3_8h" name="Matrix3.h" local="yes" import="no" module="no" objc="no">G3D/Matrix3.h</includes>
    <includes id="Matrix4_8h" name="Matrix4.h" local="yes" import="no" module="no" objc="no">G3D/Matrix4.h</includes>
    <includes id="CoordinateFrame_8h" name="CoordinateFrame.h" local="yes" import="no" module="no" objc="no">G3D/CoordinateFrame.h</includes>
    <includes id="PhysicsFrame_8h" name="PhysicsFrame.h" local="yes" import="no" module="no" objc="no">G3D/PhysicsFrame.h</includes>
    <includes id="Plane_8h" name="Plane.h" local="yes" import="no" module="no" objc="no">G3D/Plane.h</includes>
    <includes id="Line_8h" name="Line.h" local="yes" import="no" module="no" objc="no">G3D/Line.h</includes>
    <includes id="Ray_8h" name="Ray.h" local="yes" import="no" module="no" objc="no">G3D/Ray.h</includes>
    <includes id="Sphere_8h" name="Sphere.h" local="yes" import="no" module="no" objc="no">G3D/Sphere.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" import="no" module="no" objc="no">G3D/Box.h</includes>
    <includes id="AABox_8h" name="AABox.h" local="yes" import="no" module="no" objc="no">G3D/AABox.h</includes>
    <includes id="Cone_8h" name="Cone.h" local="yes" import="no" module="no" objc="no">G3D/Cone.h</includes>
    <includes id="Quat_8h" name="Quat.h" local="yes" import="no" module="no" objc="no">G3D/Quat.h</includes>
    <includes id="stringutils_8h" name="stringutils.h" local="yes" import="no" module="no" objc="no">G3D/stringutils.h</includes>
    <includes id="prompt_8h" name="prompt.h" local="yes" import="no" module="no" objc="no">G3D/prompt.h</includes>
    <includes id="g3derror_8h" name="g3derror.h" local="yes" import="no" module="no" objc="no">G3D/g3derror.h</includes>
    <includes id="Table_8h" name="Table.h" local="yes" import="no" module="no" objc="no">G3D/Table.h</includes>
    <includes id="Set_8h" name="Set.h" local="yes" import="no" module="no" objc="no">G3D/Set.h</includes>
    <includes id="BinaryFormat_8h" name="BinaryFormat.h" local="yes" import="no" module="no" objc="no">G3D/BinaryFormat.h</includes>
    <includes id="BinaryInput_8h" name="BinaryInput.h" local="yes" import="no" module="no" objc="no">G3D/BinaryInput.h</includes>
    <includes id="BinaryOutput_8h" name="BinaryOutput.h" local="yes" import="no" module="no" objc="no">G3D/BinaryOutput.h</includes>
    <includes id="debug_8h" name="debug.h" local="yes" import="no" module="no" objc="no">G3D/debug.h</includes>
    <includes id="G3DGameUnits_8h" name="G3DGameUnits.h" local="yes" import="no" module="no" objc="no">G3D/G3DGameUnits.h</includes>
    <includes id="g3dmath_8h" name="g3dmath.h" local="yes" import="no" module="no" objc="no">G3D/g3dmath.h</includes>
    <includes id="fileutils_8h" name="fileutils.h" local="yes" import="no" module="no" objc="no">G3D/fileutils.h</includes>
    <includes id="ReferenceCount_8h" name="ReferenceCount.h" local="yes" import="no" module="no" objc="no">G3D/ReferenceCount.h</includes>
    <includes id="GImage_8h" name="GImage.h" local="yes" import="no" module="no" objc="no">G3D/GImage.h</includes>
    <includes id="CollisionDetection_8h" name="CollisionDetection.h" local="yes" import="no" module="no" objc="no">G3D/CollisionDetection.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" import="no" module="no" objc="no">G3D/Log.h</includes>
    <includes id="TextInput_8h" name="TextInput.h" local="yes" import="no" module="no" objc="no">G3D/TextInput.h</includes>
    <includes id="NetAddress_8h" name="NetAddress.h" local="yes" import="no" module="no" objc="no">G3D/NetAddress.h</includes>
    <includes id="NetworkDevice_8h" name="NetworkDevice.h" local="yes" import="no" module="no" objc="no">G3D/NetworkDevice.h</includes>
    <includes id="System_8h" name="System.h" local="yes" import="no" module="no" objc="no">G3D/System.h</includes>
    <includes id="spline_8h" name="spline.h" local="yes" import="no" module="no" objc="no">G3D/spline.h</includes>
    <includes id="LineSegment_8h" name="LineSegment.h" local="yes" import="no" module="no" objc="no">G3D/LineSegment.h</includes>
    <includes id="Capsule_8h" name="Capsule.h" local="yes" import="no" module="no" objc="no">G3D/Capsule.h</includes>
    <includes id="Cylinder_8h" name="Cylinder.h" local="yes" import="no" module="no" objc="no">G3D/Cylinder.h</includes>
    <includes id="Triangle_8h" name="Triangle.h" local="yes" import="no" module="no" objc="no">G3D/Triangle.h</includes>
    <includes id="Color3uint8_8h" name="Color3uint8.h" local="yes" import="no" module="no" objc="no">G3D/Color3uint8.h</includes>
    <includes id="Color4uint8_8h" name="Color4uint8.h" local="yes" import="no" module="no" objc="no">G3D/Color4uint8.h</includes>
    <includes id="Vector2int16_8h" name="Vector2int16.h" local="yes" import="no" module="no" objc="no">G3D/Vector2int16.h</includes>
    <includes id="Vector3int16_8h" name="Vector3int16.h" local="yes" import="no" module="no" objc="no">G3D/Vector3int16.h</includes>
    <includes id="ConvexPolyhedron_8h" name="ConvexPolyhedron.h" local="yes" import="no" module="no" objc="no">G3D/ConvexPolyhedron.h</includes>
    <includes id="Discovery_8h" name="Discovery.h" local="yes" import="no" module="no" objc="no">G3D/Discovery.h</includes>
    <includes id="MeshAlg_8h" name="MeshAlg.h" local="yes" import="no" module="no" objc="no">G3D/MeshAlg.h</includes>
    <includes id="vectorMath_8h" name="vectorMath.h" local="yes" import="no" module="no" objc="no">G3D/vectorMath.h</includes>
    <includes id="Rect2D_8h" name="Rect2D.h" local="yes" import="no" module="no" objc="no">G3D/Rect2D.h</includes>
    <includes id="GCamera_8h" name="GCamera.h" local="yes" import="no" module="no" objc="no">G3D/GCamera.h</includes>
    <includes id="GLight_8h" name="GLight.h" local="yes" import="no" module="no" objc="no">G3D/GLight.h</includes>
    <includes id="AABSPTree_8h" name="AABSPTree.h" local="yes" import="no" module="no" objc="no">G3D/AABSPTree.h</includes>
    <includes id="TextOutput_8h" name="TextOutput.h" local="yes" import="no" module="no" objc="no">G3D/TextOutput.h</includes>
    <includes id="MeshBuilder_8h" name="MeshBuilder.h" local="yes" import="no" module="no" objc="no">G3D/MeshBuilder.h</includes>
    <includes id="Stopwatch_8h" name="Stopwatch.h" local="yes" import="no" module="no" objc="no">G3D/Stopwatch.h</includes>
    <includes id="AtomicInt32_8h" name="AtomicInt32.h" local="yes" import="no" module="no" objc="no">G3D/AtomicInt32.h</includes>
    <includes id="GThread_8h" name="GThread.h" local="yes" import="no" module="no" objc="no">G3D/GThread.h</includes>
    <includes id="RegistryUtil_8h" name="RegistryUtil.h" local="yes" import="no" module="no" objc="no">G3D/RegistryUtil.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NOMINMAX</name>
      <anchorfile>graphics3D_8h.html</anchorfile>
      <anchor>a9f918755b601cf4bffca775992e6fb90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::_internal::_BinaryFormat</name>
    <filename>classG3D_1_1__internal_1_1__BinaryFormat.html</filename>
    <templarg>class T</templarg>
    <member kind="function" static="yes">
      <type>static BinaryFormat</type>
      <name>x</name>
      <anchorfile>classG3D_1_1__internal_1_1__BinaryFormat.html</anchorfile>
      <anchor>a9cef0571ad9ff6a9d98eb367699f3aa0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::_internal::_GLFormat</name>
    <filename>classG3D_1_1__internal_1_1__GLFormat.html</filename>
    <templarg>class T</templarg>
    <member kind="function" static="yes">
      <type>static GLenum</type>
      <name>x</name>
      <anchorfile>classG3D_1_1__internal_1_1__GLFormat.html</anchorfile>
      <anchor>a77ad0fc895f169b2262152d28871ed26</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::_WeakPtr</name>
    <filename>classG3D_1_1__WeakPtr.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~_WeakPtr</name>
      <anchorfile>classG3D_1_1__WeakPtr.html</anchorfile>
      <anchor>a1a920e695bfe0eebfb28627311ff4bf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>objectCollected</name>
      <anchorfile>classG3D_1_1__WeakPtr.html</anchorfile>
      <anchor>a41846f8bfa3833b26790828f58c95cf9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>ReferenceCountedObject</name>
      <anchorfile>classG3D_1_1__WeakPtr.html</anchorfile>
      <anchor>a61c1313acb0dba6c7c888a85ed074dea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::_WeakPtrLinkedList</name>
    <filename>classG3D_1_1__WeakPtrLinkedList.html</filename>
    <member kind="function">
      <type></type>
      <name>_WeakPtrLinkedList</name>
      <anchorfile>classG3D_1_1__WeakPtrLinkedList.html</anchorfile>
      <anchor>adbdd78acfaa0df500ff4d1a82caad043</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>_WeakPtrLinkedList</name>
      <anchorfile>classG3D_1_1__WeakPtrLinkedList.html</anchorfile>
      <anchor>a81175902cf345c6f44f17c80b38bb4db</anchor>
      <arglist>(_WeakPtr *p, _WeakPtrLinkedList *n)</arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtr *</type>
      <name>weakPtr</name>
      <anchorfile>classG3D_1_1__WeakPtrLinkedList.html</anchorfile>
      <anchor>a807689461e901c5d994d0c4ad8f6d6b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>next</name>
      <anchorfile>classG3D_1_1__WeakPtrLinkedList.html</anchorfile>
      <anchor>a380082c95a968c4dd12451acd3a1b988</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AABox</name>
    <filename>classG3D_1_1AABox.html</filename>
    <member kind="function">
      <type></type>
      <name>AABox</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a4dbf3a661bee2f64c8404315f1682a60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AABox</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a0fc309dd76d006b6ddd68cc0757d5928</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AABox</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a9427523ab84f32533b56a090eec7a2e1</anchor>
      <arglist>(const Vector3 &amp;low, const Vector3 &amp;high)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a844752cda0705c5a4b8fe290f3f087f4</anchor>
      <arglist>(const Vector3 &amp;low, const Vector3 &amp;high)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>ae5b6f01fed17ee60590259d4740dc930</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a064bee04ccd09dc0a5bfc6ffbec7a68a</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const Vector3 &amp;</type>
      <name>low</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a38b67d8cbd95b805c239f7a8a5a27f60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Vector3 &amp;</type>
      <name>high</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a4298aa3d5fcb61beba6eb1e20d115173</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a7181be2d4ad2c8dd2e626575c64861ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>extent</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>ab2d1484739d675a62d1677585487dfee</anchor>
      <arglist>(int a) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>extent</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a39b88da00c21c70b4d802e2d2cc9d252</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a6abce1bfb9dc6db86ca1da89da2a7362</anchor>
      <arglist>(const class Plane *plane, int numPlanes, int32 &amp;cullingPlaneIndex, const uint32 testMask, uint32 &amp;childMask) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a3dc5b16618387100f775433c68a54bcb</anchor>
      <arglist>(const class Plane *plane, int numPlanes, int32 &amp;cullingPlaneIndex=dummy, const uint32 testMask=0xFFFFFF) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>ae1353bf6de44bf85fa977e1068c6c24f</anchor>
      <arglist>(const Vector3::Axis &amp;axis, float location, AABox &amp;low, AABox &amp;high) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>af810b84e32fb2f23b072219229927ea8</anchor>
      <arglist>(const Array&lt; Plane &gt; &amp;plane, int32 &amp;cullingPlaneIndex, const uint32 testMask, uint32 &amp;childMask) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>ab8f31575a09b1798e13f886d9d8778fd</anchor>
      <arglist>(const Array&lt; Plane &gt; &amp;plane, int32 &amp;cullingPlaneIndex=dummy, const uint32 testMask=-1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a070915d647f67ced64f8f1e9da104095</anchor>
      <arglist>(const Vector3 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>surfaceArea</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>af398ffcc6e02aa210d13013fc9ed5335</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a4cde8ebe4a425eb0783de5e401872140</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a7d2f464e9441075c71ffb1c5985b429b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a330ef8be8c70cc85acb6cd2ef90b75a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomSurfacePoint</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>aa0c313aec8073d222cdd81d03139a614</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>class Box</type>
      <name>toBox</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a31194aa4eac1db7d6e4689bce85107f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>adb0cfe3f41fe20c860e6588d1c6d0bc3</anchor>
      <arglist>(const AABox &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a8e80aaaad34fda1ce11e2f5f01598c66</anchor>
      <arglist>(const class Sphere &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>AABox</type>
      <name>intersect</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>afce98002b19db688ffca0a200641e665</anchor>
      <arglist>(const AABox &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a6fbb0c174ff3d1c04fc76ceefc6557a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>af9f1b919a0b4eb6f4f349418f99cc0ed</anchor>
      <arglist>(const AABox &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a66deddf4eaf9bef698dff588e13275ba</anchor>
      <arglist>(const AABox &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>afe58bf694665f56609149d38348f9825</anchor>
      <arglist>(AABox &amp;out) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const AABox &amp;</type>
      <name>maxFinite</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>af65fb97f566f667d726ae0f865d525f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const AABox &amp;</type>
      <name>inf</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a8ef1c7467819f57abcdcc77388ec0738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const AABox &amp;</type>
      <name>zero</name>
      <anchorfile>classG3D_1_1AABox.html</anchorfile>
      <anchor>a12109440e89fb0c3f090f24862440e93</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AABSPTree</name>
    <filename>classG3D_1_1AABSPTree.html</filename>
    <templarg>class T</templarg>
    <class kind="class">G3D::AABSPTree::BoxIntersectionIterator</class>
    <class kind="class">G3D::AABSPTree::Iterator</class>
    <class kind="class">G3D::AABSPTree::RayIntersectionIterator</class>
    <member kind="function">
      <type></type>
      <name>AABSPTree</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>ab39c8eaa17b1d15a6e8851eaa0f00a39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AABSPTree</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>ab479472331fbde38d06f1637cd8ea501</anchor>
      <arglist>(const AABSPTree &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>AABSPTree &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a22b4e4d6c37eddbdd7e212697dac33e0</anchor>
      <arglist>(const AABSPTree &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AABSPTree</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>ab9491b43802c2be1c6b216dde8087580</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>abf8999f9d5cf0c1f125d92dddae404c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a98cf76177bab85d84b27c575430b5898</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a3305c887f3fabc323076916e62dc600a</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a877c04a7e0db4402af68128be7020b8c</anchor>
      <arglist>(const Array&lt; T &gt; &amp;valueArray)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a2889d5212ec48d3db2eb0e3335ca6012</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>aeff44dc2b29b25cbad05a51b826926fa</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>af5a5392675e92c1850fda4a19d7e8508</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>balance</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a4a6fd25e3587379ce042f3a5a07890a3</anchor>
      <arglist>(int valuesPerNode=5, int numMeanSplits=3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getIntersectingMembers</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>aa0e0e74a1981eccfde88aaad50c21a8e</anchor>
      <arglist>(const Array&lt; Plane &gt; &amp;plane, Array&lt; T &gt; &amp;members) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getIntersectingMembers</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>ac61149ecde223c5d54e2a10a4de716a7</anchor>
      <arglist>(const GCamera::Frustum &amp;frustum, Array&lt; T &gt; &amp;members) const</arglist>
    </member>
    <member kind="function">
      <type>BoxIntersectionIterator</type>
      <name>beginBoxIntersection</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>abb776071207ead89f8f99bd289fee2df</anchor>
      <arglist>(const AABox &amp;box) const</arglist>
    </member>
    <member kind="function">
      <type>BoxIntersectionIterator</type>
      <name>endBoxIntersection</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>aef551d40711e1fb91dfb03493aea2a75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getIntersectingMembers</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a6f6046a1e16119699051138688e77c68</anchor>
      <arglist>(const AABox &amp;box, Array&lt; T &gt; &amp;members) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getIntersectingMembers</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a65f8ad62415cd45319fc90f9aee2974a</anchor>
      <arglist>(const Sphere &amp;sphere, Array&lt; T &gt; &amp;members) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serializeStructure</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a0b55260b2a38eea8af36658595fda47d</anchor>
      <arglist>(BinaryOutput &amp;bo) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserializeStructure</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>ab27f8a481454cb3a38e21e252b992b15</anchor>
      <arglist>(BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>RayIntersectionIterator</type>
      <name>beginRayIntersection</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a606233c6af815416a8f76760bdb04df5</anchor>
      <arglist>(const Ray &amp;ray, bool skipAABoxTests=false) const</arglist>
    </member>
    <member kind="function">
      <type>RayIntersectionIterator</type>
      <name>endRayIntersection</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a1d0e06d67410dc6d46c2588e2d397ce5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMembers</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a0d307db4cc35ea09d19c740b77b5ad31</anchor>
      <arglist>(Array&lt; T &gt; &amp;members) const</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>begin</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>aadf1164b901180d128560701f73b3ce7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>end</name>
      <anchorfile>classG3D_1_1AABSPTree.html</anchorfile>
      <anchor>a5ff39e5a0a196b378c6383edc058bad1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AnyVal</name>
    <filename>classG3D_1_1AnyVal.html</filename>
    <class kind="class">G3D::AnyVal::CorruptText</class>
    <class kind="class">G3D::AnyVal::Exception</class>
    <class kind="class">G3D::AnyVal::IndexOutOfBounds</class>
    <class kind="class">G3D::AnyVal::KeyNotFound</class>
    <class kind="class">G3D::AnyVal::WrongType</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NIL</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda0edf70b26df8b0cf8af1b8620a49c35a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda9f122ca7ecd704b42bc808133df967b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda9a75ee26a0a8b41a1d4d46eec1d88bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdaf3223af924d7b7a2d64315be922b990c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR2</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdabdc39e0fd0a08b81b6fa7d638ba2534c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdaa9e3bb91b6b8ed0228e0e8242aaf9c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda0bfcb2b6b3803426004e0ef4eb4c4c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MATRIX3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda513a22daf7ff9434a67ddd4db2e8f6d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MATRIX4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda4a1c20b85c7247b0585cc08fed4c3ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUAT</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda9c0b7ab7aec22e6020366422416defa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COORDINATEFRAME</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdab0024d0942d979e52d4e0c689ed535c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda6624b957ba9c9e47e6a9d18ff7b24186</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda09e597e56fe34bae45084370e1724b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdab2002a718e89c24080e021e78efb5b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TABLE</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda51a388405026c48f0c3dd56f8cb474bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NIL</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda0edf70b26df8b0cf8af1b8620a49c35a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda9f122ca7ecd704b42bc808133df967b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda9a75ee26a0a8b41a1d4d46eec1d88bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdaf3223af924d7b7a2d64315be922b990c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR2</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdabdc39e0fd0a08b81b6fa7d638ba2534c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdaa9e3bb91b6b8ed0228e0e8242aaf9c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda0bfcb2b6b3803426004e0ef4eb4c4c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MATRIX3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda513a22daf7ff9434a67ddd4db2e8f6d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MATRIX4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda4a1c20b85c7247b0585cc08fed4c3ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUAT</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda9c0b7ab7aec22e6020366422416defa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COORDINATEFRAME</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdab0024d0942d979e52d4e0c689ed535c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda6624b957ba9c9e47e6a9d18ff7b24186</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda09e597e56fe34bae45084370e1724b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fdab2002a718e89c24080e021e78efb5b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TABLE</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ade1cb467d95f5a2ed384b398c9f958fda51a388405026c48f0c3dd56f8cb474bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a1232bc8185f80e2667e8b1faa4704f9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a577999ad094c10fb0f4922f0f1ebd2c8</anchor>
      <arglist>(G3D::TextInput &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ae059e4a571f7ce5d3c78253934957c71</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a8a5a38d139182c00a1121bbb2433560a</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a1c6811a3503f14059d5a3aa14fa654f4</anchor>
      <arglist>(const G3D::Vector2 &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a8b7c757eb478018dfe8c031dba792730</anchor>
      <arglist>(const G3D::Vector3 &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ac9b48107a72108c3d908518f54ff2149</anchor>
      <arglist>(const G3D::Vector4 &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a58a284b621db7c0de6acd81d22a8e0bc</anchor>
      <arglist>(const G3D::Color3 &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a6f40b6d90cf780e424e013e7b9c0ca0f</anchor>
      <arglist>(const G3D::Color4 &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ab075db8462f8e795d4c9eb874b901a66</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>aa54dfc1c9ec0ad857803528cf2049327</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ad6e0653431b8cada2f563bd39f79dba8</anchor>
      <arglist>(const G3D::Quat &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a0e57d648e76a54fbe5dc67951de9a653</anchor>
      <arglist>(const G3D::CoordinateFrame &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a23d49db759e9eafae2bc709b717d5bea</anchor>
      <arglist>(const G3D::Matrix3 &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ae67928fd596f2e16192ec72ef229de35</anchor>
      <arglist>(const G3D::Matrix4 &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a2a48397588657ffddfbaa1f76fac05f2</anchor>
      <arglist>(const AnyVal &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a39a380b89efcb19ec0096efd95974eec</anchor>
      <arglist>(Type arrayOrTable)</arglist>
    </member>
    <member kind="function">
      <type>AnyVal &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a1513ddd62079d1b42a9e4f0169477823</anchor>
      <arglist>(const AnyVal &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AnyVal</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a9c64f4238c0ef8479afa39fabe7d4402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a4253ae5c05bdd085a7268b533edb6ff3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a13733249adcc1c4df1e29be1ac855a7a</anchor>
      <arglist>(G3D::TextOutput &amp;t) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ab1529806ce53fcc272783d9617f1be8c</anchor>
      <arglist>(G3D::TextInput &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>number</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ac78ab7575fc8feb08a6fd2b58473b871</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>number</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a8333fecec3ecdbf2636d7fa05eef6004</anchor>
      <arglist>(double defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>boolean</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ac536559af092c0e6d69794db61e0a0c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>boolean</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a21a07eeba0300d6405b6faeab2f21525</anchor>
      <arglist>(bool b) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>string</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>af7437a48e763a0bb525e25e696296e57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>string</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a53bce1417a7b4cb23175d2d4e152e0bb</anchor>
      <arglist>(const std::string &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Vector2 &amp;</type>
      <name>vector2</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a5e900adae2b2c9aeceba3734c0208ba0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Vector2 &amp;</type>
      <name>vector2</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a11ec6263dad45216e58f366560c1794a</anchor>
      <arglist>(const G3D::Vector2 &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Vector3 &amp;</type>
      <name>vector3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>aef69d3428ed56154385627e5e88187f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Vector3 &amp;</type>
      <name>vector3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a7875007ad886a077c79de59f608ad475</anchor>
      <arglist>(const G3D::Vector3 &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Vector4 &amp;</type>
      <name>vector4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ada727b17ddffeb250ec278b95e5b9c84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Vector4 &amp;</type>
      <name>vector4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a88ea657a21a44888ea26dc3ac72c28f2</anchor>
      <arglist>(const G3D::Vector4 &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Color3 &amp;</type>
      <name>color3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ad78247a6bcbf25e866395efc628d85b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Color3 &amp;</type>
      <name>color3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>adce46583fa2cc4022c28453d4975b9c7</anchor>
      <arglist>(const G3D::Color3 &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Color4 &amp;</type>
      <name>color4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>af5265563b6b57446866dd200f76b20cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Color4 &amp;</type>
      <name>color4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a63a62be182e709a8261843be36164347</anchor>
      <arglist>(const G3D::Color4 &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::CoordinateFrame &amp;</type>
      <name>coordinateFrame</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>abff3cf0ed58269640425c8dba0ed3cd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::CoordinateFrame &amp;</type>
      <name>coordinateFrame</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ab19bc98a0502961a9f6431b64eed1b2c</anchor>
      <arglist>(const G3D::CoordinateFrame &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Matrix3 &amp;</type>
      <name>matrix3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>aa34efe1f92ad935ec51dcf22e02643d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Matrix3 &amp;</type>
      <name>matrix3</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a2e229b3416602d7af8454d855bd5783a</anchor>
      <arglist>(const G3D::Matrix3 &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Matrix4 &amp;</type>
      <name>matrix4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a1703b5f3379f8b1a8bcbb9cf6a930e24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Matrix4 &amp;</type>
      <name>matrix4</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a088a5da96dba194a6f58519c5c9c2840</anchor>
      <arglist>(const G3D::Matrix4 &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Quat &amp;</type>
      <name>quat</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a67017c7d29f9613c7bea09f527cd83ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const G3D::Quat &amp;</type>
      <name>quat</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a0ec97ace43cdf65d28a91b93c115a6ad</anchor>
      <arglist>(const G3D::Quat &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const AnyVal &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ae9cd9d507b13b986f5998a43f346e97e</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a3fb5bcc003e206d0a675a220b144e058</anchor>
      <arglist>(const AnyVal &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AnyVal &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a67b155f01277b3015836f81dc9b73353</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const AnyVal &amp;</type>
      <name>get</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a987d4190e9391aa1f5485ddcc5833987</anchor>
      <arglist>(int i, const AnyVal &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const AnyVal &amp;</type>
      <name>get</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a55ab08609db645474ab4826c589fa34c</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>const AnyVal &amp;</type>
      <name>get</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>af94e682b3b81b0137dccc685ede58044</anchor>
      <arglist>(const std::string &amp;key, const AnyVal &amp;defaultVal) const</arglist>
    </member>
    <member kind="function">
      <type>const AnyVal &amp;</type>
      <name>get</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>af94f93fe78bbe8ed997d879bf4a2c895</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>const AnyVal &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ab401d4f8618fe0ff1d751fe13379b718</anchor>
      <arglist>(const std::string &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>AnyVal &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a8f4880d3e2cb2b87e76e1604b1ac769d</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>a2565b72bc5d08d24b31a43b80dd382e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getKeys</name>
      <anchorfile>classG3D_1_1AnyVal.html</anchorfile>
      <anchor>ae147b8631934cf691ece523d1f78719e</anchor>
      <arglist>(G3D::Array&lt; std::string &gt; &amp;) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GPUProgram::ArgList</name>
    <filename>classG3D_1_1GPUProgram_1_1ArgList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1ArgList.html</anchorfile>
      <anchor>a7fc46f0bd988916e9d5c8a8e3bd0ba6e</anchor>
      <arglist>(const std::string &amp;var, const TextureRef &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1ArgList.html</anchorfile>
      <anchor>a52ffcac5ba55757b8fdbf3d63a74a2ee</anchor>
      <arglist>(const std::string &amp;var, const CoordinateFrame &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1ArgList.html</anchorfile>
      <anchor>ac0f0a102ba6dcd400cec9e9b9e773413</anchor>
      <arglist>(const std::string &amp;var, const Matrix4 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1ArgList.html</anchorfile>
      <anchor>aa760661a1963b0a112d47895265a6fd1</anchor>
      <arglist>(const std::string &amp;var, const Vector4 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1ArgList.html</anchorfile>
      <anchor>ac8ce06401d0c9dce8bcda95b46c2bd1e</anchor>
      <arglist>(const std::string &amp;var, const Vector3 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1ArgList.html</anchorfile>
      <anchor>ab6183c62159e3b64958f21e18c8d03b5</anchor>
      <arglist>(const std::string &amp;var, const Vector2 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1ArgList.html</anchorfile>
      <anchor>a40ab5f77ebc1819d1cdacb504ac7ad1c</anchor>
      <arglist>(const std::string &amp;var, float val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1ArgList.html</anchorfile>
      <anchor>af98f6c46b71bdb45df0039e1b20fd182</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>GPUProgram</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1ArgList.html</anchorfile>
      <anchor>a88f09df71018f73f1454e2dbe9ce298b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::VertexAndPixelShader::ArgList</name>
    <filename>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>a627339bc32af11691f0a87e9a011a3c1</anchor>
      <arglist>(const std::string &amp;var, const TextureRef &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>af3c9ec181ceab3e8e101394c56800bfa</anchor>
      <arglist>(const std::string &amp;var, const CoordinateFrame &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>a3c2c52b0e0eebf540a1666c025674267</anchor>
      <arglist>(const std::string &amp;var, const Matrix4 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>aef2434cb5f9d92f852f876ba5f4afc01</anchor>
      <arglist>(const std::string &amp;var, const Color4 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>ad4f2d6bb8773961f20973ce304bc2e62</anchor>
      <arglist>(const std::string &amp;var, const Color3 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>a97522e73999f3a03535162182debb5d0</anchor>
      <arglist>(const std::string &amp;var, const Vector4 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>a61bd2f32b4689d877ac48e9cefa17c18</anchor>
      <arglist>(const std::string &amp;var, const Vector3 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>a336c1a5a7e4434bae4348087f6d32ef1</anchor>
      <arglist>(const std::string &amp;var, const Vector2 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>a376ea177d3a37dc05fd04109167f47e3</anchor>
      <arglist>(const std::string &amp;var, float val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>aec1fe0ae0e8b89c730702264c93be2bb</anchor>
      <arglist>(const std::string &amp;arrayName, const G3D::Array&lt; T &gt; &amp;arrayVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>abff9f6ea941eb40c35cb2a6553249eac</anchor>
      <arglist>(const std::string &amp;arrayName, const std::vector&lt; T &gt; &amp;arrayVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>aed2f3446077eb1e851b11dd4a5dcd2cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>VertexAndPixelShader</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgList.html</anchorfile>
      <anchor>ad4fe11af76bf78bcfe35662c4fdef729</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::VertexAndPixelShader::ArgumentError</name>
    <filename>classG3D_1_1VertexAndPixelShader_1_1ArgumentError.html</filename>
    <member kind="function">
      <type></type>
      <name>ArgumentError</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgumentError.html</anchorfile>
      <anchor>a7508b540c621d93635aeb2b0e821b7bb</anchor>
      <arglist>(const std::string &amp;m)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1ArgumentError.html</anchorfile>
      <anchor>a321c1bff2d595336ec64f39e2d552303</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Array</name>
    <filename>classG3D_1_1Array.html</filename>
    <templarg>class T</templarg>
    <member kind="typedef">
      <type>T *</type>
      <name>Iterator</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>ab1fa730d27ca6421d64b57d3f1f8a49e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>ConstIterator</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a116017c89ec66a0070885d4decb13175</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>begin</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a1451972f3add0f8bb32679c11a8fbe65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a9de333d9c8f2b4ffc22155fec35c83aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a8cc5ab86c045b15ec55e9200c57a73ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>end</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a08d5eb90a2d47f4e73ec063a3215a384</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getCArray</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a328f6b01784074b11063c6eb1dc4ed9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getCArray</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>ae2614939432453dfaeee00c59a7152b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a55c415d5667e7887b1e561dd0f6ce695</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a40329929ebde6ab19f770084c59e5697</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>acef8eebfbff4946d725691a2cf2c9e82</anchor>
      <arglist>(const Array &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a576c00df0e1844161ce90f53ff60a7ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a76280d241bad0107f867d9a44f5a82bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fastClear</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>aab98941bc36d98fd78d934e7599970c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>adafed67fcfddc894106901e38c650e48</anchor>
      <arglist>(const Array &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a480111ec0446e72a9002c07caa7d2ec3</anchor>
      <arglist>(const std::vector&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a5a3e4b0cd9c4c271cd2ddceefbc77a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a4dfbf0f1567e104795cb3983a6f7530d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fastRemove</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a18e16e0f7cd3d14692f69f57769b0cb8</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a41faef0c1bf1c6a9c26c7cf6510c368a</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>ad0227c7ddfd463f4409e915d753ebfc3</anchor>
      <arglist>(int n, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a639c05a238a545af897da59a1682ff71</anchor>
      <arglist>(int n, bool shrinkIfNecessary)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>adc530769b01f41e916211c3b3705dfe5</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a48cadc1e4d5b11416dd912d0286f8202</anchor>
      <arglist>(const T &amp;v1, const T &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a4222f71f471130b9dff151acfdb5ffe9</anchor>
      <arglist>(const T &amp;v1, const T &amp;v2, const T &amp;v3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a212468b37bf218345c5c2f0635c2cec1</anchor>
      <arglist>(const T &amp;v1, const T &amp;v2, const T &amp;v3, const T &amp;v4)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>adb4b2e9264f16d5a33a193445236f18d</anchor>
      <arglist>(const T &amp;e) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>aaa1fde90289d81ded8c633efd2e46198</anchor>
      <arglist>(const Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>next</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>ae16f6b12ebc2286c4b77209161e58912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a3a67bd3a2b7d69d5602b299fc54a855c</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>abccd92e2437c8cfbae19223f74b434bb</anchor>
      <arglist>(const Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a6396f43cdb69227f677b5315661298b9</anchor>
      <arglist>(const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a6508865c9e2da45c839b5f4fad2ffba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>capacity</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>aaa37c34296bd0daea6f91492a7a05dbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>front</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>aebb38955132e795a05dce4a158aa0fda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>front</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>ac4dc254df90e975c3cad0377d514be1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pop</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>abb9d9b65d2c02c245dac3fa9c783d9b5</anchor>
      <arglist>(bool shrinkUnderlyingArrayIfNecessary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popDiscard</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a48856ab2fec5b4d20ccfa60688ae4e91</anchor>
      <arglist>(bool shrinkUnderlyingArrayIfNecessary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a4497061cd231e2d121bf9314c32556ca</anchor>
      <arglist>(Array&lt; T &gt; &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a23bd7ee0e8f3c8bb51c715359b778237</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>ad0783578fd08a9147143e9b3729319bc</anchor>
      <arglist>(unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>aaa9e7fbbfa4a95b1d99f600f28cc2b3f</anchor>
      <arglist>(int n) const</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a00ad4eb4c4e3edd42e27ed9e8e5dba49</anchor>
      <arglist>(unsigned int n) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>randomElement</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a43d5fa0bbb882edc8f87172b13dd4ed3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>randomElement</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a6aa241b74a2fc3b42194b1f136301c7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>last</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a5f8e5a8ee0b2cf2b512be8970cc4427b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>last</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a924bfaf8c882cc9260a0dce979baf244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAll</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>acb31bb31ef45ac273b3a70859e6f9a7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findIndex</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>af03674d72324c85c7d47f8e135ed0d72</anchor>
      <arglist>(const T &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>find</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a922d3b74a74453f3dbe4f9acf985ead8</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>find</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a3c6158a3e00df79547ba9a8a006275c1</anchor>
      <arglist>(const T &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a11d98c5c7d222969614488d9e621187c</anchor>
      <arglist>(Iterator element, int count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a7d8bcce470e9472100c638dc697167ac</anchor>
      <arglist>(int index, int count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reverse</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>ae5f0c6584650a1dfba6e48f278c42a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>afcef18f267b87bd51290664558dccf5d</anchor>
      <arglist>(bool(__cdecl *lessThan)(const T &amp;elem1, const T &amp;elem2))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a4730b899558a1c217dc602e7fa0b28a6</anchor>
      <arglist>(int direction=SORT_INCREASING)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortSubArray</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a6d2ba11b4b8c60a21000f74ab49dd892</anchor>
      <arglist>(int beginIndex, int endIndex, int direction=SORT_INCREASING)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortSubArray</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a91a0e7d793f59d5569630132c8a492ca</anchor>
      <arglist>(int beginIndex, int endIndex, bool(__cdecl *lessThan)(const T &amp;elem1, const T &amp;elem2))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classG3D_1_1Array.html</anchorfile>
      <anchor>a0e69a4c59f0d8b9c7eb7a380e284ab02</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AtomicInt32</name>
    <filename>classG3D_1_1AtomicInt32.html</filename>
    <member kind="function">
      <type></type>
      <name>AtomicInt32</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>ab1ea672fea76a8239dd29b4f426487ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AtomicInt32</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>a7d1c1b57aeb474de6ea4790dcc18312d</anchor>
      <arglist>(const int32 x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AtomicInt32</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>a323c7a2e5bb2444bc6485b81e392d44c</anchor>
      <arglist>(const AtomicInt32 &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>const AtomicInt32 &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>aaa622a73a6979c95e4c494b5930ed1f0</anchor>
      <arglist>(const int32 x)</arglist>
    </member>
    <member kind="function">
      <type>const void</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>a50691c81540a4f7409e57389719bb1c7</anchor>
      <arglist>(const AtomicInt32 &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>const int32</type>
      <name>value</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>acd112e6a2b412a6279a2b97bfbb6f7f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>add</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>a2952312f5a443dd449a2cea5c5138921</anchor>
      <arglist>(const int32 x)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>sub</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>a264b35c2b45c0c2bc08fbb325f1f8bbd</anchor>
      <arglist>(const int32 x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increment</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>a0afe9492daf54f0d50da9e53ec7fceea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>decrement</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>ac16910aae6befa488cadbf512823e544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>compareAndSet</name>
      <anchorfile>classG3D_1_1AtomicInt32.html</anchorfile>
      <anchor>a3aa4b5a04496b65f6205cf64c602d9ca</anchor>
      <arglist>(const int32 comperand, const int32 exchange)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AxesShape</name>
    <filename>classG3D_1_1AxesShape.html</filename>
    <base>G3D::Shape</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AxesShape</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>af595178c8dd182ed96bb2dd6b4c5b615</anchor>
      <arglist>(const G3D::CoordinateFrame &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>a3a7f6fcd16235adfa11cfe878a407a01</anchor>
      <arglist>(RenderDevice *rd, const CoordinateFrame &amp;cframe, Color4 solidColor=Color4(.5,.5, 0,.5), Color4 wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>affe1d2b9899c5f658f5a1733348b806a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>aa9ef9090eb68f738c891988bed7907f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>afa0822271c99fcab72aa9f7820bcb4a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>a7bcfc3726d3860d15b6732f864d3d533</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>ae395f8d293cb4563b575f80747a02220</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>a819bfce1f962d1f408ceeef949d57a47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>BoundingSphere</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>ade9b31392e4b18848820ad77f200ec18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AABox</type>
      <name>BoundingAABox</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>aa70fc68312ec706f98d04fe06c67d1b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>a9551817ab565a3a5b42e48f128ce65fb</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1AxesShape.html</anchorfile>
      <anchor>a65de368b90c0eeb8fb5bb2463f2d15c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3d43a4cfb48ee5fad4c62a4e563d8f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a8c83969ebefbc0ea6b08c675a4a6da72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cdc30906056508d91c8fbc8012c6e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a62c8b5504a00b0e83384b506ecefa036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ddd2389f3223bcf50c2066e7c877767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cc634a9611ef8f902cd59101b53a471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>ab71af0f244ad7c155a8d3ae9b06786ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3dcd66fc09e3e7542a258cc364a08f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a470ee3f279a66cf7f24a33b3d7882142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>aaa54c9f8e2996ed83cf914dd091f6bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6079582403e91245db8e8c84935d7851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a0c6d6e09678f9fafa99f39c7ad783a48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a717a33c14c235862869010700e1a5c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a875d0e9c54adbe065257157c88a007f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a00d4cb802e7781729454a9f2687e7714</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AABox</type>
      <name>boundingAABox</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ec36af3cb42da07cd27272f8936665f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>typeToString</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a5d042e391bc27f781099b673ac9d8388</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextInput::BadMSVCSpecial</name>
    <filename>classG3D_1_1TextInput_1_1BadMSVCSpecial.html</filename>
    <base>G3D::TextInput::TokenException</base>
    <member kind="function">
      <type></type>
      <name>BadMSVCSpecial</name>
      <anchorfile>classG3D_1_1TextInput_1_1BadMSVCSpecial.html</anchorfile>
      <anchor>a704b0c3c0b055b0c3605ad9ae48d9316</anchor>
      <arglist>(const std::string &amp;src, int ln, int ch)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sourceFile</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>abcd39df9c67e0709fa105fbfd24c8a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>line</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>aaaf3f18635e6a9b3643f28e0cd3f0e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>character</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a5ab563ebe76fef1b28868263ced30047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a9da33e4ac4fa617ce7f19d0014d78cbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::BinaryInput</name>
    <filename>classG3D_1_1BinaryInput.html</filename>
    <member kind="function">
      <type></type>
      <name>BinaryInput</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a0b86d038073d3c69acfffd253491db61</anchor>
      <arglist>(const std::string &amp;filename, G3DEndian fileEndian, bool compressed=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BinaryInput</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a057e8f92903fd975e2ac671d915e199c</anchor>
      <arglist>(const uint8 *data, int dataLen, G3DEndian dataEndian, bool compressed=false, bool copyMemory=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BinaryInput</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a7d6a9065e2466c5e0d09a973fdfa8825</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFilename</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a91a9b19ce55582333624ba6cba8f7b72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const uint8 *</type>
      <name>getCArray</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a16ee56b535bcca9ddac9217a78aa9ae1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const uint8</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a2f3cc39620a985b13756757fa4dbcf46</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLength</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>af4f80649f7536ca3578e5f1f724d6fdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a39521bb5390ab03cc4afd8778ae8674e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPosition</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>ac1cc6c42403e34f89f5389056eadfe23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a7b52fb2d716af3e689d858eea462413f</anchor>
      <arglist>(int p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a012522f2cf7ec32e1f6fcd7d7b0ab8c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int8</type>
      <name>readInt8</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>ae9361fac694f1831d318f30df5709098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readBool8</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a272039e47bb18801661e8e304d0c99ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>readUInt8</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>ae6fa369fac3fd6165e65d175ec2a8a1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>readUInt16</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>afdf79e59843674094c6b60e9f1f099db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16</type>
      <name>readInt16</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>aada12bf2d3b3c5371f6ca19a50542a87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>readUInt32</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>ad286502a19cdea5fffb69e9d9a22e452</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>readInt32</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>af631685e752047af638e4cbb17a05edf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>readUInt64</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a157d1b4a6272d0d4e571246eae41c5e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>readInt64</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>ae45724e0659d969215fac0e5fcfc17d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float32</type>
      <name>readFloat32</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a1d72d61326df183339c28c36b8b77a13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float64</type>
      <name>readFloat64</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a9d3d98d2dc8e9300434b2da2153e5cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readBytes</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a83243fdcfb82e4c6620d308634fcac86</anchor>
      <arglist>(int n, void *bytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readBytes</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a0900e9539ca1bce6cbdd70e8c22b231f</anchor>
      <arglist>(void *bytes, int n)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readString</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a6a7f6841fef5a48d3c75b87220c5b7af</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readString</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>acd3c10cdeb01359669f0c9056224a86a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readStringEven</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>abb6b7d8b35457ceb3c7381f1b392d636</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readString32</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a37bdd967b791b7b0333a3ae6ba4e4195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>readVector4</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a2a2786c6d6f917c58b8f11f070f97bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>readVector3</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a60b869fff8f20e13f6e9d37895e3c2a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>readVector2</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a989526979b198c1dd313467487fc651a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>readColor4</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a4dde6cda1ae4b1c42e35395ad7025af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>readColor3</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>ac0c48c3653dbb2b2395680364bee1d1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skip</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a741e3ef8dcc7a8841792670fa925c7bf</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMore</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>afc24edea1c1e925c988d3a09166e28be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginBits</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a949628bad9e7f092e21538d97680b966</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>readBits</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>ad95e7fce5b813c8a62f6617f65011f97</anchor>
      <arglist>(int numBits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endBits</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>af0c9e6439b0ae1d99f83ec29ab7718a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_READER</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>acde25f813e07b6b8b82b2b1d1297a82f</anchor>
      <arglist>(Bool8, bool) DECLARE_READER(UInt8</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>DECLARE_READER</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a332fd5f520f4675dd017f30cb63fd788</anchor>
      <arglist>(Int8, int8) DECLARE_READER(UInt16</arglist>
    </member>
    <member kind="function">
      <type>uint8 uint16</type>
      <name>DECLARE_READER</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a1a8a74604d1ec98df89bf6e9f4845935</anchor>
      <arglist>(Int16, int16) DECLARE_READER(UInt32</arglist>
    </member>
    <member kind="function">
      <type>uint8 uint16 uint32</type>
      <name>DECLARE_READER</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a1b12d1432ddeb04ab7a50e707ca6c373</anchor>
      <arglist>(Int32, int32) DECLARE_READER(UInt64</arglist>
    </member>
    <member kind="function">
      <type>uint8 uint16 uint32 uint64</type>
      <name>DECLARE_READER</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a3fe4195f1d679aa77669ce33791ed3bf</anchor>
      <arglist>(Int64, int64) DECLARE_READER(Float32</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>NO_COPY</name>
      <anchorfile>classG3D_1_1BinaryInput.html</anchorfile>
      <anchor>a5f17a03d375c69d88b3d4b3796a355d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::BinaryOutput</name>
    <filename>classG3D_1_1BinaryOutput.html</filename>
    <member kind="function">
      <type></type>
      <name>BinaryOutput</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a01a26c1b26c87a2f397d047b2119fe53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BinaryOutput</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a5a842f90cb6e3027b3f999f3ac6991c4</anchor>
      <arglist>(const std::string &amp;filename, G3DEndian fileEndian)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BinaryOutput</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ad83a21dd7b3c393e663d88c5beac1ccd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compress</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a15dd8442db0a89566b0bd135aaacfa09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const uint8 *</type>
      <name>getCArray</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>aded57aafbbf807f2d426cb3202aa16d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEndian</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>aec8848accebaf43af6f0c7669281ffd1</anchor>
      <arglist>(G3DEndian fileEndian)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFilename</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a8740cc3e875129463382ee872a55228a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commit</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a93f77fcfa3e0431539fe93db39d5d1e6</anchor>
      <arglist>(bool flush=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commit</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a36818e9d9a582e39178ceeb9ded73ea9</anchor>
      <arglist>(uint8 *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>afb02e3258aac0dc579e75cb94ae94a33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a7d4d18b871358d691b8e2df071f8dae6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLength</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>adda471dbbfa9cbe3ab0be1c08d5ff153</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a61c77540d485a57cbe9a4d6078e6e5b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLength</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a7991d784de6cc3efa8dcbfa76367096b</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>position</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>aad4dc4a6de5408101261bf17a504b748</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPosition</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a364236b12eff8beb236c73c940ffa40a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ab79d5c34cf99c7dd6198d9fd2fcd4fd8</anchor>
      <arglist>(int p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeBytes</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>aea81b7344494f2dbd89efe8fd387861f</anchor>
      <arglist>(const void *b, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt8</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>af5eb13196acc97e0e36555ee9c00c9a1</anchor>
      <arglist>(int8 i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeBool8</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a6e9ce9c7b89469cd60cdba95e5de7797</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt8</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>adff11850f20074bc194103f90fd4616d</anchor>
      <arglist>(uint8 i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt16</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>acd8c4e144415ad3c7ad913662b50ee39</anchor>
      <arglist>(uint16 u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt16</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a0e3324d4e67f7648299ca7608807478f</anchor>
      <arglist>(int16 i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt32</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ace86e19063539e29efa9293cabf8bcf5</anchor>
      <arglist>(uint32 u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt32</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ae2385d4a431b1a38f385fece22851bb4</anchor>
      <arglist>(int32 i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeUInt64</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ae96dad88ae9559ea8de20d02ba25e141</anchor>
      <arglist>(uint64 u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInt64</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ac1918551f629210662891f0bf55ba6d6</anchor>
      <arglist>(int64 i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeFloat32</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a303e9318672caa53c84580f5f68ffbba</anchor>
      <arglist>(float32 f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeFloat64</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a5696fa270b902b2c9fb0b4356e0e1a85</anchor>
      <arglist>(float64 f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeString</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ac54e68ce01c137007af66a14ac52d775</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeString</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a33343983abf8889625bb8e984ad65e8d</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeStringEven</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a261caae0730a06316fabfdf54b3380c2</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeStringEven</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a260557c5158c0d58749c53f3817022b8</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeString32</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a8ce6b888e7878fbec4585f1f63b1c589</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeString32</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a9ec15dfcdbc25e10223a27c16c4e93e8</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeVector4</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a659d759bb49965a7d5f09d7b5c54f16d</anchor>
      <arglist>(const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeVector3</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ae5c8f1156b5d7955dbbe9018b27a582e</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeVector2</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a097fe56c475dc8fec0e5fb2dc5799047</anchor>
      <arglist>(const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeColor4</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a803b60644fa3662dfff83d8b3c5cd64a</anchor>
      <arglist>(const Color4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeColor3</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>aa5093313e898b0acd623e178321c4222</anchor>
      <arglist>(const Color3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skip</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ad4d3b137789babe21fcafdea7693858d</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginBits</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ad7bad918c2b1f2f6f1fa30ceb2dfa8ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeBits</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>af2af8f1191266f20725b9adbaf5e4ed0</anchor>
      <arglist>(uint32 bitString, int numBits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endBits</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a0288e77b2f3b6f8fb136dec951993c77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_WRITER</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a86328697fcae9b214bdc6451e371e74f</anchor>
      <arglist>(Bool8, bool) DECLARE_WRITER(UInt8</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>DECLARE_WRITER</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a2b1bd4e1596294143971bda27bd7a994</anchor>
      <arglist>(Int8, int8) DECLARE_WRITER(UInt16</arglist>
    </member>
    <member kind="function">
      <type>uint8 uint16</type>
      <name>DECLARE_WRITER</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a6a2f99e91432533fec60f47a2ea67934</anchor>
      <arglist>(Int16, int16) DECLARE_WRITER(UInt32</arglist>
    </member>
    <member kind="function">
      <type>uint8 uint16 uint32</type>
      <name>DECLARE_WRITER</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>ac1c9585501849d03802a85a4e027d47f</anchor>
      <arglist>(Int32, int32) DECLARE_WRITER(UInt64</arglist>
    </member>
    <member kind="function">
      <type>uint8 uint16 uint32 uint64</type>
      <name>DECLARE_WRITER</name>
      <anchorfile>classG3D_1_1BinaryOutput.html</anchorfile>
      <anchor>a23e2b24671c3dbb289283c560127ebf4</anchor>
      <arglist>(Int64, int64) DECLARE_WRITER(Float32</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GPUProgram::BindingTable::Binding</name>
    <filename>classG3D_1_1GPUProgram_1_1BindingTable_1_1Binding.html</filename>
    <member kind="enumvalue">
      <name>UNASSIGNED</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1BindingTable_1_1Binding.html</anchorfile>
      <anchor>aeb88f9a2773bbd17fe5c19e4bc626d39a4035c583f450420e989712605ef8fa8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNASSIGNED</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1BindingTable_1_1Binding.html</anchorfile>
      <anchor>aeb88f9a2773bbd17fe5c19e4bc626d39a4035c583f450420e989712605ef8fa8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1BindingTable_1_1Binding.html</anchorfile>
      <anchor>aa5d53ea3d98cefb5a17fa488b2c1420f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>slot</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1BindingTable_1_1Binding.html</anchorfile>
      <anchor>a3ee7e3cec498ec3528915fcca0f90646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1BindingTable_1_1Binding.html</anchorfile>
      <anchor>ab17447601892c67bb7a27f82a26b245f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Source</type>
      <name>source</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1BindingTable_1_1Binding.html</anchorfile>
      <anchor>a576005e83923ae64c446e756fc12576c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector4</type>
      <name>vector</name>
      <anchorfile>classG3D_1_1GPUProgram_1_1BindingTable_1_1Binding.html</anchorfile>
      <anchor>a44e1b81fb8cc8d64a85d2e26d8df86ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Box</name>
    <filename>classG3D_1_1Box.html</filename>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a78f4c89ddeee3b17c6c2b5ee1750eb0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a9f558a0f4183dceba2502bd516f9c6c0</anchor>
      <arglist>(const Vector3 &amp;min, const Vector3 &amp;max)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a8f438e108fa78d533f96046b5c453850</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a0cb3ebbab2aaa02db7401a0d3c79aa33</anchor>
      <arglist>(const class AABox &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>aecdcae63431a257127728f819324d705</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>af14e2296a4d404b7cf4994d781dc6ea4</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>localFrame</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a5a35a1cd0678bf984490d1481c647318</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalFrame</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a3caef6946aefaedc02a80db7c94ecb13</anchor>
      <arglist>(CoordinateFrame &amp;frame) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>abaf2db6015934968956aac55468ade4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getCenter</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a64503ea896023eaa3dfe95ce44dc693a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getCorner</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a0c2de802f62b2686f3f9e857f5cd66c1</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>corner</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a426b3249a1142d26a9ae96bc70179a3b</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>axis</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a84f27342a3337c08b413eb6b4f211b1f</anchor>
      <arglist>(int a) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>extent</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a8ffd31b9f6b0474e1f2b1eb0d1bb6898</anchor>
      <arglist>(int a) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>extent</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>af6f048edd8cc5e452a334ec9af298fd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFaceCorners</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a89741e2129ccda2f8b299e95b27319e9</anchor>
      <arglist>(int f, Vector3 &amp;v0, Vector3 &amp;v1, Vector3 &amp;v2, Vector3 &amp;v3) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a307532c0f3b8714cae0923d406276bec</anchor>
      <arglist>(const class Plane *plane, int numPlanes, int32 &amp;cullingPlaneIndex, const uint32 testMask, uint32 &amp;childMask) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a707e3650396545a5143075da6d35da29</anchor>
      <arglist>(const class Plane *plane, int numPlanes, int32 &amp;cullingPlaneIndex=dummy, const uint32 testMask=-1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a1f630990ca471ddda9412fa7ae903f3c</anchor>
      <arglist>(const Array&lt; Plane &gt; &amp;plane, int32 &amp;cullingPlaneIndex, const uint32 testMask, uint32 &amp;childMask) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a80232c122fdc5ae237fd63dd9fffc214</anchor>
      <arglist>(const Array&lt; Plane &gt; &amp;plane, int32 &amp;cullingPlaneIndex=dummy, const uint32 testMask=-1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a3db7ad0adaf80cf41596d94b8f39f385</anchor>
      <arglist>(const Vector3 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>surfaceArea</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>aacd67527622014b589c8f6e2b0c6c411</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>aebe868c83deabc82d755a2b47824ce6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a33b76befb289d71cfee0d65ede0ef9e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a3a0ea58e6077b80664113163ab54b92c</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomSurfacePoint</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>ace97911cc0fbb3c3adcf051e08b23425</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a37a2000e7bb66c828a583bed85578423</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a6eb705f466e177fed1fe60ddce3bbf26</anchor>
      <arglist>(class AABox &amp;) const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CoordinateFrame</name>
      <anchorfile>classG3D_1_1Box.html</anchorfile>
      <anchor>a15d2f72dacb32c6fb8d4b6cd31d4948d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AABSPTree::BoxIntersectionIterator</name>
    <filename>classG3D_1_1AABSPTree_1_1BoxIntersectionIterator.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1BoxIntersectionIterator.html</anchorfile>
      <anchor>a630c8d6f7f7bf8ee919f1132dce2d172</anchor>
      <arglist>(const BoxIntersectionIterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1BoxIntersectionIterator.html</anchorfile>
      <anchor>ad9fb124479b3a396bd08dccb1711ae88</anchor>
      <arglist>(const BoxIntersectionIterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BoxIntersectionIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1BoxIntersectionIterator.html</anchorfile>
      <anchor>abb0f106b77210b96add61a13e0091eb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxIntersectionIterator</type>
      <name>operator++</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1BoxIntersectionIterator.html</anchorfile>
      <anchor>a02f811ad851998b58a9700aba502e032</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1BoxIntersectionIterator.html</anchorfile>
      <anchor>a299586acaec6f29398ffb44730da10bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T const *</type>
      <name>operator-&gt;</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1BoxIntersectionIterator.html</anchorfile>
      <anchor>a63ea22ce818db0619f3ccbc8b187d35f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T*</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1BoxIntersectionIterator.html</anchorfile>
      <anchor>a2fd89a9cdee72ee1272d5c74096fbb62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AABSPTree&lt; T &gt;</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1BoxIntersectionIterator.html</anchorfile>
      <anchor>a3c07e9d3aa234b6a7a7ced34ae1dcfb3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::BoxShape</name>
    <filename>classG3D_1_1BoxShape.html</filename>
    <base>G3D::Shape</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxShape</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>ab3af3898c9d2c1d14ef2af3c83ac77ec</anchor>
      <arglist>(const G3D::Box &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxShape</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>a971c1db0468595000ddfa51cd7d7148b</anchor>
      <arglist>(const Vector3 &amp;extent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxShape</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>ac2b22ed3fddcd34304b2a51edc524268</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>ad61f56687056c786a86170456da8b9bd</anchor>
      <arglist>(RenderDevice *rd, const CoordinateFrame &amp;cframe, Color4 solidColor=Color4(.5,.5, 0,.5), Color4 wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>aa94ea2da5ad4edb08366b436722dc249</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>a32eae2e83f0e11de6508a8e044c7633e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>a01236f7b87e2185e890794c89fc7af0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>a7fc25cc4b431573e965e86e93455ed83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>a6ac1ad779954351123adfbcdf023aa8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>ac3a88736c9783b1eb7f040450fbb585e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>a58cbb944d95694ede01caf417ecc9284</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AABox</type>
      <name>boundingAABox</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>ad444f134efe134f18819ad415498f413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>ab4f65a217b6911ac822d32dfb71d1fd3</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1BoxShape.html</anchorfile>
      <anchor>af4eeb883f1b4bdfe1f73c338a60793fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>af24833903a0d3e336c05d3f763b077f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cdc30906056508d91c8fbc8012c6e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a62c8b5504a00b0e83384b506ecefa036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ddd2389f3223bcf50c2066e7c877767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cc634a9611ef8f902cd59101b53a471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>ab71af0f244ad7c155a8d3ae9b06786ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3dcd66fc09e3e7542a258cc364a08f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a470ee3f279a66cf7f24a33b3d7882142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>aaa54c9f8e2996ed83cf914dd091f6bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6079582403e91245db8e8c84935d7851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a0c6d6e09678f9fafa99f39c7ad783a48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a717a33c14c235862869010700e1a5c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a875d0e9c54adbe065257157c88a007f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>typeToString</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a5d042e391bc27f781099b673ac9d8388</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Capsule</name>
    <filename>classG3D_1_1Capsule.html</filename>
    <member kind="function">
      <type></type>
      <name>Capsule</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a615b12bac06d821c893f9333bacebd08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Capsule</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a5aa8b474439bb451cc330cd90e87df65</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Capsule</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a8706f5535d9e862d732cd239008cd2c0</anchor>
      <arglist>(const Vector3 &amp;_p1, const Vector3 &amp;_p2, double _r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a3a87894e46784a7d65efe347638c7f76</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a056a6a95a330438bed46036e451c0c84</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>getAxis</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a2149b05db419306382eaf593a2fc4d29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getPoint1</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>ac095a4a8b5b9a1ce863b818194479b2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getPoint2</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a87f9f50b0a1d235c4b405d359038a28f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>height</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a0e42ba3f54b1cef4818b4efeea53c3a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a8dc5aca7f57e2df5a805ae66f43d44b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getReferenceFrame</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a62ca6aebfa24d115343f00ab4201483a</anchor>
      <arglist>(class CoordinateFrame &amp;cframe) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>ad99299822f06b977051b4197469c3fd3</anchor>
      <arglist>(const Vector3 &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRadius</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>ac244161f89b3731e80da382091395bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolume</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a44199a84e1d54feb06ab028b940b7410</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a2a8170e3c1c8b875bd51c2097f5fc3fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSurfaceArea</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a844c713170b7e7a7a229e4a36c701ab4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>acc689e91c6e8fe0849c4c9762240f958</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>af41e4f1e77edf5159d7d0272d9e4310f</anchor>
      <arglist>(AABox &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>ad8fb38843ed8aa82462e79b947436d7c</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>aebea77c60ae3746e1d1278045df0c707</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>radius</name>
      <anchorfile>classG3D_1_1Capsule.html</anchorfile>
      <anchor>a4bc1a1285748208b9620c2cb8e3c18fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::CapsuleShape</name>
    <filename>classG3D_1_1CapsuleShape.html</filename>
    <base>G3D::Shape</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CapsuleShape</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>a4ad893f87c49275d1f999e09be3ebbd8</anchor>
      <arglist>(const G3D::Capsule &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>ae6474803d6df9d5964af7d1d958bb17b</anchor>
      <arglist>(RenderDevice *rd, const CoordinateFrame &amp;cframe, Color4 solidColor=Color4(.5,.5, 0,.5), Color4 wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>a879628af096d190651275733dc40a75e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>a91dc919a2bf6f23b1b05399bd920f4a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>a6eaa1fe526ef0ac1e462c9f831af18a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>a77e98162f72809d1e00cffcac2a9ddd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>adcac743e78f92da87ab3312d7515e6f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>af4280bcf423802a4d75943364a276f3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>ac6361d0274b81ec088b2c0820c5c0789</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AABox</type>
      <name>boundingAABox</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>a162b0a1353638dbb0d34771b75bb8a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>a1325510c7152b755f6caecd4babf5247</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>a1a4305dd31460f252f08c80b515ea0a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3d43a4cfb48ee5fad4c62a4e563d8f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a8c83969ebefbc0ea6b08c675a4a6da72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>af24833903a0d3e336c05d3f763b077f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cdc30906056508d91c8fbc8012c6e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a62c8b5504a00b0e83384b506ecefa036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ddd2389f3223bcf50c2066e7c877767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cc634a9611ef8f902cd59101b53a471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>ab71af0f244ad7c155a8d3ae9b06786ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3dcd66fc09e3e7542a258cc364a08f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6079582403e91245db8e8c84935d7851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a0c6d6e09678f9fafa99f39c7ad783a48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a717a33c14c235862869010700e1a5c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a875d0e9c54adbe065257157c88a007f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>typeToString</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a5d042e391bc27f781099b673ac9d8388</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable">
      <type>G3D::Capsule</type>
      <name>geometry</name>
      <anchorfile>classG3D_1_1CapsuleShape.html</anchorfile>
      <anchor>a9a775a105ce1ceb193aef03cafed1bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::CollisionDetection</name>
    <filename>classG3D_1_1CollisionDetection.html</filename>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>separatingAxisForSolidBoxSolidBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a80e5ff7debfd7d2bec379158e4958324</anchor>
      <arglist>(const int separatingAxisIndex, const Box &amp;box1, const Box &amp;box2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>parallelAxisForSolidBoxSolidBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>ae41885176dce99040505d0cd9ebecf5c</anchor>
      <arglist>(const double *ca, const double epsilon, int &amp;axis1, int &amp;axis2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>projectedDistanceForSolidBoxSolidBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a6d3bedf825c75e184a3e4234464d966b</anchor>
      <arglist>(const int separatingAxisIndex, const Vector3 &amp;a, const Vector3 &amp;b, const Vector3 &amp;D, const double *c, const double *ca, const double *ad, const double *bd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillSolidBoxSolidBoxInfo</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a768dc6d9becd90250c736b1f17e585ab</anchor>
      <arglist>(const Box &amp;box1, const Box &amp;box2, Vector3 &amp;a, Vector3 &amp;b, Vector3 &amp;D, double *c, double *ca, double *ad, double *bd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>conservativeBoxBoxTest</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>afe3cdbd92564f99a3a2229fee187ebf8</anchor>
      <arglist>(const Vector3 &amp;a, const Vector3 &amp;b, const Vector3 &amp;D)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>fixedSolidBoxIntersectsFixedSolidBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a8b6e0411552a2160bbdb28f3d1fd2c31</anchor>
      <arglist>(const Box &amp;box1, const Box &amp;box2, const int lastSeparatingAxis=-1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>closestPointsBetweenLineAndLine</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a5d7a0010de6b074795005106cca4dd74</anchor>
      <arglist>(const Line &amp;line1, const Line &amp;line2, Vector3 &amp;closest1, Vector3 &amp;closest2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>penetrationDepthForFixedBoxFixedBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>adf2fcbe37ff7733a7a30ab4d73aa9e5d</anchor>
      <arglist>(const Box &amp;box1, const Box &amp;box2, Array&lt; Vector3 &gt; &amp;contactPoints, Array&lt; Vector3 &gt; &amp;contactNormals, const int lastSeparatingAxis=-1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>penetrationDepthForFixedSphereFixedSphere</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a04a1a5b899b8ee11758df500d1062786</anchor>
      <arglist>(const class Sphere &amp;sphereA, const Sphere &amp;sphereB, Array&lt; Vector3 &gt; &amp;contactPoints, Array&lt; Vector3 &gt; &amp;contactNormals=ignoreArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>penetrationDepthForFixedSphereFixedBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a6382d469e1845d6075d74b8f2e7818bc</anchor>
      <arglist>(const Sphere &amp;sphere, const Box &amp;box, Array&lt; Vector3 &gt; &amp;contactPoints, Array&lt; Vector3 &gt; &amp;contactNormals=ignoreArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>penetrationDepthForFixedSphereFixedPlane</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>aa8f986ca9ec7af6b32694e53dc47c04d</anchor>
      <arglist>(const Sphere &amp;sphereA, const class Plane &amp;planeB, Array&lt; Vector3 &gt; &amp;contactPoints, Array&lt; Vector3 &gt; &amp;contactNormals=ignoreArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>penetrationDepthForFixedBoxFixedPlane</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a744a1ffd7bf833effafdfd1ed831fdd1</anchor>
      <arglist>(const Box &amp;box, const Plane &amp;plane, Array&lt; Vector3 &gt; &amp;contactPoints, Array&lt; Vector3 &gt; &amp;contactNormals=ignoreArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedPlane</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a1cb22f1b18c4571132ea2b75a70878d7</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;velocity, const class Plane &amp;plane, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedTriangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a5cc87d7c2b70c0677446eb1cc22a64a2</anchor>
      <arglist>(const Vector3 &amp;orig, const Vector3 &amp;dir, const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedTriangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>ae05e1f92b12f5454429e9ffdb46935d2</anchor>
      <arglist>(const Vector3 &amp;orig, const Vector3 &amp;dir, const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, Vector3 &amp;location)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedTriangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a5a20a294abac5881b6a84e3be77d7a80</anchor>
      <arglist>(const Vector3 &amp;orig, const Vector3 &amp;dir, const Triangle &amp;tri, Vector3 &amp;location=ignore, Vector3 &amp;normal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedTriangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a992bdab224368e6776931cf5b4e12f61</anchor>
      <arglist>(const Vector3 &amp;orig, const Vector3 &amp;dir, const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, Vector3 &amp;location, Vector3 &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedAABox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>afa9089400435e4aebccf67a9abf3cde2</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;velocity, const class AABox &amp;box, Vector3 &amp;outLocation, bool &amp;inside=ignoreBool, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>collisionLocationForMovingPointFixedAABox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>af58a83cb683bedf88cf6ae5edaa5dd95</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;velocity, const class AABox &amp;box, Vector3 &amp;outLocation, bool &amp;inside=ignoreBool, Vector3 &amp;normal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedSphere</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a25bf2d73a7e366350f9afb96a13803bf</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;velocity, const class Sphere &amp;sphere, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>aaa4621cfca020f350ca858681b83ff54</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;velocity, const class Box &amp;box, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedRectangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a5fa161393455776d28737d556066cfbb</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;velocity, const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, const Vector3 &amp;v3, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingPointFixedCapsule</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a17b967d205e7e899dec30703dd49d109</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;velocity, const class Capsule &amp;capsule, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingSphereFixedPlane</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>aa79d503f00404a26136cbf26da17a517</anchor>
      <arglist>(const class Sphere &amp;sphere, const Vector3 &amp;velocity, const class Plane &amp;plane, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingSphereFixedTriangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a1fa7a8ddeb2ef5ceb8fd2578058023f1</anchor>
      <arglist>(const class Sphere &amp;sphere, const Vector3 &amp;velocity, const Triangle &amp;triangle, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingSphereFixedRectangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>ad9e48629ed616f3269ba57ba7dd681dd</anchor>
      <arglist>(const class Sphere &amp;sphere, const Vector3 &amp;velocity, const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, const Vector3 &amp;v3, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingSphereFixedBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a0c02bfa1d7e47d6149d1257996012548</anchor>
      <arglist>(const class Sphere &amp;sphere, const Vector3 &amp;velocity, const class Box &amp;box, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingSphereFixedSphere</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a8920b8770b49fc8a92917781491eb96e</anchor>
      <arglist>(const class Sphere &amp;sphere, const Vector3 &amp;velocity, const class Sphere &amp;fixedSphere, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>collisionTimeForMovingSphereFixedCapsule</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a9ba086a595dbf94b30c703487fb4d550</anchor>
      <arglist>(const class Sphere &amp;sphere, const Vector3 &amp;velocity, const class Capsule &amp;capsule, Vector3 &amp;outLocation, Vector3 &amp;outNormal=ignore)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>bounceDirection</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>ab8330985a90a07944ff1919d2237670e</anchor>
      <arglist>(const class Sphere &amp;sphere, const Vector3 &amp;velocity, const float collisionTime, const Vector3 &amp;collisionLocation, const Vector3 &amp;collisionNormal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>slideDirection</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a8b849c469c5d5c24282ad26d2d14af2b</anchor>
      <arglist>(const class Sphere &amp;sphere, const Vector3 &amp;velocity, const float collisionTime, const Vector3 &amp;collisionLocation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>closestPointOnLineSegment</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a6ec48c857f7e760397b35f634bb626d0</anchor>
      <arglist>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>closestPointOnLineSegment</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a8e6831f8bf6d26a74503dcd333f00d87</anchor>
      <arglist>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;edgeDirection, float edgeLength, const Vector3 &amp;point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>closestPointToTrianglePerimeter</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a999bc2d4f5df03438d9793ca6ef88809</anchor>
      <arglist>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, const Vector3 &amp;point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>closestPointToTrianglePerimeter</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a1862f241f28f0da0119d9e2474be2f52</anchor>
      <arglist>(const Vector3 v[3], const Vector3 edgeDirection[3], const double edgeLength[3], const Vector3 &amp;point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isPointInsideTriangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>aff9474ec6c0080c4614c83c1e102d057</anchor>
      <arglist>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, const Vector3 &amp;normal, const Vector3 &amp;point, Vector3::Axis primaryAxis=Vector3::DETECT_AXIS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>movingSpherePassesThroughFixedBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>ac1534a85f4fce4c6f46d1d3bab157cdc</anchor>
      <arglist>(const Sphere &amp;sphere, const Vector3 &amp;velocity, const Box &amp;box, double timeLimit=inf())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>movingSpherePassesThroughFixedSphere</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a625f8650dbaea05de3040495dfddb118</anchor>
      <arglist>(const Sphere &amp;sphere, const Vector3 &amp;velocity, const Sphere &amp;fixedSphere, double timeLimit=inf())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>fixedSolidSphereIntersectsFixedSolidSphere</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a03eee8a300f543cc24e6814ded9852de</anchor>
      <arglist>(const Sphere &amp;sphere1, const Sphere &amp;sphere2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>fixedSolidSphereIntersectsFixedSolidBox</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>abfafaca2d4e4e2182abeb1af85e7e6dd</anchor>
      <arglist>(const Sphere &amp;sphere, const Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isPointInsideRectangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>af352ed24b1788bd96e67f581a0a0c262</anchor>
      <arglist>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, const Vector3 &amp;v3, const Vector3 &amp;normal, const Vector3 &amp;point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>closestPointToRectanglePerimeter</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a81009ed120100299e0c6f576809ce092</anchor>
      <arglist>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, const Vector3 &amp;v3, const Vector3 &amp;point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>closestPointToRectangle</name>
      <anchorfile>classG3D_1_1CollisionDetection.html</anchorfile>
      <anchor>a570b6dcfe740da36b2b45334f698880d</anchor>
      <arglist>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, const Vector3 &amp;v3, const Vector3 &amp;point)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Color3</name>
    <filename>classG3D_1_1Color3.html</filename>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a09d63839dfce65ae4b31d581d35109c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>abb6b2c37b6a64cc47005ae78d06c7bc8</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ab8a995d5c2c9b2c5be756038560ac52d</anchor>
      <arglist>(float r, float g, float b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a53c8d421414fe30815867cc4d880d63b</anchor>
      <arglist>(const class Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>aef190ca1ad43337c133d6fcd14ac683a</anchor>
      <arglist>(const float value[3])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a57a6f329b5c124c57152eb93aa52c2e2</anchor>
      <arglist>(const Color3 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>aff7f3dc5f3649b5df89d33cecb845fbc</anchor>
      <arglist>(const class Color3uint8 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a42f5643f7826b30e31962edebbbcbeca</anchor>
      <arglist>(class BinaryOutput &amp;bo) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>abe3b89219357dd08f6d4919ea2907968</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a66e9806ca147683dbd59bd8974ffc475</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ae13a4ff7d5b72483da17d0604aaa775a</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>Color3 &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a268f26ac5f67119b83ec7b50ea731d72</anchor>
      <arglist>(const Color3 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a5a5a6c88a45f701f82ee2b823f3f63b2</anchor>
      <arglist>(const Color3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ac3ef06732fa917eedefeb0aa7cd558c9</anchor>
      <arglist>(const Color3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ab7d268981dbf06ced2d38268a595c476</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>operator+</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a8e7e93f36682539c819996fa4668047f</anchor>
      <arglist>(const Color3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a0b375310a4ba04f3d52cb3f2a795eda2</anchor>
      <arglist>(const Color3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a9c4a250bede19228fbb5b30e78b54a21</anchor>
      <arglist>(float fScalar) const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a547aace1466ecfa40c0b1376fefd26e5</anchor>
      <arglist>(const Color3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a93767af341c6cb9265371e267dc6fa16</anchor>
      <arglist>(float fScalar) const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a9705c76b78c252b6a5ba673ab17f385e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color3 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a81c235b41cfa4b2969d63e27ed5baa04</anchor>
      <arglist>(const Color3 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Color3 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a2e806ceb32fdccf20b4422b16f88c950</anchor>
      <arglist>(const Color3 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Color3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a6a097db135b3899772c23b087e7f1302</anchor>
      <arglist>(const Color3 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Color3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a9c455d985a00b1614a4275d96478c688</anchor>
      <arglist>(float fScalar)</arglist>
    </member>
    <member kind="function">
      <type>Color3 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ae11955ac0678e28a67328376a7e9b6bb</anchor>
      <arglist>(float fScalar)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyEq</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>acf1975c4fa19a4cff24b498edad30714</anchor>
      <arglist>(const Color3 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyNe</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ab4da515c8e03f110a176f42b1e4c7ec0</anchor>
      <arglist>(const Color3 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float *</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a3793ad22227467d25948f46e6c52b2be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const float *</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>aa9c989ee9676cb03203abffbfb969aaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>length</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ac39b02a3224b7d6c3a58f4a082efd71a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>direction</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a586d3b1b6ef5d6c9b09794aa8ea16030</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>squaredLength</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a3118bc9dd12bfbeee9f770732b9a9527</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>adbc895e186ff9a7ab3dab25f2a5b2c7f</anchor>
      <arglist>(const Color3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>unitize</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>aee24086f563b5a740b14c21ee30378fb</anchor>
      <arglist>(float fTolerance=1e-06)</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>cross</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a73c13fbf98130ded52d4c943a981bcf0</anchor>
      <arglist>(const Color3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>unitCross</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>af22b4f13d183143ca6c46222759f3f0c</anchor>
      <arglist>(const Color3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>max</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ac591a9b7a5166a60f8390b4658281e0a</anchor>
      <arglist>(const Color3 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>min</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a5feeee7a41ebe52421d7538c0a76907b</anchor>
      <arglist>(const Color3 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>lerp</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a4d0e5b2fcc381106ef62cd06a011bc92</anchor>
      <arglist>(const Color3 &amp;other, float a) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sum</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a860558129e6f6d6b6170f6b66593d69b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>average</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a243c947736c3d4dfcc534c0d12460ed5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ad73ebe6dc480d0bf7fc8b9aec6f4310c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3</type>
      <name>fromARGB</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ad3e32532f4adca218d7506004b4ed306</anchor>
      <arglist>(uint32)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>wheelRandom</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a7fb22cc51fed34927cb5447d6fcc6089</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3</type>
      <name>fromHSV</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a54ea0e8cce37db01cdd846618752b7b5</anchor>
      <arglist>(const Vector3 &amp;_hsv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>toHSV</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a19e4a880f8a6d54e13c263cd81a08982</anchor>
      <arglist>(const Color3 &amp;_rgb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3</type>
      <name>jetColorMap</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a9cbccb7b2831bbca29fb285da38419f9</anchor>
      <arglist>(const float &amp;val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3</type>
      <name>random</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ac765a94093c9f3cbde1d23652158fa36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>red</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a7509df2bd13d4ae6d88b893da4499a21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>green</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ab006d53c4a7543f52c676ace960962c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>blue</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a1639c8f7926c0254d24bea6858970056</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>purple</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a07cfd03f92f9e418f145d0bc30fc38aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>cyan</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>af85ff1a40686e74a0d909ae945c0033d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>yellow</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>aaddedfb3802124b269ba07996a9b2db9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>brown</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>aeee9ce96bd9f0638df832205f50895e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>orange</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ac3b28366aa99b01d91a424ad63465f1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>black</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ad6910648523e37f2b955a21233fb796e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>gray</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>af40575c8ba1cf56773db214c2e8efa1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color3 &amp;</type>
      <name>white</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ae72c73bef4361e5f57b01d37b8d96630</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>addc3a73a1ca77b22fe7be815d9135f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>g</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ab210d9c24490ac56bdad5ac33eb251c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ad8d4ab186de684dd63cd861042e4d046</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>RED</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a45e942d57797f0a3a978f151886d7f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>GREEN</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a96b851acdc8d51a2193745e14568f61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>BLUE</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a0d13ad30bd45139f6e5bafb21574f798</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>PURPLE</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>aaf50b5c12b9179d71ce2c7438dd71e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>CYAN</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a4dc7e5ce57c4fee5a3c8de17de7506e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>YELLOW</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a9ef041043ae143ef2d02b260f7bc0159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>BROWN</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>ac510c6e596a21c3d9b553d76d679a56e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>ORANGE</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a4c940e55a85dac21b872e50135548163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>BLACK</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a46b7ae4fd5f1bc8dcb663ac3a3332e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>GRAY</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a29174a548d220ca4b6e5f8e82a63fd32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color3</type>
      <name>WHITE</name>
      <anchorfile>classG3D_1_1Color3.html</anchorfile>
      <anchor>a3e0e085b4d847e61080d19efd0781c4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Color3uint8</name>
    <filename>classG3D_1_1Color3uint8.html</filename>
    <member kind="function">
      <type></type>
      <name>Color3uint8</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>ab477b26fd3e8af95465adf28ffad37d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3uint8</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a8374f1ea51b78e92f118cf3693b3c877</anchor>
      <arglist>(const uint8 _r, const uint8 _g, const uint8 _b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3uint8</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a76cf02fc07027de65c02592259f8b25a</anchor>
      <arglist>(const class Color3 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color3uint8</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>afee35ffb886a329701484d797f67dc0c</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>asUInt32</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a6e4635154dc2ee83d20cb023387f7680</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a255148959fc9b05f2bc4faf5369b4115</anchor>
      <arglist>(class BinaryOutput &amp;bo) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>aa9077973da5787cabca2a917bddb8e3b</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>G3D::uint8 &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a20859835f236fba32109b8ac062c8597</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator G3D::uint8 *</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a4f3e81aa421b317544fd5aa9b29006c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const G3D::uint8 *</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a512bebc343c4857d4ca1bf48fd4d45e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color3uint8</type>
      <name>fromARGB</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a160ac5b4d687d7da1325e93ca21d46ff</anchor>
      <arglist>(uint32 i)</arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>r</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a545643cc286b6dc68b8336883a03b1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>g</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>af2c17bbbbc5d0aecd19f18ee14605887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>b</name>
      <anchorfile>classG3D_1_1Color3uint8.html</anchorfile>
      <anchor>a76509fafec4b92065d8d42a0fa453000</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Color4</name>
    <filename>classG3D_1_1Color4.html</filename>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a506ece7aa50219dc0d9ec54e5f99158d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a271a3fe2cc2152b5022b6519bdef7cec</anchor>
      <arglist>(const Color3 &amp;c3, float a=1.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>afc56c65877a3885db63c704ac52cf13e</anchor>
      <arglist>(const class Color4uint8 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>aaa1c9e876c1a64edc13ffd5a3cf76350</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a6244f8c4528e74256020a2ea914e0fa5</anchor>
      <arglist>(const class Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a537a4595296b3b7a91e533d31c0b084b</anchor>
      <arglist>(float r, float g, float b, float a=1.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a3839a00f5a2102d6bae31079999d8acd</anchor>
      <arglist>(float value[4])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a994c6ff2fc647672f73e60802b52ce68</anchor>
      <arglist>(const Color4 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>adec22de536eff6c2f372e7f9d1ebdc8b</anchor>
      <arglist>(class BinaryOutput &amp;bo) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a31d14449299745880f49116f31671c7e</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>ad95d38de66395d9d6ed1d5f4a57dbe58</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float *</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a8cbf112289b5a66e226ca58d965ac679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const float *</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>afbeaa952a1ff90d5501e6fd7c4bdc179</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color4 &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a083d63035a6c2c820f472d6bbe8aff04</anchor>
      <arglist>(const Color4 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a783c82618ea5198e7aa3903e5d90dd77</anchor>
      <arglist>(const Color4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>afa9e5175d2a9712d025f41e9eb1e740b</anchor>
      <arglist>(const Color4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a3cb662e1876f52fb44c08f15f00510cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>operator+</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>ae2c4828e94bb7038652a4bafd94da0ac</anchor>
      <arglist>(const Color4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>aa178b260af4928ce5b426505b093367a</anchor>
      <arglist>(const Color4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>ad98d26de517eff79adfc6499c66b8529</anchor>
      <arglist>(float fScalar) const</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>ad3e5c97b8194dcca07139b89e6ddd05a</anchor>
      <arglist>(float fScalar) const</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a666a56f9b7652f8e2c12cd4a7e5a47ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color4 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>aa6cd155beffd369b0b6fe7eec08e3ac2</anchor>
      <arglist>(const Color4 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Color4 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>ac8f1122b47acdddb8889cfe0d2a3c6e9</anchor>
      <arglist>(const Color4 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Color4 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>adcb3e7ba9a4929080889cf0e67fe784e</anchor>
      <arglist>(float fScalar)</arglist>
    </member>
    <member kind="function">
      <type>Color4 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>aea0d887f8037480172992bfca47ea701</anchor>
      <arglist>(float fScalar)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyEq</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>adbdc6638c944b708233266b4505f049e</anchor>
      <arglist>(const Color4 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyNe</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a6d61200e4cebc7ac30d0c5e51315756c</anchor>
      <arglist>(const Color4 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a080af7c7f27394512d1c74927e0afd5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>max</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>afda0dd4a12b55b35e329398c8b9618cc</anchor>
      <arglist>(const Color4 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>min</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>abbfb0076eb59219c4493890a8a7802ce</anchor>
      <arglist>(const Color4 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>sum</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a32b2f6e9a2c1470a4fe8be5024ff7688</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4</type>
      <name>fromARGB</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a1f31dae974b3520837c359f1cb46467b</anchor>
      <arglist>(uint32)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color4 &amp;</type>
      <name>zero</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a5ab9e47b6c276e932d9a0e0fa18e02c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color4 &amp;</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>ac88deb4dbe5d65d70c92d002a7c6f9bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Color4 &amp;</type>
      <name>inf</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a88952fb1a39833cea8462a8a6976fa3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>ad7ab88b7afbd019b4a51c2a272ef7785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>g</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>ac5a772b7c408fa4d67553dc6d183098a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a8cb4ccfcfecb3178bf31001d5456d386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>a</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a2512d44272ebeca53c46022f34f1cb48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color4</type>
      <name>ZERO</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>aaa8e8100a422f25464224110e5b4e98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Color4</type>
      <name>CLEAR</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>a515d310d58136e9ca1efddb409b119cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend Color4</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Color4.html</anchorfile>
      <anchor>aeabf77106e45e950e4a8eaa80779a809</anchor>
      <arglist>(double fScalar, const Color4 &amp;rkVector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Color4uint8</name>
    <filename>classG3D_1_1Color4uint8.html</filename>
    <member kind="function">
      <type></type>
      <name>Color4uint8</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>ac898651ba7b0d1f98abadba69ce6d855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4uint8</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>af45a04f07b7bbb8d80cd2928acded876</anchor>
      <arglist>(const class Color4 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4uint8</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>ae88d0bd790be3760a1713605ae42dc08</anchor>
      <arglist>(const uint8 _r, const uint8 _g, const uint8 _b, const uint8 _a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4uint8</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>a7393f5d98ccb2ca44213cb0f4941428f</anchor>
      <arglist>(const Color3uint8 &amp;c, const uint8 _a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color4uint8</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>a266b9ccab91fd4224035b9bfe92f44bc</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>asUInt32</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>abe8cec15a2203f68acdb2289e3eee27c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>G3D::uint8 &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>a2ee195ccefa0ad5a49ed7353f0780d6d</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator G3D::uint8 *</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>a70a48133487fd3219650df8f454e6712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const G3D::uint8 *</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>aeba21da04272f42fe06787e36660fdfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>af591aaea84ebbbe78998928ca7d4aded</anchor>
      <arglist>(class BinaryOutput &amp;bo) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>a3114e44dca99d523d445304320464a5d</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Color4uint8</type>
      <name>fromARGB</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>ac8cabb7618250ced03232297093aff97</anchor>
      <arglist>(uint32 i)</arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>r</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>ada884aa15ef70b6c30e6c8afa7fd9fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>g</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>a6338aa7201956c37273c1481ba6f6993</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>b</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>afca11ea625314141d97754344e53c9b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>a</name>
      <anchorfile>classG3D_1_1Color4uint8.html</anchorfile>
      <anchor>ac9fd2e589849705fbc8cb91f5764713a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Conduit</name>
    <filename>classG3D_1_1Conduit.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Conduit</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>ab4ed233737f3c97b7d0d315d04f4f3fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>bytesSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a328316292e1dbd421e3e657d2545b805</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>messagesSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a96e32f7d7fec28d51e7d9f9994a2dc8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>bytesReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>aef5491086698c4bf2d04282da1da6049</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>messagesReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a4a09a791f121f76c7a24602960228732</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>messageWaiting</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a943595492b9d03a8bc2168a6875852a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32</type>
      <name>waitingMessageType</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>ada27fabe18a6164639322b24c63742d1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a1c08f10278eef82f96e4eb6357bb9cff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Conduit</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a01cf1967c3bc8e9d702a4ab2a8fc6627</anchor>
      <arglist>(class NetworkDevice *_nd)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>mSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a9f096e72804ae607f5a0dcdc6644569b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>mReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a2b8002b8175f5c95a346508faf8a6062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>bSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a0dd3e8c6d2514f002553c02425723713</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>bReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a15f17e452df4fc74958fb0b341c77e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>class NetworkDevice *</type>
      <name>nd</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>ae065b5dea5f3d3873667d3e4e72a491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SOCKET</type>
      <name>sock</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a9baa87aeb3777a03b8c1c8ae21f9b945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BinaryOutput</type>
      <name>binaryOutput</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>af4557f45feff508904ae1b55f76a0248</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>NetworkDevice</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>aeecf97b085c6118a394e2b64b7367027</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>NetListener</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>aa297c1e87aebfbe384d672af97105f7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Cone</name>
    <filename>classG3D_1_1Cone.html</filename>
    <member kind="function">
      <type></type>
      <name>Cone</name>
      <anchorfile>classG3D_1_1Cone.html</anchorfile>
      <anchor>a52a3e40c50ebc114ec6a40ae0ee5a699</anchor>
      <arglist>(const Vector3 &amp;tip, const Vector3 &amp;direction, float angle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Cone</name>
      <anchorfile>classG3D_1_1Cone.html</anchorfile>
      <anchor>a545e3e1e103d8228f6f417696b5a0a4b</anchor>
      <arglist>(const Vector3 &amp;tip, const class Box &amp;box)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Cone</name>
      <anchorfile>classG3D_1_1Cone.html</anchorfile>
      <anchor>a35db9ead35cc5b88f79158afc67120bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classG3D_1_1Cone.html</anchorfile>
      <anchor>acfd48874c2491cc25628b835d4828d1a</anchor>
      <arglist>(const class Sphere &amp;s) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Cone.html</anchorfile>
      <anchor>a8a7aabe0e98b7bf06e7462db75381d49</anchor>
      <arglist>(const class Vector3 &amp;v) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::ConvexPolygon</name>
    <filename>classG3D_1_1ConvexPolygon.html</filename>
    <member kind="function">
      <type></type>
      <name>ConvexPolygon</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a2c2c9858c2a72974338133d477a77bd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConvexPolygon</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>acc0d5fd6c9f7767fe57a173b9266d099</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;__vertex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConvexPolygon</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a2115e5e0d71d1225d1433f99362067f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Vector3 &amp;</type>
      <name>vertex</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a5f0bfafc8af6802b9271a08f0504ca16</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertex</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a1a4a8297e70ff38f97abac7e589dc50a</anchor>
      <arglist>(int i, const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numVertices</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a4d188f3913bca737bf6e9cfe21414c52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumVertices</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a5bb23f9a248b6aee6f07b510a1434aaf</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>af2b4fbf63d70c1cbdf5b0958fa66e89c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a5d8a4e489c5bca7d25d7a579ed1e0d77</anchor>
      <arglist>(const Plane &amp;plane, ConvexPolygon &amp;above, ConvexPolygon &amp;below, DirectedEdge &amp;newEdge)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>af12d52f91a5871b33d0436cbadd5e81d</anchor>
      <arglist>(const Plane &amp;plane, ConvexPolygon &amp;above, ConvexPolygon &amp;below)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeDuplicateVertices</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>aa3353530db1bdd665b9ddc82c404493a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getArea</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a425b9893e25aad1ee9ffc9282f24ca27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>normal</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>ad48d5e62e7ad81e72bc34dfa8a53b448</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConvexPolygon</type>
      <name>inverse</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a9266835e363b107a845057810b60ab5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConvexPolyhedron</name>
      <anchorfile>classG3D_1_1ConvexPolygon.html</anchorfile>
      <anchor>a1b3d05e1e50fd14224fccd7f2b803aec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::ConvexPolygon2D</name>
    <filename>classG3D_1_1ConvexPolygon2D.html</filename>
    <member kind="function">
      <type></type>
      <name>ConvexPolygon2D</name>
      <anchorfile>classG3D_1_1ConvexPolygon2D.html</anchorfile>
      <anchor>a89cf12ede1fae92aab59f598cb8eb249</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConvexPolygon2D</name>
      <anchorfile>classG3D_1_1ConvexPolygon2D.html</anchorfile>
      <anchor>a0d7a4f1d7143bf9cbd9d14f44879b96d</anchor>
      <arglist>(const Array&lt; Vector2 &gt; &amp;pts, bool reverse=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numVertices</name>
      <anchorfile>classG3D_1_1ConvexPolygon2D.html</anchorfile>
      <anchor>a5933391193de6684edbe1ff68d377338</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Vector2 &amp;</type>
      <name>vertex</name>
      <anchorfile>classG3D_1_1ConvexPolygon2D.html</anchorfile>
      <anchor>a2b4d442b9d1d6c74b379add1dd1763b4</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1ConvexPolygon2D.html</anchorfile>
      <anchor>a1bda245ac8a3d53c80127eb5033bfa00</anchor>
      <arglist>(const Vector2 &amp;p, bool reverseWinding=false) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::ConvexPolyhedron</name>
    <filename>classG3D_1_1ConvexPolyhedron.html</filename>
    <member kind="function">
      <type></type>
      <name>ConvexPolyhedron</name>
      <anchorfile>classG3D_1_1ConvexPolyhedron.html</anchorfile>
      <anchor>aff0f9d7c162262063426fdd6e5614bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConvexPolyhedron</name>
      <anchorfile>classG3D_1_1ConvexPolyhedron.html</anchorfile>
      <anchor>a8bc0f286110f7ea48745088d5c300548</anchor>
      <arglist>(const Array&lt; ConvexPolygon &gt; &amp;_face)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classG3D_1_1ConvexPolyhedron.html</anchorfile>
      <anchor>ae94340f42d5b0c234cd6903d63b9ebb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolume</name>
      <anchorfile>classG3D_1_1ConvexPolyhedron.html</anchorfile>
      <anchor>aee82a1cbcd52399c11ac752b72a71ec0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>classG3D_1_1ConvexPolyhedron.html</anchorfile>
      <anchor>a2423b74891a6bd51aed7b13d331807b9</anchor>
      <arglist>(const Plane &amp;plane, ConvexPolyhedron &amp;above, ConvexPolyhedron &amp;below)</arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; ConvexPolygon &gt;</type>
      <name>face</name>
      <anchorfile>classG3D_1_1ConvexPolyhedron.html</anchorfile>
      <anchor>affba9a1ca13c502e3b711f9a87df80d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::CoordinateFrame</name>
    <filename>classG3D_1_1CoordinateFrame.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a7b16fa9c741df4e1e85b92ed9c34f27b</anchor>
      <arglist>(const CoordinateFrame &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a2d49603e7985e21c71e557e01762010b</anchor>
      <arglist>(const CoordinateFrame &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyEq</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a3f96df616e57049e87e7b8590a2ab770</anchor>
      <arglist>(const CoordinateFrame &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyIsIdentity</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ab69137ceb3eeb5e55873cc95953b7420</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a44a7442464611cb3fea2503918699367</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordinateFrame</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a69ccc2e734f51dbdfd8d495c3fbed2ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordinateFrame</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a0f2e0bc44a53dcc7e985bdaa27d3e305</anchor>
      <arglist>(const Vector3 &amp;_translation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordinateFrame</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>abb4c9305169e263bc4d16246d7d268db</anchor>
      <arglist>(const Matrix3 &amp;rotation, const Vector3 &amp;translation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordinateFrame</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>af3e7e836dce040657f6528b9f437de45</anchor>
      <arglist>(const Matrix3 &amp;rotation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordinateFrame</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a0100fea3d709ff037fccdd6863261eff</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a06e7a8e63569a04219cf5b8dc4e98a5b</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ae63a712c3c1aac14c1a6259d8f91bfdf</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordinateFrame</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>affb1152e11512540430c6e607c4dd971</anchor>
      <arglist>(const CoordinateFrame &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>inverse</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a6199addbeb7f73aa949765e162f3604e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CoordinateFrame</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>aa8dbcc7760dbc00e368fe5484712c22e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>class Matrix4</type>
      <name>toMatrix4</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a66d41b5446ad006e28f8e91a0e11ffb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toXML</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ab35bf792c1dd1550122ff08f94889330</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getHeading</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a59fab08ad66e9f141e35b5cd42619ad5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>toObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a280c1d80963b0e5f639d574fa4d0f1ae</anchor>
      <arglist>(const CoordinateFrame &amp;c) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>toObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>aedc20737094692eb373cbda2436fcd68</anchor>
      <arglist>(const Vector4 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>toWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>aaaf415861eafdd8dfec928e3afdd4d5d</anchor>
      <arglist>(const Vector4 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>pointToWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ac228b42e71b76d3d18d161b58b775428</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>pointToObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ab88950c81ceabbb62d851e9014ef4ec6</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>vectorToWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a3e9fb9a01a07fd784409441323c4a40e</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>normalToWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ab794dc720f79b8da37f16ec0252e4277</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>class Ray</type>
      <name>toObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a3392af6384e2407dea1c327d54d7a61b</anchor>
      <arglist>(const Ray &amp;r) const</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>toWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a8980e9c3460b86496242bd1ce4707b1a</anchor>
      <arglist>(const Ray &amp;r) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>vectorToObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ae303f7ea0bb7444ef24ad43452db93dc</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>normalToObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a772d4ed55181882fb896928e1dc43324</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pointToWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>aae3192c5d0e01f53cfabd8d080ea5ac8</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;v, Array&lt; Vector3 &gt; &amp;vout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalToWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>aee4aa08cc31710b88266a79b1d302109</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;v, Array&lt; Vector3 &gt; &amp;vout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vectorToWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a05ba633ad6765c701c7561fab59624fc</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;v, Array&lt; Vector3 &gt; &amp;vout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pointToObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a96942778b0445dd26ca351f119efb19c</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;v, Array&lt; Vector3 &gt; &amp;vout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalToObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ae39ad1757b43e778e5e4a0ed7b970ee1</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;v, Array&lt; Vector3 &gt; &amp;vout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vectorToObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a8ce947aafba1796e3c70a92b95e852c6</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;v, Array&lt; Vector3 &gt; &amp;vout) const</arglist>
    </member>
    <member kind="function">
      <type>class Box</type>
      <name>toWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a9c30eb411edd498b3218ff36b4b08ac3</anchor>
      <arglist>(const class AABox &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>class Box</type>
      <name>toWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>af912d5dc785e5ab5ac664aa88bdbd878</anchor>
      <arglist>(const class Box &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>class Cylinder</type>
      <name>toWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a4a81d0e94fba10d778b0feabc0f4a4b2</anchor>
      <arglist>(const class Cylinder &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>class Capsule</type>
      <name>toWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a61eea4a9a78d01693c29238688f6bbd9</anchor>
      <arglist>(const class Capsule &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>class Plane</type>
      <name>toWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a708c88793c3fdac47bb3c2e2b8afa210</anchor>
      <arglist>(const class Plane &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>class Sphere</type>
      <name>toWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>abc6107b6002699916f75ebb6fea5ac9f</anchor>
      <arglist>(const class Sphere &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>class Triangle</type>
      <name>toWorldSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a71db2a337e8ef185bb4b6490fd6653e9</anchor>
      <arglist>(const class Triangle &amp;t) const</arglist>
    </member>
    <member kind="function">
      <type>class Box</type>
      <name>toObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ac5313a1fa027cb353c11e673b959094d</anchor>
      <arglist>(const AABox &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>class Box</type>
      <name>toObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a8b732b59484b170e8fd48d5272ba6421</anchor>
      <arglist>(const Box &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>class Plane</type>
      <name>toObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>adb9718c7bc4c9ae6c6a465c47c9f9422</anchor>
      <arglist>(const Plane &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>class Sphere</type>
      <name>toObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a1ae6865cba4efe1250590ba913d5b6bc</anchor>
      <arglist>(const Sphere &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>Triangle</type>
      <name>toObjectSpace</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a344ddb45a890013f20dfa9124e1572e2</anchor>
      <arglist>(const Triangle &amp;t) const</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a414b307d061a8de5349d2acfd677ee2c</anchor>
      <arglist>(const CoordinateFrame &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>operator+</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a67649b919ee602efc3664b86520af688</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>afc5628dc1a4c52b5f054a8f31f4bb297</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookAt</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a9669ed0695a27877e4cb45ec871c670b</anchor>
      <arglist>(const Vector3 &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookAt</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a1ccff6887b398e3f50e26f24b5320e83</anchor>
      <arglist>(const Vector3 &amp;target, Vector3 up)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getLookVector</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a2e3459b2945c355d03c0c1cbfae3b233</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>lookVector</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a9e721531eda0b7064b1b6bfac958f4eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>class Ray</type>
      <name>lookRay</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a360779235bf75de8701065322770f353</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>upVector</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ac4fb3040ac7f35bb57b2611b67eeba02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getLeftVector</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a789a59d921793e1f9aa89d02fac74f91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getRightVector</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>aae7e9338869aa969306ff1cd1d4a1e83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>leftVector</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a2560388ddf92c2abea67004a32df378b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>rightVector</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ae494418c231f59e81900139e7e7b9451</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>lerp</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a9b526fe5b306b2f16fca177a8f7be8c2</anchor>
      <arglist>(const CoordinateFrame &amp;other, float alpha) const</arglist>
    </member>
    <member kind="variable">
      <type>Matrix3</type>
      <name>rotation</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ae5f2b1db911111d519381bb1c6ad4b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>translation</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>ab1ec68fdfe54c7d366868d798f322223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>zLookDirection</name>
      <anchorfile>classG3D_1_1CoordinateFrame.html</anchorfile>
      <anchor>a10ddffb5d44c42710fef6cc009ddf37b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AnyVal::CorruptText</name>
    <filename>classG3D_1_1AnyVal_1_1CorruptText.html</filename>
    <base>G3D::AnyVal::Exception</base>
    <member kind="function">
      <type></type>
      <name>CorruptText</name>
      <anchorfile>classG3D_1_1AnyVal_1_1CorruptText.html</anchorfile>
      <anchor>a5192b4d7ba379b0047ebeedd890cf2b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CorruptText</name>
      <anchorfile>classG3D_1_1AnyVal_1_1CorruptText.html</anchorfile>
      <anchor>a3a9d23ca0a7658e1f8c6050219d9fc91</anchor>
      <arglist>(const std::string &amp;s, const G3D::Token &amp;t)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classG3D_1_1AnyVal_1_1CorruptText.html</anchorfile>
      <anchor>a58ad61f2cc07db1c9316d9403c0b15e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>G3D::Token</type>
      <name>token</name>
      <anchorfile>classG3D_1_1AnyVal_1_1CorruptText.html</anchorfile>
      <anchor>a46ec4e54dc996c87970d1d8be082e15c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Crypto</name>
    <filename>classG3D_1_1Crypto.html</filename>
    <member kind="function">
      <type>MD5Hash</type>
      <name>md5</name>
      <anchorfile>classG3D_1_1Crypto.html</anchorfile>
      <anchor>a6904eb3ea791afbc5b5a838ea53d9937</anchor>
      <arglist>(const void *bytes, size_t numBytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>crc32</name>
      <anchorfile>classG3D_1_1Crypto.html</anchorfile>
      <anchor>ac75db3b34a9f9a2708fdc672213f8df7</anchor>
      <arglist>(const void *bytes, size_t numBytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>smallPrime</name>
      <anchorfile>classG3D_1_1Crypto.html</anchorfile>
      <anchor>a4a40c6e1c38c5a5ad03e6b7adbd89e66</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>numSmallPrimes</name>
      <anchorfile>classG3D_1_1Crypto.html</anchorfile>
      <anchor>ad582b1973829f96db9fcca200d4d05bf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Cylinder</name>
    <filename>classG3D_1_1Cylinder.html</filename>
    <member kind="function">
      <type></type>
      <name>Cylinder</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>afd297c073c1d13b3b02bd17feaa57464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Cylinder</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>a44f746dc8f5031c8aae40a900d1eccc9</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Cylinder</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>ace541da4b8bbc5d1aaa7578e593c8be8</anchor>
      <arglist>(const Vector3 &amp;_p1, const Vector3 &amp;_p2, float _r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>aea822dd02706cfe31042283d3dadc0d7</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>a6f77a13a7f77f00e3027fe34150c8fb6</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Line</type>
      <name>getAxis</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>ac151cb91cd000d26ce71c42fb1d6450c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getReferenceFrame</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>ab8c9e5248392433cb41e4006d9685847</anchor>
      <arglist>(class CoordinateFrame &amp;cframe) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getPoint1</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>a401752f09c3438955fd8f0f4b7b55b29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getPoint2</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>aab1a97f597de992ade53c9aa2d5f0e66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>a7a4ed21396d32b377100934499c5a738</anchor>
      <arglist>(const Vector3 &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>a4c6f8bf19d044ea7e58f243f5f642c27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>acb526f0b5a64547d532a582a32458f0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>radius</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>a4a9b3dcb57c1ee942ff54de3fe599c74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>a81422e77d4322f23e9816ba90ae33d8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>height</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>abf50d82181fa0ad1cf9981999beb613a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>a19d75d92253e819805c04eedd177581e</anchor>
      <arglist>(AABox &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>abb2f956856163b815c1c55b875041a5a</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1Cylinder.html</anchorfile>
      <anchor>ac75148ad95b36da38f7726599d482153</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::CylinderShape</name>
    <filename>classG3D_1_1CylinderShape.html</filename>
    <base>G3D::Shape</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CylinderShape</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>ae27660dd8cd5c550fc3705158a2b44bd</anchor>
      <arglist>(const G3D::Cylinder &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a58f37be3e2b6705e8b3abd801c342c30</anchor>
      <arglist>(RenderDevice *rd, const CoordinateFrame &amp;cframe, Color4 solidColor=Color4(.5,.5, 0,.5), Color4 wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a37b7106c5497b3548dd986a05a322014</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>acd3b6c99e38a297cc1fba9943190ebad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a3123ff3af750d15ba960787a916a21ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a4733e1ca3dee896d03a462c84897ba30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a539b18df4734369ded86b7abcd42bb9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a1ea7aadf26a17459a8dd75c4a09aa462</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a55aa214da582b362926cf4e0b2444175</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AABox</type>
      <name>boundingAABox</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a9b56c6f8584274303e26af55417cb8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a318581343cd991d88b302a5794dba367</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1CylinderShape.html</anchorfile>
      <anchor>a1d7d5e2c3fb2a2b8de421f820bb6c836</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3d43a4cfb48ee5fad4c62a4e563d8f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a8c83969ebefbc0ea6b08c675a4a6da72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>af24833903a0d3e336c05d3f763b077f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cdc30906056508d91c8fbc8012c6e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a62c8b5504a00b0e83384b506ecefa036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>ab71af0f244ad7c155a8d3ae9b06786ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3dcd66fc09e3e7542a258cc364a08f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a470ee3f279a66cf7f24a33b3d7882142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>aaa54c9f8e2996ed83cf914dd091f6bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6079582403e91245db8e8c84935d7851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a0c6d6e09678f9fafa99f39c7ad783a48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a717a33c14c235862869010700e1a5c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a875d0e9c54adbe065257157c88a007f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>typeToString</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a5d042e391bc27f781099b673ac9d8388</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::RenderDevice::DebugSettings</name>
    <filename>classG3D_1_1RenderDevice_1_1DebugSettings.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Pipeline</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>a76a2679a6b12b9c271f987238632e3a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIPELINE_NONE</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>a76a2679a6b12b9c271f987238632e3a0a6615ba8bb172442e70a74fafbaae89c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIPELINE_VERTICES_ONLY</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>a76a2679a6b12b9c271f987238632e3a0ab9b64610d0daaab3985adb9541b9b846</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIPELINE_FULL</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>a76a2679a6b12b9c271f987238632e3a0a5f90aea18ae9ca8515df781c1ef202f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Reveal</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_COLOR</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4a2ff127637c7213d1c72de4ccc65bc6b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_DEPTH</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4af855ec4c37caec8e7d448c726ccdbbe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_STENCIL</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4a1b75762c07e87939537cbd861a218274</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_ALPHA</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4a69befb82d466676057e362d03622119f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_OVERDRAW</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4aa84b5213b587095785eb08fb6f0bb1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIPELINE_NONE</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>a76a2679a6b12b9c271f987238632e3a0a6615ba8bb172442e70a74fafbaae89c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIPELINE_VERTICES_ONLY</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>a76a2679a6b12b9c271f987238632e3a0ab9b64610d0daaab3985adb9541b9b846</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIPELINE_FULL</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>a76a2679a6b12b9c271f987238632e3a0a5f90aea18ae9ca8515df781c1ef202f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_COLOR</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4a2ff127637c7213d1c72de4ccc65bc6b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_DEPTH</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4af855ec4c37caec8e7d448c726ccdbbe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_STENCIL</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4a1b75762c07e87939537cbd861a218274</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_ALPHA</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4a69befb82d466676057e362d03622119f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEAL_OVERDRAW</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>affcf01603502518720d3195ee1a21ac4aa84b5213b587095785eb08fb6f0bb1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>primitiveCutoff</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>a8c8122b21e6f8de4613fd5f71bde5809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>forceWireframe</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>af42b0a7a00371bfd72a04e0f3edb7d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pipeline</type>
      <name>pipeline</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>a08291f8e2dd680394978bed5a645dd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Reveal</type>
      <name>reveal</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1DebugSettings.html</anchorfile>
      <anchor>ab59f7edb9b9da7a7a35abfe06f1b4ada</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::DirectedEdge</name>
    <filename>classG3D_1_1DirectedEdge.html</filename>
    <member kind="variable">
      <type>Vector3</type>
      <name>start</name>
      <anchorfile>classG3D_1_1DirectedEdge.html</anchorfile>
      <anchor>a90c5e3fc1586fc4f6a56e6a5b9603851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>stop</name>
      <anchorfile>classG3D_1_1DirectedEdge.html</anchorfile>
      <anchor>a04b3dd2adbdd0d03b5b91e03cbc70bcf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Discovery</name>
    <filename>classG3D_1_1Discovery.html</filename>
    <member kind="enumvalue">
      <name>SERVER_SHUTDOWN_MESSAGE</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a3d6f4ba8909b010c728328fd5bf0be74a407159a5a1c949d2fcad080e239a146c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_BROADCAST_MESSAGE</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a3d6f4ba8909b010c728328fd5bf0be74ac00990d7ef325b02fc26e8bd77301c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_BROADCAST_MESSAGE</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a3d6f4ba8909b010c728328fd5bf0be74aabda822ff47be0c2a498b9de27f0d3cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_SHUTDOWN_MESSAGE</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a3d6f4ba8909b010c728328fd5bf0be74a407159a5a1c949d2fcad080e239a146c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_BROADCAST_MESSAGE</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a3d6f4ba8909b010c728328fd5bf0be74ac00990d7ef325b02fc26e8bd77301c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_BROADCAST_MESSAGE</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a3d6f4ba8909b010c728328fd5bf0be74aabda822ff47be0c2a498b9de27f0d3cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a6c035b7e50f49503dbacbd340a265c53</anchor>
      <arglist>(NetworkDevice *_netDevice, const DiscoverySettings *_settings)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Discovery</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a16d4f42caa7d58b0adf61e2d141bc9a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>NetworkDevice *</type>
      <name>netDevice</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a60e993926beaa4a0a71bbc0a9850abfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DiscoverySettings *</type>
      <name>settings</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a4878fb108b191d9f1bb1b106cbf3544e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::DiscoveryAdvertisement</name>
    <filename>classG3D_1_1DiscoveryAdvertisement.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1DiscoveryAdvertisement.html</anchorfile>
      <anchor>af82b4df2b3e8b68d9b6a707aa1c1a2e5</anchor>
      <arglist>(BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1DiscoveryAdvertisement.html</anchorfile>
      <anchor>aa172713b675f4f35d55974c4ec7151ec</anchor>
      <arglist>(BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DiscoveryAdvertisement</name>
      <anchorfile>classG3D_1_1DiscoveryAdvertisement.html</anchorfile>
      <anchor>abe34ca149ac130a44f76b9970070bbf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>NetAddress</type>
      <name>address</name>
      <anchorfile>classG3D_1_1DiscoveryAdvertisement.html</anchorfile>
      <anchor>a31b4b310506d771ddb2d5668cad231e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RealTime</type>
      <name>lastUpdateTime</name>
      <anchorfile>classG3D_1_1DiscoveryAdvertisement.html</anchorfile>
      <anchor>a4b91f8e6d0375d1e1a8effe66b6ab667</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::DiscoveryClient</name>
    <filename>classG3D_1_1DiscoveryClient.html</filename>
    <templarg>class AdType</templarg>
    <base protection="private">G3D::Discovery</base>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classG3D_1_1DiscoveryClient.html</anchorfile>
      <anchor>adf1e051f66b86edb5c6084d2fc477f38</anchor>
      <arglist>(NetworkDevice *_netDevice, const DiscoverySettings *_settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchorfile>classG3D_1_1DiscoveryClient.html</anchorfile>
      <anchor>a000c2a389d5eb94cabe0195d0f2bdda1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doNetwork</name>
      <anchorfile>classG3D_1_1DiscoveryClient.html</anchorfile>
      <anchor>ab4878839551b09d6739e84c5ed61ed53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; AdType &gt;</type>
      <name>serverList</name>
      <anchorfile>classG3D_1_1DiscoveryClient.html</anchorfile>
      <anchor>a5acd358bf124d556c328280f17b18656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; IncompatibleServerDescription &gt;</type>
      <name>incompatibleServerList</name>
      <anchorfile>classG3D_1_1DiscoveryClient.html</anchorfile>
      <anchor>ad5dd6605c0035f12c5d03b84ccfe0090</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::DiscoveryServer</name>
    <filename>classG3D_1_1DiscoveryServer.html</filename>
    <base protection="private">G3D::Discovery</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classG3D_1_1DiscoveryServer.html</anchorfile>
      <anchor>a62e6c1b82da1fa7e814fb6e93f9788d4</anchor>
      <arglist>(NetworkDevice *_netDevice, const DiscoverySettings *_settings, DiscoveryAdvertisement *_advertisement)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1DiscoveryServer.html</anchorfile>
      <anchor>acb69c997d15627d7135e4e65912d792d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doNetwork</name>
      <anchorfile>classG3D_1_1DiscoveryServer.html</anchorfile>
      <anchor>a9e9dfca296485501749fb5db1f8facf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchorfile>classG3D_1_1DiscoveryServer.html</anchorfile>
      <anchor>a6169c0f77b213307c6779a2713a7f579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classG3D_1_1Discovery.html</anchorfile>
      <anchor>a6c035b7e50f49503dbacbd340a265c53</anchor>
      <arglist>(NetworkDevice *_netDevice, const DiscoverySettings *_settings)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::DiscoveryServerAddressMessage</name>
    <filename>classG3D_1_1DiscoveryServerAddressMessage.html</filename>
    <member kind="function">
      <type></type>
      <name>DiscoveryServerAddressMessage</name>
      <anchorfile>classG3D_1_1DiscoveryServerAddressMessage.html</anchorfile>
      <anchor>a91f555246eac16ab08fab7816894f623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscoveryServerAddressMessage</name>
      <anchorfile>classG3D_1_1DiscoveryServerAddressMessage.html</anchorfile>
      <anchor>a987d39579fcdcfef6329520612bda034</anchor>
      <arglist>(const DiscoverySettings *s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1DiscoveryServerAddressMessage.html</anchorfile>
      <anchor>abefdaa1879683eaec9cc687718213096</anchor>
      <arglist>(BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1DiscoveryServerAddressMessage.html</anchorfile>
      <anchor>ae5d2659fc6714739b71082ad35a3478a</anchor>
      <arglist>(BinaryInput &amp;b)</arglist>
    </member>
    <member kind="variable">
      <type>const DiscoverySettings *</type>
      <name>settings</name>
      <anchorfile>classG3D_1_1DiscoveryServerAddressMessage.html</anchorfile>
      <anchor>aac8e9425c271d2ca12bff3bb1e9a4fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>correctProtocol</name>
      <anchorfile>classG3D_1_1DiscoveryServerAddressMessage.html</anchorfile>
      <anchor>a8163cba39744d56cbd337537941b54fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>serverProtocolVersion</name>
      <anchorfile>classG3D_1_1DiscoveryServerAddressMessage.html</anchorfile>
      <anchor>a15d5f50f3ba8ad9953920da2a07c6e11</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; NetAddress &gt;</type>
      <name>address</name>
      <anchorfile>classG3D_1_1DiscoveryServerAddressMessage.html</anchorfile>
      <anchor>a5b73dbb938e37508943984ece51efa72</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::DiscoverySettings</name>
    <filename>classG3D_1_1DiscoverySettings.html</filename>
    <member kind="function">
      <type></type>
      <name>DiscoverySettings</name>
      <anchorfile>classG3D_1_1DiscoverySettings.html</anchorfile>
      <anchor>a6862f5866f771eee352c76dad66d9b3c</anchor>
      <arglist>(const char *_appProtocolName, int _appProtocolVersion, uint16 _serverBroadcast=6173, uint16 _clientBroadcast=6174, uint16 _serverAdvertisementPort=6175)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>appProtocolName</name>
      <anchorfile>classG3D_1_1DiscoverySettings.html</anchorfile>
      <anchor>af92aeab646234928bc3b243e00dc69f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>appProtocolVersion</name>
      <anchorfile>classG3D_1_1DiscoverySettings.html</anchorfile>
      <anchor>ac88d0cf55e3b190bfb80a08dfa6fab9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>serverBroadcastPort</name>
      <anchorfile>classG3D_1_1DiscoverySettings.html</anchorfile>
      <anchor>a69bc992fc117e46fe0517d3752b2f10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>clientBroadcastPort</name>
      <anchorfile>classG3D_1_1DiscoverySettings.html</anchorfile>
      <anchor>a5ba8e1cae7d6c37dccbee693363be35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>serverAdvertisementPort</name>
      <anchorfile>classG3D_1_1DiscoverySettings.html</anchorfile>
      <anchor>af202f11c7992563029bca92c0c0e6326</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Draw</name>
    <filename>classG3D_1_1Draw.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>poly2DOutline</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>add9eb7f2eb840fdf782908806b21212c</anchor>
      <arglist>(const Array&lt; Vector2 &gt; &amp;polygon, RenderDevice *renderDevice, const Color4 &amp;color=Color3::yellow())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>poly2D</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a557482ee16c5b3c86d4ba241a29da010</anchor>
      <arglist>(const Array&lt; Vector2 &gt; &amp;polygon, RenderDevice *renderDevice, const Color4 &amp;color=Color3::yellow())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a3fdeafdbf861e8e146c4866bbe94eab0</anchor>
      <arglist>(const Box &amp;box, RenderDevice *rd, const Color4 &amp;solidColor=Color4(1,.2f,.2f,.5f), const Color4 &amp;wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a6b7e5e9752201b5e3622771410b38836</anchor>
      <arglist>(const AABox &amp;box, RenderDevice *rd, const Color4 &amp;solidColor=Color4(1,.2f,.2f,.5f), const Color4 &amp;wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a391e49d6783e8654cc8be987ec44393f</anchor>
      <arglist>(const Sphere &amp;sphere, RenderDevice *rd, const Color4 &amp;solidColor=Color4(1, 1, 0,.5f), const Color4 &amp;wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a1ca8dcfc606acbd1b164e91557f3ce8f</anchor>
      <arglist>(const Plane &amp;plane, RenderDevice *rd, const Color4 &amp;solidColor=Color4(.2f,.2f, 1,.5f), const Color4 &amp;wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>line</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a7b912028de0c1ec621a1a52d7369b598</anchor>
      <arglist>(const Line &amp;line, RenderDevice *rd, const Color4 &amp;color=Color3::black())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lineSegment</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>aec13f2861f5e6859b0e6cbe163f8ad0b</anchor>
      <arglist>(const LineSegment &amp;lineSegment, RenderDevice *rd, const Color4 &amp;color=Color3::black(), float scale=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>vertexNormals</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a1a64194678b304334944e2a25dae1d31</anchor>
      <arglist>(const G3D::MeshAlg::Geometry &amp;geometry, RenderDevice *renderDevice, const Color4 &amp;color=Color3::green() *.5, float scale=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>vertexVectors</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a7a301da7073a2b9acd183fa0e7043e2b</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexArray, const Array&lt; Vector3 &gt; &amp;directionArray, RenderDevice *renderDevice, const Color4 &amp;color=Color3::red() *0.5, float scale=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>afb86d18f0b622300180aaae0b0fb7c69</anchor>
      <arglist>(const Capsule &amp;capsule, RenderDevice *renderDevice, const Color4 &amp;solidColor=Color4(1, 0, 1,.5), const Color4 &amp;wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>aed534d4146a7ee10ae6895a90b8a8af5</anchor>
      <arglist>(const Cylinder &amp;cylinder, RenderDevice *renderDevice, const Color4 &amp;solidColor=Color4(1, 1, 0,.5), const Color4 &amp;wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>af8109bb202f893a42da3a451fea484af</anchor>
      <arglist>(const class Ray &amp;ray, RenderDevice *renderDevice, const Color4 &amp;color=Color3::orange(), float scale=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>arrow</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a1e70e912d0642c8713829084a83402c4</anchor>
      <arglist>(const Vector3 &amp;start, const Vector3 &amp;direction, RenderDevice *renderDevice, const Color4 &amp;color=Color3::orange(), float scale=1.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a551e67f8f75802e83b21945fb71377b7</anchor>
      <arglist>(const class CoordinateFrame &amp;cframe, RenderDevice *renderDevice, const Color4 &amp;xColor=Color3::red(), const Color4 &amp;yColor=Color3::green(), const Color4 &amp;zColor=Color3::blue(), float scale=1.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a412c68165b8f0932f052820f9a046329</anchor>
      <arglist>(RenderDevice *renderDevice, const Color4 &amp;xColor=Color3::red(), const Color4 &amp;yColor=Color3::green(), const Color4 &amp;zColor=Color3::blue(), float scale=1.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rect2D</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a4562124fa41c9da546d3bbb3988d5cd7</anchor>
      <arglist>(const class Rect2D &amp;rect, RenderDevice *rd, const Color4 &amp;color=Color3::white(), const Vector2 &amp;texCoord0=Vector2(1, 1), const Vector2 &amp;texCoord1=Vector2(1, 1), const Vector2 &amp;texCoord2=Vector2(1, 1), const Vector2 &amp;texCoord3=Vector2(1, 1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fastRect2D</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>aba864d617c6b4123a5a785580f2334ae</anchor>
      <arglist>(const Rect2D &amp;rect, RenderDevice *rd, const Color4 &amp;color=Color3::white())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rect2D</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a8ef1f8e5c58225661188d530708b2696</anchor>
      <arglist>(const class Rect2D &amp;rect, RenderDevice *rd, const Color4 &amp;color, const Rect2D &amp;texCoord0, const Rect2D &amp;texCoord1=Rect2D::xywh(0, 0, 1, 1), const Rect2D &amp;texCoord2=Rect2D::xywh(0, 0, 1, 1), const Rect2D &amp;texCoord3=Rect2D::xywh(0, 0, 1, 1))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rect2DBorder</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a4f320c719f33cc189751ddee4e75daea</anchor>
      <arglist>(const class Rect2D &amp;rect, RenderDevice *rd, const Color4 &amp;color=Color3::black(), float innerBorder=0, float outerBorder=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>frustum</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>a58308de7799c97e7df5a9d68d9ba2df8</anchor>
      <arglist>(const class GCamera::Frustum &amp;frustum, RenderDevice *rd, const Color4 &amp;color=Color4(1,.4f,.4f, 0.2f), const Color4 &amp;wire=Color3::black())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fullScreenImage</name>
      <anchorfile>classG3D_1_1Draw.html</anchorfile>
      <anchor>ab9701d0516932ec08f905f0a9b43015a</anchor>
      <arglist>(const class GImage &amp;im, RenderDevice *renderDevice)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::DXCaps</name>
    <filename>classG3D_1_1DXCaps.html</filename>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>version</name>
      <anchorfile>classG3D_1_1DXCaps.html</anchorfile>
      <anchor>acce7d9ba4fe0d83a1344bb4fa334113b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64</type>
      <name>videoMemorySize</name>
      <anchorfile>classG3D_1_1DXCaps.html</anchorfile>
      <anchor>a6d8a3e5a2a7a2b3bb2951e31d2db1305</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MeshAlg::Edge</name>
    <filename>classG3D_1_1MeshAlg_1_1Edge.html</filename>
    <member kind="function">
      <type></type>
      <name>Edge</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Edge.html</anchorfile>
      <anchor>aac7ed709ef00e82a67508d199c2626cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsVertex</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Edge.html</anchorfile>
      <anchor>a2165a5c594aa54e7046b64c2ffe5a62e</anchor>
      <arglist>(int v) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inFace</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Edge.html</anchorfile>
      <anchor>a6a819c33389776413e1628c67a728e61</anchor>
      <arglist>(int f) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>boundary</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Edge.html</anchorfile>
      <anchor>ae3cd04e5aea895e0807847d1c7bd4bd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broken</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Edge.html</anchorfile>
      <anchor>addeaa261d80e193f7dbff4f2e06f3362</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Edge</type>
      <name>reverse</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Edge.html</anchorfile>
      <anchor>ab9773b43332645667e934dc1571e265f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vertexIndex</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Edge.html</anchorfile>
      <anchor>a54ebf6a38bc4aac1c531b3809ded57a4</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>faceIndex</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Edge.html</anchorfile>
      <anchor>ab1b3b405c4ac085b7c8e79ae92ae5fb5</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Table::Entry</name>
    <filename>classG3D_1_1Table_1_1Entry.html</filename>
    <member kind="variable">
      <type>Key</type>
      <name>key</name>
      <anchorfile>classG3D_1_1Table_1_1Entry.html</anchorfile>
      <anchor>aa5f9aeda10b3f7aaa3a003db030ec999</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Value</type>
      <name>value</name>
      <anchorfile>classG3D_1_1Table_1_1Entry.html</anchorfile>
      <anchor>a500625a63b7acc4be0187e2604d6467b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GImage::Error</name>
    <filename>classG3D_1_1GImage_1_1Error.html</filename>
    <member kind="function">
      <type></type>
      <name>Error</name>
      <anchorfile>classG3D_1_1GImage_1_1Error.html</anchorfile>
      <anchor>a08a03adb525ecd753f785d23adf400ba</anchor>
      <arglist>(const std::string &amp;reason, const std::string &amp;filename=&quot;&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>reason</name>
      <anchorfile>classG3D_1_1GImage_1_1Error.html</anchorfile>
      <anchor>af0ce6c8c3b63e1d65f616144a833f130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>classG3D_1_1GImage_1_1Error.html</anchorfile>
      <anchor>aca5b3b65627edf2e8ce40e8889f3973e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AnyVal::Exception</name>
    <filename>classG3D_1_1AnyVal_1_1Exception.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Exception</name>
      <anchorfile>classG3D_1_1AnyVal_1_1Exception.html</anchorfile>
      <anchor>a088ab469016f916110e6f1f3a06d759b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GCamera::Frustum::Face</name>
    <filename>classG3D_1_1GCamera_1_1Frustum_1_1Face.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>vertexIndex</name>
      <anchorfile>classG3D_1_1GCamera_1_1Frustum_1_1Face.html</anchorfile>
      <anchor>ad94d159d8c4b39ea943ff99606de70cc</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>Plane</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1GCamera_1_1Frustum_1_1Face.html</anchorfile>
      <anchor>aa7b9638af06b3725aefc4d1c4ad7df8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MeshAlg::Face</name>
    <filename>classG3D_1_1MeshAlg_1_1Face.html</filename>
    <member kind="function">
      <type></type>
      <name>Face</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Face.html</anchorfile>
      <anchor>a88465bf1ecceddba688a3eba793a8991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsVertex</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Face.html</anchorfile>
      <anchor>a5f26a49fe7d87d2db289bc1e602a3b70</anchor>
      <arglist>(int v) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsEdge</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Face.html</anchorfile>
      <anchor>a198bd0248d7fe7b6ede8c47cf1a23712</anchor>
      <arglist>(int e) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsDirectedEdge</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Face.html</anchorfile>
      <anchor>a7b84ea0e4da481bc0b46cbc24861f6f8</anchor>
      <arglist>(int e) const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vertexIndex</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Face.html</anchorfile>
      <anchor>aa05090375a12b483f3fa784659441982</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>edgeIndex</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Face.html</anchorfile>
      <anchor>a1e2d627d64faa69570c228f392fccdc3</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>NONE</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Face.html</anchorfile>
      <anchor>a62bb5fc1d62ce650c721e4c540856537</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::FirstPersonManipulator</name>
    <filename>classG3D_1_1FirstPersonManipulator.html</filename>
    <base>G3D::Manipulator</base>
    <member kind="enumeration">
      <type></type>
      <name>MouseMode</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a3a65c7866ae7c657b5ed8d46db44d7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE_DIRECT</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a3a65c7866ae7c657b5ed8d46db44d7c9a0f1d3a081a4628d9e915de552faf8824</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE_DIRECT_RIGHT_BUTTON</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a3a65c7866ae7c657b5ed8d46db44d7c9a4528d7b045bbe3093c019b1e3b27f7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE_SCROLL_AT_EDGE</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a3a65c7866ae7c657b5ed8d46db44d7c9abb2c53849835170f8da77b2313edffbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE_PUSH_AT_EDGE</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a3a65c7866ae7c657b5ed8d46db44d7c9afbbc84816a84f4fe83eb48f313d856bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE_DIRECT</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a3a65c7866ae7c657b5ed8d46db44d7c9a0f1d3a081a4628d9e915de552faf8824</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE_DIRECT_RIGHT_BUTTON</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a3a65c7866ae7c657b5ed8d46db44d7c9a4528d7b045bbe3093c019b1e3b27f7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE_SCROLL_AT_EDGE</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a3a65c7866ae7c657b5ed8d46db44d7c9abb2c53849835170f8da77b2313edffbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE_PUSH_AT_EDGE</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a3a65c7866ae7c657b5ed8d46db44d7c9afbbc84816a84f4fe83eb48f313d856bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FirstPersonManipulator</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a4997fec2419ad7cba0d16a82c7905226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FirstPersonManipulator</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a62a7b46aff5984def7abf0b119dde94d</anchor>
      <arglist>(class RenderDevice *, class UserInput *)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>init</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a7a40e1b32ecfc761846c4fadd3fe94bc</anchor>
      <arglist>(class RenderDevice *device, class UserInput *input)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FirstPersonManipulator</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>aa572d19b0576c38cb07013d17d73c217</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a5ccc091cd1a3fee0c65ac6f29c89c7d6</anchor>
      <arglist>(bool a)</arglist>
    </member>
    <member kind="function">
      <type>MouseMode</type>
      <name>mouseMode</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a01c809b287f37841ff46989617ba403b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseMode</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>ab840950029f26ee743c5e8ec49d8cfa2</anchor>
      <arglist>(MouseMode m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>active</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a08be7457c3e7b2dafeff526d86b2f211</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoveRate</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>ad414981f9f26f284189176db5c07e57f</anchor>
      <arglist>(double metersPerSecond)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTurnRate</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>adeded7766eef1865a6d22ae788c3d0c4</anchor>
      <arglist>(double radiansPerSecond)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a5d13d5e385cae2aa1df38761289a6b3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>doSimulation</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>ade218c3051e495f34128f1e66da60f51</anchor>
      <arglist>(double elapsedTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a13484352d07c6f1df0b0051ce979bf20</anchor>
      <arglist>(const Vector3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookAt</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a38d7b8717515db6913ec64325c634f5b</anchor>
      <arglist>(const Vector3 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getYaw</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>adf6201f4e3a3445442015497e05c4dbb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPitch</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a98d24aa9a239e0d4413fd1904fe31d3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Vector3 &amp;</type>
      <name>getPosition</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a933d8ecec4c38bc458e901de67435b65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getLookVector</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a92d472c4b5e494f897ec04c680fc72ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getStrafeVector</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>ad7fcc7b72a2a33e04feb52b0d5c42b13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame G3D_DEPRECATED</type>
      <name>getCoordinateFrame</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>ad0a1eaf55cef88d1e872ccab3ecb7df2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>getCoordinateFrame</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a521c0bd084b83aab8e7f88d84083e05f</anchor>
      <arglist>(CoordinateFrame &amp;c) const</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>setCoordinateFrame</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>ad573e2698daaf9c49563a12c775d970b</anchor>
      <arglist>(const CoordinateFrame &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrame</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a4394b6a0f358b0077e4ba7e37db7bbc8</anchor>
      <arglist>(const CoordinateFrame &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFrame</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a1a2a3e325fd355ba3c7108af03f99dab</anchor>
      <arglist>(CoordinateFrame &amp;c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame</type>
      <name>frame</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a47f774d97cc36d3b6692c53ae267d4c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPosedModel</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a884b560f1a269c51b0972010f81c714e</anchor>
      <arglist>(Array&lt; PosedModelRef &gt; &amp;p3d, Array&lt; PosedModel2DRef &gt; &amp;p2d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onNetwork</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a02e6a8408435c5cdc6c6643ec201b874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onLogic</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>ad369d6d2de947771bcd1e548b7934e8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onSimulation</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>ab39985edb7c86f09994961ecfe13a4c7</anchor>
      <arglist>(RealTime rdt, SimTime sdt, SimTime idt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onUserInput</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a2ae31a2a718dc14fe7615e544c2b001e</anchor>
      <arglist>(UserInput *ui)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>onEvent</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a6e0a2dea40939ad424bf1f2db36fce33</anchor>
      <arglist>(const GEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FirstPersonManipulatorRef</type>
      <name>create</name>
      <anchorfile>classG3D_1_1FirstPersonManipulator.html</anchorfile>
      <anchor>a4d42aede6df69e8211ef3c263eb72155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Framebuffer</name>
    <filename>classG3D_1_1Framebuffer.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="enumeration">
      <type></type>
      <name>AttachmentPoint</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT0</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddac5aac06417f77b3a34501ab288e879f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT1</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda00e6c87215f7cee82d856553e356ad4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT2</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda01982cfa0f76e611e994f71769f6cbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT3</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda5c7346a307df69d3901b4a0bb167b98c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT4</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda8b81f4a3e3de34b4c0afe71be96368d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT5</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddacff866f859fd0643d33b780c470b0943</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT6</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda68ceff226c8f579188ac594b41ed227b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT7</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda0893456a39b434b865ec44265ce2093b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT8</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda8e018248f44d4f6c22e118feaf0428de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT9</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddab12282223cebcaee820341b2964d81a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT10</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddafdea824cf9191da70c2587a7307c4707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT11</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddaaeb0cb805abc1869b83950d30757962f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT12</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddadfb183fd999baf3777a872745d51f154</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT13</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddaf2352f207414f28290cc8783b0c430ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT14</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda10e375b8c18b06afee6b4689507af990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT15</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda57d3241e58e9331814b8fae25cc32d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_ATTACHMENT</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda7cf5159cbff90395640fd0bdd8686876</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_ATTACHMENT</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddafc995f1b4797c89ed158a137938ffc77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT0</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddac5aac06417f77b3a34501ab288e879f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT1</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda00e6c87215f7cee82d856553e356ad4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT2</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda01982cfa0f76e611e994f71769f6cbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT3</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda5c7346a307df69d3901b4a0bb167b98c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT4</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda8b81f4a3e3de34b4c0afe71be96368d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT5</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddacff866f859fd0643d33b780c470b0943</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT6</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda68ceff226c8f579188ac594b41ed227b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT7</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda0893456a39b434b865ec44265ce2093b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT8</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda8e018248f44d4f6c22e118feaf0428de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT9</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddab12282223cebcaee820341b2964d81a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT10</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddafdea824cf9191da70c2587a7307c4707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT11</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddaaeb0cb805abc1869b83950d30757962f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT12</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddadfb183fd999baf3777a872745d51f154</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT13</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddaf2352f207414f28290cc8783b0c430ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT14</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda10e375b8c18b06afee6b4689507af990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_ATTACHMENT15</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda57d3241e58e9331814b8fae25cc32d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_ATTACHMENT</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135dda7cf5159cbff90395640fd0bdd8686876</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_ATTACHMENT</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>af94c673df8e4fb9d0dbf033c889135ddafc995f1b4797c89ed158a137938ffc77</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Framebuffer</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>a7cd5eb9e6ee9236804ee8aae792ddfe5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>afbc32451fe422d00b387707d84b9c5a0</anchor>
      <arglist>(AttachmentPoint ap, const void *n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>aee62bbbbf5b7a46c8b48294dd6f087f7</anchor>
      <arglist>(AttachmentPoint ap, const TextureRef &amp;texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>ae829ad9daa1342b340ffe7cd58dd1f2f</anchor>
      <arglist>(AttachmentPoint ap, const RenderbufferRef &amp;renderbuffer)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>openGLID</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>ad654c61f75be250bac0c83673b0c1308</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>width</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>a1a5ddcdd86d1945948df7cdee79821da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>height</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>a47b51db0a0ec49e6b4badc245183a3ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>rect2DBounds</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>aacc5e01f1267e23ad5fc1c8a2a8beacb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>a4cf6cdf650f92df6d484ac55e85f633b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FramebufferRef</type>
      <name>fromGLFramebuffer</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>a02475a05ef3b0210aeaa5e2d4aeda2e7</anchor>
      <arglist>(const std::string &amp;name, GLuint framebufferID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FramebufferRef</type>
      <name>create</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>a6c167395fdb2feb722945d7c0071a0c3</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RenderDevice</name>
      <anchorfile>classG3D_1_1Framebuffer.html</anchorfile>
      <anchor>a7532f2d0335e7fc849b32c467b27a0a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GCamera::Frustum</name>
    <filename>classG3D_1_1GCamera_1_1Frustum.html</filename>
    <class kind="class">G3D::GCamera::Frustum::Face</class>
    <member kind="variable">
      <type>Array&lt; Vector4 &gt;</type>
      <name>vertexPos</name>
      <anchorfile>classG3D_1_1GCamera_1_1Frustum.html</anchorfile>
      <anchor>a307550728fdb02a54d647c935bb446ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Face &gt;</type>
      <name>faceArray</name>
      <anchorfile>classG3D_1_1GCamera_1_1Frustum.html</anchorfile>
      <anchor>a3b2650d71ecf35a9c43662a1dfdcec0c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GApp</name>
    <filename>classG3D_1_1GApp.html</filename>
    <class kind="class">G3D::GApp::Settings</class>
    <member kind="function">
      <type>const Stopwatch &amp;</type>
      <name>graphicsWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a996c5750b9c8e3e1a1c8751636ba7c7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Stopwatch &amp;</type>
      <name>waitWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a566b7c4971a006da5de1482523a7e5d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Stopwatch &amp;</type>
      <name>logicWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a5dd7af5a13c466287674283195091f85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Stopwatch &amp;</type>
      <name>networkWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a0af9b1df1f997d1db3f61c3e160e2461</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Stopwatch &amp;</type>
      <name>userInputWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>ac2bc0ba54a3353d4fdc5b12b8f82010a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Stopwatch &amp;</type>
      <name>simulationWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>ac1a8af12310ffe54cbff21d397a995f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GWindow *</type>
      <name>window</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a516e4d6f0d6c9de9ab17913da6de51b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>debugMode</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>acfc1c1f263d4d80ab3dec89ebf713d99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDebugMode</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a4da5cddc0308ed2efe74aac7d9ce0c16</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>debugPrintf</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a2a03932108d51f2d83776abb2d8b39fb</anchor>
      <arglist>(const char *fmt ...)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderDebugInfo</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a4077df549c5f5f13922a1e1210aaea7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GApp</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>acef51a239666cd514f6d1a5e0c4ed3c1</anchor>
      <arglist>(const Settings &amp;options=Settings(), GWindow *window=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GApp</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>ac2cbaa359cd52d06fa4d0efe5d48ff47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a63afc32342ff8c91b6efeddfc5020a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addModule</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>aa60922c24e6101fb3ebb9838a7e53d2c</anchor>
      <arglist>(const GModuleRef &amp;module, GModuleManager::EventPriority p=GModuleManager::NORMAL_PRIORITY)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeModule</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a3f4b3cdd601d70a1b608d77a53feef87</anchor>
      <arglist>(const GModuleRef &amp;module)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dataDir</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a1887d1ba63c46aa2fda41694718667b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Log *</type>
      <name>debugLog</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>aa1172e7f601b509b98d645e270fa0774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RenderDevice *</type>
      <name>renderDevice</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a45b50738a3db86c3b4e1a1d74f158632</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NetworkDevice *</type>
      <name>networkDevice</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>afa50c3b62d6a1d864f9700030be880ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CFontRef</type>
      <name>debugFont</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>ae53881924c5481ee85939226594e29b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UserInput *</type>
      <name>userInput</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a1673f3690f3bc8a599b9ef4239e6535f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>endProgram</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a3945d58243aeddc560102b2e22e8e44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TextureManager</type>
      <name>textureManager</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a31cc70b8fc8b5433f0ca534fee2b5e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GCamera</type>
      <name>debugCamera</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a0c39b456002c78005cba7e78187da22a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ManualCameraController</type>
      <name>debugController</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a7699c614b08c0fe141cc17645300b047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; std::string &gt;</type>
      <name>debugText</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a08994550689ffc6fff989098f391519c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>debugShowText</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>afdc037165f3622f39829e7c67c6af51b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>debugQuitOnEscape</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>af6d3f4007a9ef4d9572a6c536b56872b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>debugTabSwitchCamera</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a24a929bca5183ff2119f91034ddf560d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>debugShowRenderingStats</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a67818d9e14dcc965c4f4748203533212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoResize</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a8a6b45c51168332135c17735f7cf3672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>catchCommonExceptions</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a63382b18cbec92ed7bfdb4d146cba5be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>main</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>aec8e55b0a1b33a4eecdd9ba9f2342086</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stopwatch</type>
      <name>m_graphicsWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a8782974ab2168fe806152d081c44bbb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stopwatch</type>
      <name>m_logicWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a90de14ad3503fe9281f7b719860dec42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stopwatch</type>
      <name>m_networkWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>afc2db8a6b2008e2e146f4664c7db25b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stopwatch</type>
      <name>m_userInputWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a756eb513319f8512100c5916692e42e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stopwatch</type>
      <name>m_simulationWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a3709b9e97a06c315d2ee12bde66439b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stopwatch</type>
      <name>m_waitWatch</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>ae5ced4f2acb5a009722b7bcd19420791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GModuleManagerRef</type>
      <name>m_moduleManager</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>a33dbfe78d298548c97dfda89e7284f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>GApplet</name>
      <anchorfile>classG3D_1_1GApp.html</anchorfile>
      <anchor>ad159235d6d1814da996bc497889f1f08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GApplet</name>
    <filename>classG3D_1_1GApplet.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addModule</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a64785be6b159e475af08bee3ac6473e8</anchor>
      <arglist>(const GModuleRef &amp;module, GModuleManager::EventPriority p=GModuleManager::NORMAL_PRIORITY)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeModule</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>ae2da4aeb6359492160a358fb43e5ee16</anchor>
      <arglist>(const GModuleRef &amp;module)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>simTimeRate</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>af04cdf7b095771b7a726eaee0b3d0e6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSimTimeRate</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a8c4e447aaf1d4e58c07c4481181c0ac6</anchor>
      <arglist>(double s)</arglist>
    </member>
    <member kind="function">
      <type>RealTime</type>
      <name>realTime</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a6b4b0db4ec42fec3d8ee6321d94ad5df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRealTime</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>aa08bc4184dfaec153713cb714476f9dd</anchor>
      <arglist>(RealTime r)</arglist>
    </member>
    <member kind="function">
      <type>SimTime</type>
      <name>simTime</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a3b10d0408bd8310b4749c0bd5b81d493</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIdealSimTime</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>ad94d728c45cfcd65650b2e919d6daf33</anchor>
      <arglist>(SimTime s)</arglist>
    </member>
    <member kind="function">
      <type>SimTime</type>
      <name>idealSimTime</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>aff5e69b17acbd509387111e7ca5bde53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSimTime</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a6fa7f61cbbddb268e0f4dd55637af651</anchor>
      <arglist>(SimTime s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDesiredFrameRate</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>acc59541e85deafc1875c8ac3d8a8171b</anchor>
      <arglist>(float fps)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>desiredFrameRate</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a0efbccd44a415a87561eec8fe6c18180</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RealTime</type>
      <name>desiredFrameDuration</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a89f2f2b074bded8d00c6c92ccd1b6508</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GApplet</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>ac8c84b871b6bcfddb476a0a2aa362221</anchor>
      <arglist>(GApp *_app)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GApplet</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>ab4eae8fb7d6d1f5016eb8e3f4ac86b5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a39d8d2b79a80f0d6bcfbd5d09471adf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginRun</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a6b70290001193ce9fa66f09ade342868</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>oneFrame</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a69062ba1dcd3f50ba3c1ee1232b9b080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endRun</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a65f4adc5a3662d5e014e27019b3ecfc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getPosedModel</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a079fe2aac119d01bc4ead328ba4470bc</anchor>
      <arglist>(Array&lt; PosedModelRef &gt; &amp;posedArray, Array&lt; PosedModel2DRef &gt; &amp;posed2DArray)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void G3D_DEPRECATED</type>
      <name>doSimulation</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a49b3f7a021add8878431e5d63aa70767</anchor>
      <arglist>(RealTime rdt)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>onSimulation</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a4056cc8a03d6e09d6b81bfe1ae56c01b</anchor>
      <arglist>(RealTime rdt, SimTime sdt, SimTime idt)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void G3D_DEPRECATED</type>
      <name>doGraphics</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a47196278ed59a99199f88c5a726e0c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>onGraphics</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a4a157f38d11ebe26625ef5a809377cd2</anchor>
      <arglist>(RenderDevice *rd)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void G3D_DEPRECATED</type>
      <name>doNetwork</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>ac4b470f9957e6a5a36da64bb64d53f2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>onNetwork</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a03d9e92ef6e9e2f8416b131c6128467d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>onWait</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a1015f35ea44678b66f7d28929648da71</anchor>
      <arglist>(RealTime cumulativeTime, RealTime frameDuration)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void G3D_DEPRECATED</type>
      <name>doLogic</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a1359993fca668c8e22cae2b142298952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>onLogic</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>ab056c1eecc730e6b08987f73cc5972e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void G3D_DEPRECATED</type>
      <name>init</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>abf7a8ae030f94af8761a51f93fc9c4eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>onInit</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a6f9df7eae4099785483c99bb354bf57e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void G3D_DEPRECATED</type>
      <name>cleanup</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a3d0caeae113a30070117e26cd8c6f268</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>onCleanup</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a457508d4c71cdee090bda358f3d82015</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void G3D_DEPRECATED</type>
      <name>processEvent</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>aab59879d258736e646736139b664fe45</anchor>
      <arglist>(const GEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>onEvent</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>ae3c90fec10596a1ccd9fd5ae5cc1de39</anchor>
      <arglist>(const GEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void G3D_DEPRECATED</type>
      <name>doUserInput</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>adeb61e384ee1d7ea20101fb0063862c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>onUserInput</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>aa9504997637b6d3fe20e6b2ea0566719</anchor>
      <arglist>(class UserInput *userInput)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>onImGui</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a56a70e5e7925d5ad50d55a064541e506</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GModuleManagerRef</type>
      <name>m_moduleManager</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a79fd18d56add25382b7c478ffeffd591</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>endApplet</name>
      <anchorfile>classG3D_1_1GApplet.html</anchorfile>
      <anchor>a21a071a66522439aa71603e2202c692c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GCamera</name>
    <filename>classG3D_1_1GCamera.html</filename>
    <class kind="class">G3D::GCamera::Frustum</class>
    <member kind="function">
      <type></type>
      <name>GCamera</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a281b88a9efecded1fde87a96bf689b57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GCamera</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a9097bf2513a5e1418d553fe2713b90bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>getCoordinateFrame</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a260c6666708406796842b0281f71a895</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCoordinateFrame</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a00432548aa4f7ddb963cc98e818c2cb1</anchor>
      <arglist>(CoordinateFrame &amp;c) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoordinateFrame</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>aa7f0e527eeba79a2fc872af22d44b2cd</anchor>
      <arglist>(const CoordinateFrame &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFieldOfView</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a33cb4a18763aa3bf7eabd62ec2b12670</anchor>
      <arglist>(float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImagePlaneDepth</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a3641fa293952368ef58bad27cecd5f47</anchor>
      <arglist>(float depth, const class Rect2D &amp;viewport)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFieldOfView</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>af8324d0a56de51a07c73f57aa52d3233</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>G3D::Vector3</type>
      <name>project</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a82b39c9089a7ce46344b91f624358ce1</anchor>
      <arglist>(const G3D::Vector3 &amp;point, const class Rect2D &amp;viewport) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>worldToScreenSpaceArea</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a7abb988f7eb5322de36306364d4278b9</anchor>
      <arglist>(float area, float z, const class Rect2D &amp;viewport) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get3DViewportCorners</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>aa9744655f09fdd292a6605798e3953b2</anchor>
      <arglist>(const class Rect2D &amp;viewport, Vector3 &amp;outUR, Vector3 &amp;outUL, Vector3 &amp;outLL, Vector3 &amp;outLR) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getImagePlaneDepth</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>aab504ec80f676449cf05190f92a505a7</anchor>
      <arglist>(const class Rect2D &amp;viewport) const</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>worldRay</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a5c9654e83bbdb8bfea54841d49996403</anchor>
      <arglist>(float x, float y, const class Rect2D &amp;viewport) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNearPlaneZ</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>ad7564094f0994fab7c83a2f67e879401</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFarPlaneZ</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>af394e8335f5ced1f027035a41ff4ca6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFarPlaneZ</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a882b788bcbd6d37bf158096b22169cbf</anchor>
      <arglist>(float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNearPlaneZ</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>aa4ed2ec7a8b39200b800e663ac0c3207</anchor>
      <arglist>(float z)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getViewportWidth</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a831e1dc82d38a1f1b497efb7367fcb8d</anchor>
      <arglist>(const class Rect2D &amp;viewport) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getViewportHeight</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>af8d5b979321d9bba0d8eb288289d3bb6</anchor>
      <arglist>(const class Rect2D &amp;viewport) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a7831f84a6e0e017155c0b1d54f999f30</anchor>
      <arglist>(const Vector3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookAt</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a6804486e7a5f71e22cb47661ae186e49</anchor>
      <arglist>(const Vector3 &amp;position, const Vector3 &amp;up=Vector3::unitY())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getClipPlanes</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>af380e4f4e5fb727da01e1d56412d4fc2</anchor>
      <arglist>(const Rect2D &amp;viewport, Array&lt; Plane &gt; &amp;outClip) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFrustum</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a7a90032acf813181a65c0d5404593cb4</anchor>
      <arglist>(const Rect2D &amp;viewport, GCamera::Frustum &amp;f) const</arglist>
    </member>
    <member kind="function">
      <type>GCamera::Frustum</type>
      <name>frustum</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>acea5a69800f293f57a37c4a5b70b389a</anchor>
      <arglist>(const Rect2D &amp;viewport) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a91136fb0c9da826bd7236e6807501413</anchor>
      <arglist>(class BinaryOutput &amp;bo) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1GCamera.html</anchorfile>
      <anchor>a4a3f1a97cc9bfd13d7d94b581e6d2ca8</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MeshAlg::Geometry</name>
    <filename>classG3D_1_1MeshAlg_1_1Geometry.html</filename>
    <member kind="function">
      <type>Geometry &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Geometry.html</anchorfile>
      <anchor>a1e3b188b7b11f196a30164261add9757</anchor>
      <arglist>(const Geometry &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Geometry.html</anchorfile>
      <anchor>a4f7d71792058c0bd3f7c0d2e5502049d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Vector3 &gt;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Geometry.html</anchorfile>
      <anchor>a4923b22dba5b901208e441a275413362</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Vector3 &gt;</type>
      <name>normalArray</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Geometry.html</anchorfile>
      <anchor>afbc4bf4754b14abc4f809dff0ec56373</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GFont</name>
    <filename>classG3D_1_1GFont.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="enumeration">
      <type></type>
      <name>XAlign</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a2b96692c8c35c3fb3b410a51af4dfe59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XALIGN_RIGHT</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a2b96692c8c35c3fb3b410a51af4dfe59aef1082b34438c701f8628d84c7d445ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XALIGN_LEFT</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a2b96692c8c35c3fb3b410a51af4dfe59af5eaac5842148456ad6f01c178399153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XALIGN_CENTER</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a2b96692c8c35c3fb3b410a51af4dfe59a42ea59f1343d8fea083d558c8f310093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>YAlign</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>ae59913f17540a9340e1e2f1f96922b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YALIGN_TOP</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>ae59913f17540a9340e1e2f1f96922b80abe75cb5ecf29a656149b27c0fedfedba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YALIGN_BASELINE</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>ae59913f17540a9340e1e2f1f96922b80aeffc269969e69705c1f96af6804ff714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YALIGN_CENTER</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>ae59913f17540a9340e1e2f1f96922b80acf7c0fcda0ecd5907f0dad97de8bd60c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YALIGN_BOTTOM</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>ae59913f17540a9340e1e2f1f96922b80acbc0313738ce177c4bbb1b522c5e7e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Spacing</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a6cd1092ecc0d17c5fe48d7d1ef2f189d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPORTIONAL_SPACING</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a6cd1092ecc0d17c5fe48d7d1ef2f189da726d06342879f96c9113c7a80db81167</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIXED_SPACING</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a6cd1092ecc0d17c5fe48d7d1ef2f189daefb466cd2f89a9142c62fb3489f75afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XALIGN_RIGHT</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a2b96692c8c35c3fb3b410a51af4dfe59aef1082b34438c701f8628d84c7d445ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XALIGN_LEFT</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a2b96692c8c35c3fb3b410a51af4dfe59af5eaac5842148456ad6f01c178399153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XALIGN_CENTER</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a2b96692c8c35c3fb3b410a51af4dfe59a42ea59f1343d8fea083d558c8f310093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YALIGN_TOP</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>ae59913f17540a9340e1e2f1f96922b80abe75cb5ecf29a656149b27c0fedfedba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YALIGN_BASELINE</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>ae59913f17540a9340e1e2f1f96922b80aeffc269969e69705c1f96af6804ff714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YALIGN_CENTER</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>ae59913f17540a9340e1e2f1f96922b80acf7c0fcda0ecd5907f0dad97de8bd60c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YALIGN_BOTTOM</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>ae59913f17540a9340e1e2f1f96922b80acbc0313738ce177c4bbb1b522c5e7e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPORTIONAL_SPACING</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a6cd1092ecc0d17c5fe48d7d1ef2f189da726d06342879f96c9113c7a80db81167</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIXED_SPACING</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a6cd1092ecc0d17c5fe48d7d1ef2f189daefb466cd2f89a9142c62fb3489f75afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>texelSize</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a2b8cdb23049be89881b4c38f0da56eb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>draw2D</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a068397c1b62b692caa204a5a943ee3a5</anchor>
      <arglist>(RenderDevice *renderDevice, const std::string &amp;s, const Vector2 &amp;pos2D, double size=12, const Color4 &amp;color=Color3::black(), const Color4 &amp;outline=Color4::clear(), XAlign xalign=XALIGN_LEFT, YAlign yalign=YALIGN_TOP, Spacing spacing=PROPORTIONAL_SPACING) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2 G3D_DEPRECATED</type>
      <name>draw2D</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a71886dd21e4daa6a2adc4b55e3399af4</anchor>
      <arglist>(const std::string &amp;s, const Vector2 &amp;pos2D, double size=12, const Color4 &amp;color=Color3::black(), const Color4 &amp;outline=Color4::clear(), XAlign xalign=XALIGN_LEFT, YAlign yalign=YALIGN_TOP, Spacing spacing=PROPORTIONAL_SPACING) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>draw3D</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a4dd0d03983c8336b821ef72bf5b9fa9a</anchor>
      <arglist>(RenderDevice *renderDevice, const std::string &amp;s, const CoordinateFrame &amp;pos3D, double size=.1, const Color4 &amp;color=Color3::black(), const Color4 &amp;outline=Color4::clear(), XAlign xalign=XALIGN_LEFT, YAlign yalign=YALIGN_TOP, Spacing spacing=PROPORTIONAL_SPACING) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2 G3D_DEPRECATED</type>
      <name>draw3D</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a875fe219d0598c4d644191d16c3787ed</anchor>
      <arglist>(const std::string &amp;s, const CoordinateFrame &amp;pos3D, double size=.1, const Color4 &amp;color=Color3::black(), const Color4 &amp;outline=Color4::clear(), XAlign xalign=XALIGN_LEFT, YAlign yalign=YALIGN_TOP, Spacing spacing=PROPORTIONAL_SPACING) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>get2DStringBounds</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a757de7c8f3846c8a72ef0961d3abe858</anchor>
      <arglist>(const std::string &amp;s, double size=12, Spacing spacing=PROPORTIONAL_SPACING) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GFontRef G3D_DEPRECATED</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a5708ac8618c7b1a774d21127a49491d6</anchor>
      <arglist>(class RenderDevice *renderDevice, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GFontRef</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a6f5b9551a2b5850d4e1538c16688c235</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GFontRef</type>
      <name>fromMemory</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a448bd16b74a6b1d31384d6163bc85aec</anchor>
      <arglist>(const std::string &amp;name, const uint8 *bytes, const int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>convertRAWINItoPWF</name>
      <anchorfile>classG3D_1_1GFont.html</anchorfile>
      <anchor>a0a313bb0ce7e09a1a39c3936a5227b32</anchor>
      <arglist>(const std::string &amp;infileBase, std::string outfile=&quot;&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GImage</name>
    <filename>classG3D_1_1GImage.html</filename>
    <class kind="class">G3D::GImage::Error</class>
    <member kind="enumeration">
      <type></type>
      <name>Format</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JPEG</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa5021236987e25aecc06e5b8e1cb21af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BMP</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228faf42e4ea9008fcbc0778604bf659793ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TGA</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa9f14ea8d4b6eb75aba52e917fdbe4bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PCX</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fae28b805cbfc32899d5ba9c4b815ea466</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICO</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fabf93853be4231e9c8c7c190cf58a03d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PNG</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa3df19c4383364ebf3e600a3b6ce171d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PPM_ASCII</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa6e251dacff703f6d80bc4ce3daa0e321</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PPM</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa605d1a343e037da0be310cd9056d84a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTODETECT</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fac1462a7a6e1ebc8ebf8ef54ea0650a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa45f9591f61f41a3c67bcc5e51ecaac0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JPEG</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa5021236987e25aecc06e5b8e1cb21af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BMP</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228faf42e4ea9008fcbc0778604bf659793ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TGA</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa9f14ea8d4b6eb75aba52e917fdbe4bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PCX</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fae28b805cbfc32899d5ba9c4b815ea466</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICO</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fabf93853be4231e9c8c7c190cf58a03d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PNG</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa3df19c4383364ebf3e600a3b6ce171d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PPM_ASCII</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa6e251dacff703f6d80bc4ce3daa0e321</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PPM</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa605d1a343e037da0be310cd9056d84a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTODETECT</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fac1462a7a6e1ebc8ebf8ef54ea0650a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a53f41635214c11929c18a87b9d04228fa45f9591f61f41a3c67bcc5e51ecaac0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const uint8 *</type>
      <name>byte</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a6dca82d882cd6ed0f63f40e73df971ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Color3uint8 *</type>
      <name>pixel3</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a8597a3f56e501c6e4cf35be3e18e7e34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Color4uint8 *</type>
      <name>pixel4</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>aee3d2817e113899753bf30c1717117ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const uint8 &amp;</type>
      <name>pixel1</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>aa3d0309e9364097691fe70d53dacd78b</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>uint8 &amp;</type>
      <name>pixel1</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a0171c258475aa6c9d5b7138b9924128d</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>const Color3uint8 &amp;</type>
      <name>pixel3</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ae7b5cf8f471db744b40c279f714f6073</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>Color3uint8 &amp;</type>
      <name>pixel3</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a8a8ce48543c17d7639b696726371508c</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>const Color4uint8 &amp;</type>
      <name>pixel4</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a952dd08cd43aca89a3d7801d9f31189e</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>Color4uint8 &amp;</type>
      <name>pixel4</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a8db1aec6a547bfb7b7d7efe885b50b33</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>uint8 *</type>
      <name>byte</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a38b901ce7a1947e4aaca2723f775662c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color3uint8 *</type>
      <name>pixel3</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a250f70681101c79742252b1a4ed13f77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Color4uint8 *</type>
      <name>pixel4</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a621830990bdec87d78a30ec793a36b9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GImage</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a3c1a8b4fa3a44bfea7036f0881f13dd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GImage</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a1a6ca12d4f41a8f1bf695f3d23d740a7</anchor>
      <arglist>(const std::string &amp;filename, Format format=AUTODETECT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GImage</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a3e456d92c1ccfd2d82ccfbd86906a68f</anchor>
      <arglist>(const unsigned char *data, int length, Format format=AUTODETECT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GImage</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ad30d8289657b232c4c3dd5005fc2bfc3</anchor>
      <arglist>(int width, int height, int channels=3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GImage</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a2b3071c99678f30a00ebff311f1a60af</anchor>
      <arglist>(const GImage &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>GImage &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a20140ab669c3d8e41be84cf392328676</anchor>
      <arglist>(const GImage &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>GImage</type>
      <name>insertRedAsAlpha</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a73843edd40d91821244f445d905574c6</anchor>
      <arglist>(const GImage &amp;alpha) const</arglist>
    </member>
    <member kind="function">
      <type>GImage</type>
      <name>stripAlpha</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ab27076ab0ecf45296e39fca7384977e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a756183aa572b1587cb4c72ffdf9f9a04</anchor>
      <arglist>(const std::string &amp;filename, Format format=AUTODETECT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ac87c7102ec4362a4ccad555eb3901a94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GImage</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a46203b8fdaab4c57a0d68e5bfdf1c669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>aa3d4e92a920021ff46958a8bb134c862</anchor>
      <arglist>(int width, int height, int channels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertToRGBA</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a93dd429dbd983a24158d55e685b5b3cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertToRGB</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a1703805e2166509e6d1292b1ddbdf64f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertToL8</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>acfebd0ae6fd5c2251bfe0e5d30140a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ad68fcb42488346e6dfabbcfcecfd78ab</anchor>
      <arglist>(const std::string &amp;filename, Format format=AUTODETECT) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>encode</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a0eb809f22994d2024194ee9b0f33a344</anchor>
      <arglist>(Format format, uint8 *&amp;outData, int &amp;outLength) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>encode</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a8a8bb8b0d7896dbc814aa8c89127608c</anchor>
      <arglist>(Format format, BinaryOutput &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sizeInMemory</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a96d44f2ca0e6b99ac2207c2bcd4a2b95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Format</type>
      <name>resolveFormat</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a4ee2e2c5c230d19be4998c58cb60b93a</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>pasteSubImage</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>aa483903d187b3d970c82e383dc0be27b</anchor>
      <arglist>(GImage &amp;dest, const GImage &amp;src, int destX, int destY, int srcX, int srcY, int srcWidth, int srcHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>copySubImage</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>aa7e1b7ec6a53d5de54a75a4eabcf6c68</anchor>
      <arglist>(GImage &amp;dest, const GImage &amp;src, int srcX, int srcY, int srcWidth, int srcHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>supportedFormat</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a37e42e1ae103cb48945560741a8649dc</anchor>
      <arglist>(const std::string &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Format</type>
      <name>stringToFormat</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a938ce17fe88a903546eac58b36b2cc26</anchor>
      <arglist>(const std::string &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>R8G8B8_to_Y8U8V8</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a40618728633aacd75e02fe67bda43a39</anchor>
      <arglist>(int width, int height, const uint8 *in, uint8 *out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Y8U8V8_to_R8G8B8</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ab74b3d5d394e1a001137cf17824d11ec</anchor>
      <arglist>(int width, int height, const uint8 *in, uint8 *out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RGBtoRGBA</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a953d76b5c280fd83dec96b87959ce194</anchor>
      <arglist>(const uint8 *in, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RGBtoBGR</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a1e0307bdda1cd1bcb04066f56eb3b8ff</anchor>
      <arglist>(const uint8 *in, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RGBtoBGRA</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a177c2506165550dc543a6a0e79c11100</anchor>
      <arglist>(const uint8 *in, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RGBtoARGB</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a7fb3ae4757f4633ac9b1730ed16897f2</anchor>
      <arglist>(const uint8 *in, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RGBxRGBtoRGBA</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a4fd6c6c67d2c4cc5884802873802415c</anchor>
      <arglist>(const uint8 *colorRGB, const uint8 *alphaRGB, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>flipRGBVertical</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>afe66ba339a014e561d891c1162ecf251</anchor>
      <arglist>(const uint8 *in, uint8 *out, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>flipRGBAVertical</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a2983fae8f0f66b68a3da2062e1a13faa</anchor>
      <arglist>(const uint8 *in, uint8 *out, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeNormalMap</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>aaca4a46fa1a35c52c89ac1ba4ee1e2e2</anchor>
      <arglist>(const class GImage &amp;bump, class GImage &amp;normal, bool lowPassBump=false, bool scaleHeightByNz=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BAYER_G8B8_R8G8_to_R8G8B8_MHC</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a62cd1e6732e83a4fc1752b22e4c522e9</anchor>
      <arglist>(int w, int h, const uint8 *in, uint8 *_out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BAYER_G8R8_B8G8_to_R8G8B8_MHC</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a777eef053536b78d8443b207abce9ceb</anchor>
      <arglist>(int w, int h, const uint8 *in, uint8 *_out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BAYER_R8G8_G8B8_to_R8G8B8_MHC</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ae3f4e5f8e0669bc2994cc9f53cde9c83</anchor>
      <arglist>(int w, int h, const uint8 *in, uint8 *_out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BAYER_B8G8_G8R8_to_R8G8B8_MHC</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>aa9bca8336edfc30794822ee4609b4f93</anchor>
      <arglist>(int w, int h, const uint8 *in, uint8 *_out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BAYER_G8B8_R8G8_to_Quarter_R8G8B8</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ac68f95846d34c6ba2219eb298911b0dc</anchor>
      <arglist>(int inWidth, int inHeight, const uint8 *in, uint8 *out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Quarter_R8G8B8_to_BAYER_G8B8_R8G8</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a2950b7a4281dfc7e61144623609375df</anchor>
      <arglist>(int inWidth, int inHeight, const uint8 *in, uint8 *out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>makeCheckerboard</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ac7dc9b9c7ec8e3f8ea27d6389e4b69a4</anchor>
      <arglist>(GImage &amp;im, int checkerSize=1, const Color4uint8 &amp;color1=Color4uint8(255, 255, 255, 255), const Color4uint8 &amp;color2=Color4uint8(0, 0, 0, 255))</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>width</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>ad30da43d5b99a61353dca5f9f24ee1b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a3f3baaa7c0aae6be3cba56c2bc7dce4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channels</name>
      <anchorfile>classG3D_1_1GImage.html</anchorfile>
      <anchor>a906bd69a04e9cdf881358d7b8b78464c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GLCaps</name>
    <filename>classG3D_1_1GLCaps.html</filename>
    <member kind="enumvalue">
      <name>G3D_MAX_TEXTURE_UNITS</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>acf92ecae0e7954e05d2cd1fd7ee4c772af4b47eba28e0a28bee3814f01d8d6962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>G3D_MAX_TEXTURE_UNITS</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>acf92ecae0e7954e05d2cd1fd7ee4c772af4b47eba28e0a28bee3814f01d8d6962</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>ad05689921b1910e4735af31051c032ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void G3D_DEPRECATED</type>
      <name>loadExtensions</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>a69fcc0f2c9ef44b6e5cda5a78dbfdc46</anchor>
      <arglist>(class Log *debugLog=NULL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>supports</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>af5c893c4781eef65f5293e91fa6cf797</anchor>
      <arglist>(const std::string &amp;extName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>supports</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>abcf77701d41909566c7c5b04d2c5f735</anchor>
      <arglist>(const class TextureFormat *fmt)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>glVersion</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>ae952951df17b88ee41e2f0b51000dd69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>driverVersion</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>a9187b89948efbfa64e0927061baea72f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>vendor</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>ae74b7d9504fd9f814b71f7f86a9e0f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>renderer</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>a64f368057ab20a6a26de34644420fdb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>supports_two_sided_stencil</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>ac0fca31e20c7c65752d7dddc718b357f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>numTextureCoords</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>a9a21248b25cf7f55c9f9965ead14a951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>numTextures</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>a411fa3b94b5170eaca47b231345b7670</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>numTextureUnits</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>a6dabd1d00b4025850a41743a64d47231</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>supports_GL_ARB_texture_cube_map</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>af83147c808491aafa84653ee5332036d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBug_glMultiTexCoord3fvARB</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>ace96ebb8cba94ddf2d05f36e72494d08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBug_normalMapTexGen</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>aad6b4cd85fbc3d1bb27cc41c421be319</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBug_redBlueMipmapSwap</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>a1d15630c0abee804a6b17c5f27bfa26b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBug_mipmapGeneration</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>adb9758beb03cfca0443c692cae455835</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBug_slowVBO</name>
      <anchorfile>classG3D_1_1GLCaps.html</anchorfile>
      <anchor>ab6aa3b20bbc4bb8a4cf238d630e52729</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GLight</name>
    <filename>classG3D_1_1GLight.html</filename>
    <member kind="function">
      <type></type>
      <name>GLight</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>ac6f00c30471f50333522902625cfe70e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a96fb31b330532013140eb9ad581addbf</anchor>
      <arglist>(const GLight &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a79ea105abb167ff5b2d280e51bb37cfd</anchor>
      <arglist>(const GLight &amp;other) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GLight</type>
      <name>directional</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a0a254b0c6bd93a581350311fea8cd617</anchor>
      <arglist>(const Vector3 &amp;toLight, const Color3 &amp;color, bool specular=true, bool diffuse=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GLight</type>
      <name>point</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a8c1b35160455c77454c2ab1dc070e209</anchor>
      <arglist>(const Vector3 &amp;pos, const Color3 &amp;color, double constAtt=1, double linAtt=0, double quadAtt=0, bool specular=true, bool diffuse=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GLight</type>
      <name>spot</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>ae4ee31413829cc1066cd9454c4ac3706</anchor>
      <arglist>(const Vector3 &amp;pos, const Vector3 &amp;pointDirection, double cutOffAngleDegrees, const Color3 &amp;color, double constAtt=1, double linAtt=0, double quadAtt=0, bool specular=true, bool diffuse=true)</arglist>
    </member>
    <member kind="variable">
      <type>Vector4</type>
      <name>position</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a27a2e466af506dc9702b8346683198dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>spotDirection</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a594e7930fe5c4f84b5c046ef5feb8c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>spotCutoff</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a016ebb800a6a15486b4c083d84c83cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>attenuation</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a2cf3224f839f4c1de40ca932d9f7b535</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>color</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a910af137b93b20ab95231aa795c59933</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a71509b678f000c69a7dbd6714dd01ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>specular</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a14e2017abdf1031ea7552a80dfb098c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>diffuse</name>
      <anchorfile>classG3D_1_1GLight.html</anchorfile>
      <anchor>a41523a843acbbd4c515084c1288ae16c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GMaterial</name>
    <filename>classG3D_1_1GMaterial.html</filename>
    <member kind="function">
      <type></type>
      <name>GMaterial</name>
      <anchorfile>classG3D_1_1GMaterial.html</anchorfile>
      <anchor>a6b5651798f1b67c05391abb0df4f957f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classG3D_1_1GMaterial.html</anchorfile>
      <anchor>a8dc647348a70de163d2b037568260721</anchor>
      <arglist>(class RenderDevice *rd) const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>specularCoefficient</name>
      <anchorfile>classG3D_1_1GMaterial.html</anchorfile>
      <anchor>a16e93e9a6925f990aa14799f076009c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>shininess</name>
      <anchorfile>classG3D_1_1GMaterial.html</anchorfile>
      <anchor>a433664b6f760152d78a1f92aa20deb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color4</type>
      <name>color</name>
      <anchorfile>classG3D_1_1GMaterial.html</anchorfile>
      <anchor>a5d9868cbc784a1c85ed3285135b180a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; TextureRef &gt;</type>
      <name>texture</name>
      <anchorfile>classG3D_1_1GMaterial.html</anchorfile>
      <anchor>ac01c4dbfa93785edf41140dadcadf428</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GModule</name>
    <filename>classG3D_1_1GModule.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getPosedModel</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>a392c8537ec7939bda7f8d7ade154757d</anchor>
      <arglist>(Array&lt; PosedModelRef &gt; &amp;posedArray, Array&lt; PosedModel2DRef &gt; &amp;posed2DArray)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onSimulation</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>a78c9483390c6d26f72bd6912c31b2aa4</anchor>
      <arglist>(RealTime rdt, SimTime sdt, SimTime idt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>onEvent</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>ab273fc2c61d4aaf7ca9b184a5161751f</anchor>
      <arglist>(const GEvent &amp;event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onUserInput</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>af93498125b0386326be43ef287f23d7f</anchor>
      <arglist>(UserInput *ui)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onNetwork</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>a719f436a12649677eb798d1a695bece1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onLogic</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>a1b90ab386d81dd714b000cdd320b8ff7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GModuleManager</name>
    <filename>classG3D_1_1GModuleManager.html</filename>
    <base>G3D::GModule</base>
    <member kind="enumeration">
      <type></type>
      <name>EventPriority</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a8ca49f8b25a547964a6724913125318b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOW_PRIORITY</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a8ca49f8b25a547964a6724913125318ba22b9bed7eaae50bb6d8ec369d02bef9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NORMAL_PRIORITY</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a8ca49f8b25a547964a6724913125318ba2823232de5da5c1a968f6286b3a86400</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HIGH_PRIORITY</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a8ca49f8b25a547964a6724913125318ba8f56524446b1bb55658d14a906a2c07b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_PRIORITY</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a8ca49f8b25a547964a6724913125318badf22754c8890908d8922f27e20815b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOW_PRIORITY</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a8ca49f8b25a547964a6724913125318ba22b9bed7eaae50bb6d8ec369d02bef9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NORMAL_PRIORITY</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a8ca49f8b25a547964a6724913125318ba2823232de5da5c1a968f6286b3a86400</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HIGH_PRIORITY</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a8ca49f8b25a547964a6724913125318ba8f56524446b1bb55658d14a906a2c07b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_PRIORITY</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a8ca49f8b25a547964a6724913125318badf22754c8890908d8922f27e20815b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginLock</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>abdfe9c8b17043e07383ded4d0ca13a03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endLock</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a2ee210714e124cad98a78f8a2f3f0e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a326fd4cc2e2402fb4db7d475bb021ddc</anchor>
      <arglist>(const GModuleRef &amp;m, EventPriority p=NORMAL_PRIORITY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a875afe8485672c4de3dbef4eddb8e92c</anchor>
      <arglist>(const GModuleRef &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a041ac3816ada45fd3ebf1135c8d62a0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a9b77299594296f8ab1b5af8d4b8c2532</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const GModuleRef &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a736f30f1df05a4458624432850445a67</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPosedModel</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>ab267b223d8da7df02eb568b37eeb06f7</anchor>
      <arglist>(Array&lt; PosedModelRef &gt; &amp;posedArray, Array&lt; PosedModel2DRef &gt; &amp;posed2DArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onSimulation</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>ad3b6c8090cd1c2c22c7eb59189519b58</anchor>
      <arglist>(RealTime rdt, SimTime sdt, SimTime idt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>onEvent</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>afa069780b443488482e81a1852060b20</anchor>
      <arglist>(const GEvent &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onUserInput</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a66a22ccc95adc54124b439bc16e00c86</anchor>
      <arglist>(UserInput *ui)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onNetwork</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>aaa0fcef6b0fb168d37bcd35826973d1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onLogic</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a2929c4654ac104de2698a023704f2c1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GModuleManagerRef</type>
      <name>create</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>a96af87e762c197733b9a9aec257ff4b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>onEvent</name>
      <anchorfile>classG3D_1_1GModuleManager.html</anchorfile>
      <anchor>afa58bb2f0060711bd623dc1c40186c48</anchor>
      <arglist>(const GEvent &amp;event, GModuleManagerRef &amp;a, GModuleManagerRef &amp;b)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GMutex</name>
    <filename>classG3D_1_1GMutex.html</filename>
    <member kind="function">
      <type></type>
      <name>GMutex</name>
      <anchorfile>classG3D_1_1GMutex.html</anchorfile>
      <anchor>a359460e009397f2231e59a32c29c3f32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GMutex</name>
      <anchorfile>classG3D_1_1GMutex.html</anchorfile>
      <anchor>a60e5866e5002c38bbdca9a082150b6b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classG3D_1_1GMutex.html</anchorfile>
      <anchor>a1e8c37d50418feaeaf4156a80cda0abf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classG3D_1_1GMutex.html</anchorfile>
      <anchor>a3fe1a129473b931ad1f352ae7ff19d19</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GMutexLock</name>
    <filename>classG3D_1_1GMutexLock.html</filename>
    <member kind="function">
      <type></type>
      <name>GMutexLock</name>
      <anchorfile>classG3D_1_1GMutexLock.html</anchorfile>
      <anchor>a5b358f570d97e4a1c3558bd1b63c69d9</anchor>
      <arglist>(GMutex *mutex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GMutexLock</name>
      <anchorfile>classG3D_1_1GMutexLock.html</anchorfile>
      <anchor>a2673984270cfc67c5f9f0601be118f80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GPUProgram</name>
    <filename>classG3D_1_1GPUProgram.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <class kind="class">G3D::GPUProgram::ArgList</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4X4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a54ba8540760736c58ee8c1501c456e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3X3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acafbc1b22722b0523c4c6d0e000c9678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2X2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a9f2228853635c3489f8e1e531497933f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a37cc1bc86e946fd3671eee95b9de89fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a91b194f18416bc61e9a331bd7f15d0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95ab000a51b184e8abb5223f0fe6835ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT1</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a08025e2ef39627d062e326478b5ea435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER1D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acfe89cc9a3fd1450383de77ee509b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER2D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95aeb21d2b1fc83bb94d9519a376b522ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER3D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a63414caa2aaa70eaa3e508424eb0518a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERCUBE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a01093fc8efba7adf292ded5010f0316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERRECT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95af1dc2f3ee42defa67c584811972579ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Source</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3af0e5be77f3670e5d6181c7cc5188e17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONSTANT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3a4fb7b052042eebf5dd6ae6749838bb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4X4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a54ba8540760736c58ee8c1501c456e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3X3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acafbc1b22722b0523c4c6d0e000c9678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2X2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a9f2228853635c3489f8e1e531497933f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a37cc1bc86e946fd3671eee95b9de89fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a91b194f18416bc61e9a331bd7f15d0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95ab000a51b184e8abb5223f0fe6835ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT1</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a08025e2ef39627d062e326478b5ea435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER1D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acfe89cc9a3fd1450383de77ee509b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER2D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95aeb21d2b1fc83bb94d9519a376b522ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER3D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a63414caa2aaa70eaa3e508424eb0518a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERCUBE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a01093fc8efba7adf292ded5010f0316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERRECT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95af1dc2f3ee42defa67c584811972579ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3af0e5be77f3670e5d6181c7cc5188e17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONSTANT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3a4fb7b052042eebf5dd6ae6749838bb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GPUProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abee736b7f9662fd7f1c1905cb96fc240</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reload</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a79bd71f903aa0f4f225b2df08489d644</anchor>
      <arglist>(const std::string &amp;code=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>getOpenGLID</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>ab370c18c1c459e4ca90581b46ea023f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a5a77809ff2a8a865c4d71d866b02b5eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a0f1e48dedb8aafacb2317551e3ca6fc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CgType</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a8e16a9a0d33cf7ff3b7e0774e2cbcf6a</anchor>
      <arglist>(const std::string &amp;s, Type &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>aef1736a3c25d0d52a5ca9d76d0341992</anchor>
      <arglist>(const Type &amp;t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>Extension</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ARB</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ab327b3bdeb9ce53dd56cf2e968de5ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVIDIA</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ac0a362616a3e5755ee1161f6e2eb07c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ARB</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ab327b3bdeb9ce53dd56cf2e968de5ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVIDIA</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ac0a362616a3e5755ee1161f6e2eb07c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>genPrograms</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a251bb51d21edbdaf5d05f3b48be91235</anchor>
      <arglist>(int num, unsigned int *id) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a8af0876f1d6cea5db92039312609d775</anchor>
      <arglist>(int unit, unsigned int glProgram) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>ab456e6f8179e5810d3ba828a2aaf650c</anchor>
      <arglist>(const std::string &amp;code) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadConstant</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a287b6fe337e2454c39b38f8b7fa6948b</anchor>
      <arglist>(int slot, const Vector4 &amp;value) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getProgramError</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a683014afc04db90c3055192f6d278881</anchor>
      <arglist>(int &amp;pos, const unsigned char *&amp;msg) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deletePrograms</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a7c453f616eaabf60a923947bc126a97e</anchor>
      <arglist>(int num, unsigned int *id) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setArgs</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>ad1c9c6fff0952a944f30f59b5676dc14</anchor>
      <arglist>(class RenderDevice *, const ArgList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GPUProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>af839f9237b79a9b89bcb5dea8257b15c</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static GLenum</type>
      <name>getUnitFromCode</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a4723bfc4f2da1d71eb6f8e446b5351b9</anchor>
      <arglist>(const std::string &amp;code, Extension &amp;extension)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BindingTable</type>
      <name>bindingTable</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>af37f8c6771dc561fbc1c4ad8de42a9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLenum</type>
      <name>unit</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a1f99e52569c1e3257549c90102ffa8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>adc4e3a6f173428d2dc3eb0102bd55d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLuint</type>
      <name>glProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a28a25dfa0355c7408f5a238857ce1ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a36c0debde770bd2b47cd3acc179df313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum G3D::GPUProgram::Extension</type>
      <name>extension</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a38837303120944377d66eb4708bc8629</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RenderDevice</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a7532f2d0335e7fc849b32c467b27a0a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::VertexAndPixelShader::GPUShader</name>
    <filename>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</filename>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>a42e564953a54a9bc9451fa72a737d0ac</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;code, bool fromFile, bool debug, GLenum glType, const std::string &amp;type, UseG3DUniforms u)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GPUShader</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>afb0fe42c96b9511f436f6a5691045503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GLenum</type>
      <name>glShaderType</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>aa11fdc5909a679b400bfbf0043579b76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>shaderType</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>ac52a644cb7bc6ec8ba10e13f849554d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>messages</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>a59e80193afa05684c7c17b11406d00e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>a7fa272c6cbd28dbe34c94dd6793a9251</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLhandleARB</type>
      <name>glShaderObject</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>ab659259f9a0fd7b8c5bf8f8ee2a6bfc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fixedFunction</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>af0dc1e4ef6135598a5a865b8e7bde501</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>compile</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>a897bd2fa5ab7cc8f135c8439c6830a0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>replaceG3DSize</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>abf613a0725d22112ee0c16f12367b849</anchor>
      <arglist>(std::string &amp;code, std::string &amp;uniformString)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static GPUShader *</type>
      <name>init</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>af791f1fc20f4e96f847ed5297f5b04f3</anchor>
      <arglist>(GPUShader *shader, bool debug)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_name</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>a4fcfe173da76384a83369a7b864fc6c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_code</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>aadb3c616d2ebca5d1d01b4ac6a6ecc49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>a62980e97c8f205dd796ad0bb8bc6fadf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLhandleARB</type>
      <name>_glShaderObject</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>ab4d67bf4d39b3a322fb4950d2d0df099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_ok</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>a40cdae9aa1ba6c664ab265a0a9ed7d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_messages</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>af7fb2a6d483376689ccba6b002edc030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_fixedFunction</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>aa409a50b05d26073d817ab3e7f0307c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLenum</type>
      <name>_glShaderType</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>a2f0ffd5510fc72aeef5093c66b6cf4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_shaderType</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>a1f78f37c3fbfb2eda2197aa22512a1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::string</type>
      <name>ignore</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1GPUShader.html</anchorfile>
      <anchor>aba458f85d6f599b3e9f391d970202879</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GThread</name>
    <filename>classG3D_1_1GThread.html</filename>
    <member kind="function">
      <type></type>
      <name>GThread</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>aff22e80351b5e3fd86bea9f98d68ecc2</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GThread</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>a38fa0c678ada365fab9f7c04f97c4a0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>a3721af7a1af8cda0c4ba3a0bb8f7577b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>terminate</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>a82839fa6ca377e233c7a27516775f9bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>running</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>a1b1cc5aa02f87f725bc66cc78e94308f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>completed</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>aed0ed7c3d2c8a3bd1afcb9a00dd33979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitForCompletion</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>a3c15573322f3230027c89fdf4a01f0f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>a0a87c7f7c627bdebd037d004fb858ac3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GThread *</type>
      <name>create</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>acc44f99822a0dd8359b1e77532d09b7b</anchor>
      <arglist>(const std::string &amp;name, void(*proc)())</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>threadMain</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>a939ef556e12eeed55e5f1d59218261db</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>_internal::GThreadPrivate</name>
      <anchorfile>classG3D_1_1GThread.html</anchorfile>
      <anchor>a00aeb2cde0631ae5ac2e1137522aee18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GWindow</name>
    <filename>classG3D_1_1GWindow.html</filename>
    <class kind="class">G3D::GWindow::Settings</class>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getSettings</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a83b05e265b576178498c9c4fe3da77de</anchor>
      <arglist>(GWindow::Settings &amp;settings) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>width</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a9e6e5ebb466bd0f0275c2c30270f59b6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>height</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a5471feb7773155ff738f93bcba0f1854</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Rect2D</type>
      <name>dimensions</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aa466468acac51a83c136f253b9fcc012</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDimensions</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a52124f14a8fdb939224cab7d4e74e75d</anchor>
      <arglist>(const Rect2D &amp;dims)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPosition</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aabba74a7dc31aea5a73c5cc0be652c04</anchor>
      <arglist>(int x, int y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasFocus</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>af3aa45ba3b462a1e576a63c869aacad9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getAPIVersion</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a32c9fe8ea4d30685b41783cf561f58fb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getAPIName</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a329028f639aa73269b319af420b95121</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setGammaRamp</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a516830627c8b4ddfc7a5118a46bbd7a5</anchor>
      <arglist>(const Array&lt; uint16 &gt; &amp;gammaRamp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCaption</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a32f7c79ad6fd1aef348fde6e1ac713b5</anchor>
      <arglist>(const std::string &amp;caption)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numJoysticks</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aa247843da65f11bd77cad762a91da2d5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGameControllerConnected</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ac410202a57bd72cb029a0a2f4ea5a5e1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>joystickName</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a0c7bd40ea52a072c9a1c0743d7caef3f</anchor>
      <arglist>(unsigned int sticknum)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>caption</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>acebcfe756dc42a6ac12a9ed1924a5234</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIcon</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a2e576af7309094f8db4b9c42341c740a</anchor>
      <arglist>(const GImage &amp;image)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIcon</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a3acca1ae4a2229598acf9e487564fc76</anchor>
      <arglist>(const std::string &amp;imageFilename)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>swapGLBuffers</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aa06bd85613d29ea229477facb6f0f192</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notifyResize</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a84d7e35d49b586164784504f1d3e0390</anchor>
      <arglist>(int w, int h)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRelativeMousePosition</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a97d14629aec3ecdb4ac528b9ba43d5c3</anchor>
      <arglist>(double x, double y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRelativeMousePosition</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a937b0a3577ea560d6d406ec3d0262979</anchor>
      <arglist>(const Vector2 &amp;p)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pollEvent</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ab2f8d15e2a2e5984a944df7f0609ef76</anchor>
      <arglist>(GEvent &amp;e)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getRelativeMouseState</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ac912a99faaf117c1245da03f0812afa7</anchor>
      <arglist>(Vector2 &amp;position, uint8 &amp;mouseButtons) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getRelativeMouseState</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ad213991800b8c60194336d42bb8468bd</anchor>
      <arglist>(int &amp;x, int &amp;y, uint8 &amp;mouseButtons) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getRelativeMouseState</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a9add3225299066bffaaf899a3dd18f57</anchor>
      <arglist>(double &amp;x, double &amp;y, uint8 &amp;mouseButtons) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getJoystickState</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a96dcb34e4b6b1b7ffb270e2d72ecbd4a</anchor>
      <arglist>(unsigned int stickNum, Array&lt; float &gt; &amp;axis, Array&lt; bool &gt; &amp;button)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void G3D_DEPRECATED</type>
      <name>setInputCapture</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a7f3f9f94b6e1064d3f893749db1cad18</anchor>
      <arglist>(bool c)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a461fa558ddd4856222eef0b2e6dca9ad</anchor>
      <arglist>(int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>inputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aec1ed6e975a7a66ee45c35d03cea64ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incInputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a44113d8eae80225a33426b6a038dfe7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>decInputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ad72281f9b81788defd9665b98869abb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool G3D_DEPRECATED</type>
      <name>inputCapture</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a9cfac660f6c9e05fa8ffe952742e028c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void G3D_DEPRECATED</type>
      <name>setMouseVisible</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a9b1726493a5fb7ce6d61d04f76025a8b</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool G3D_DEPRECATED</type>
      <name>mouseVisible</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aa7c6138e4b703b57e8dc2d76be956ae4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aafb69879429e9a253cb36faf86f17894</anchor>
      <arglist>(int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ab5072008a18e3c6c288051673d4b82b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incMouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ae9747c54476ae68ebadb694057a7c53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>decMouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a75e7c0283047b7ebf9914ae5aafd086e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requiresMainLoop</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a263694c59a956fae648201e32cc96a4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushLoopBody</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a318b21aaea7414afab5535e8177399e1</anchor>
      <arglist>(void(*body)(void *), void *arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushLoopBody</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ab47b512193c9bfb0f05a2e3b190c05a7</anchor>
      <arglist>(GApplet *applet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>popLoopBody</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a455a55a3408475f7030f15f62fe4fa87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runMainLoop</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a49d3799f95230f3c410afb26f2b182d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GWindow</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a4b90cb57a52ea2604829bce8fe185232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RenderDevice *</type>
      <name>renderDevice</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a346c291152ce92d966134f113680238b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeCurrent</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a9368ee3b4d32100d9159b901c9157760</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const GWindow *</type>
      <name>current</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a9d90890f8cdd458354c2129b672fe399</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>notDone</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a713a7a98ded4f43499ee45e1361c0863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>executeLoopBody</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a4e6f4f05277907be7d579e0fa1339699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void G3D_DEPRECATED</type>
      <name>loadExtensions</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a225a99702e992e0924e2655e5d02bd60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GWindow</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aaa62a0492e1100ac4ec5d18321406a0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>reallyMakeCurrent</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a63060048dc322c4ffbcb339ec5879314</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_inputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a6dcaebc805b0dad018c0b9f1855c9ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_mouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a8d571497041c0be6902e5b8814907f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RenderDevice</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a7532f2d0335e7fc849b32c467b27a0a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Hashable</name>
    <filename>classG3D_1_1Hashable.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>hashCode</name>
      <anchorfile>classG3D_1_1Hashable.html</anchorfile>
      <anchor>a3d96486bccffc125feff5e7d22c4b44a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Hashable</name>
      <anchorfile>classG3D_1_1Hashable.html</anchorfile>
      <anchor>a0329c611bdda735a35bf1576c2305c8f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::IFSModel</name>
    <filename>classG3D_1_1IFSModel.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IFSModel</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>aaa35e33ab33eabca66a44603ba278e78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PosedModelRef</type>
      <name>pose</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>ac3010816f18a2656cab8b5f06dbef7eb</anchor>
      <arglist>(const CoordinateFrame &amp;cframe=CoordinateFrame(), bool perVertexNormals=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PosedModelRef</type>
      <name>pose</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>a3edd410f5eefbe82b2a203b197e9eece</anchor>
      <arglist>(const CoordinateFrame &amp;cframe, const GMaterial &amp;material, bool perVertexNormals=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>mainMemorySize</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>a0a7e5206ecbfbebc53903d96acb904f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>operator new</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>ae00a4d33c99d31dc26cf77a8b58861fb</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>operator delete</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>ac05377df51de0f6ac2aa37b15c46dd19</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IFSModelRef</type>
      <name>create</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>ab94a89534ad1943d6be3501878dbd0e4</anchor>
      <arglist>(const std::string &amp;filename, const Vector3 &amp;scale=Vector3(1, 1, 1), const CoordinateFrame &amp;cframe=CoordinateFrame(), const bool weld=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IFSModelRef</type>
      <name>create</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>a63b0b329a2918f00324c6e49091db56d</anchor>
      <arglist>(const std::string &amp;filename, const double scale, const CoordinateFrame &amp;cframe=CoordinateFrame(), const bool weld=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>save</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>a035d6cb6b31986868ec6584232acec0b</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;name, const Array&lt; int &gt; &amp;index, const Array&lt; Vector3 &gt; &amp;vertex, const Array&lt; Vector2 &gt; &amp;texCoord)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>load</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>aa6f3152d915bc2e824fd76a30c453eec</anchor>
      <arglist>(const std::string &amp;filename, std::string &amp;name, Array&lt; int &gt; &amp;index, Array&lt; Vector3 &gt; &amp;vertex, Array&lt; Vector2 &gt; &amp;texCoord)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>PosedIFSModel</name>
      <anchorfile>classG3D_1_1IFSModel.html</anchorfile>
      <anchor>aa0ad8ae6047a37a149ff28417acb5702</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::IncompatibleServerDescription</name>
    <filename>classG3D_1_1IncompatibleServerDescription.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1IncompatibleServerDescription.html</anchorfile>
      <anchor>a87fd4c882b0f662ff1242092f6b573c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>NetAddress</type>
      <name>address</name>
      <anchorfile>classG3D_1_1IncompatibleServerDescription.html</anchorfile>
      <anchor>afe72f977b9a90fbb1cd671664779c1bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>protocolVersion</name>
      <anchorfile>classG3D_1_1IncompatibleServerDescription.html</anchorfile>
      <anchor>aeaba2c5fe559d96b31b479b8b39d32fc</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>RealTime</type>
      <name>lastUpdateTime</name>
      <anchorfile>classG3D_1_1IncompatibleServerDescription.html</anchorfile>
      <anchor>ac5bf188baa4c9b2042cfb9ec4476129a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AnyVal::IndexOutOfBounds</name>
    <filename>classG3D_1_1AnyVal_1_1IndexOutOfBounds.html</filename>
    <base>G3D::AnyVal::Exception</base>
    <member kind="function">
      <type></type>
      <name>IndexOutOfBounds</name>
      <anchorfile>classG3D_1_1AnyVal_1_1IndexOutOfBounds.html</anchorfile>
      <anchor>a3effa98d661140af39a31ef2bb07e270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexOutOfBounds</name>
      <anchorfile>classG3D_1_1AnyVal_1_1IndexOutOfBounds.html</anchorfile>
      <anchor>aa5d80294b686edfce70f317574b1ada2</anchor>
      <arglist>(int i, int s)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>classG3D_1_1AnyVal_1_1IndexOutOfBounds.html</anchorfile>
      <anchor>a6738d937e116c496355300346045e7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1AnyVal_1_1IndexOutOfBounds.html</anchorfile>
      <anchor>a089063fc107776acaa4e900fdfd865d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AABSPTree::Iterator</name>
    <filename>classG3D_1_1AABSPTree_1_1Iterator.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1Iterator.html</anchorfile>
      <anchor>ae73a22a687dd0446e2932f1c5a42f37d</anchor>
      <arglist>(const Iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1Iterator.html</anchorfile>
      <anchor>a55a409a0e2c38f304f8c40dea800a6dd</anchor>
      <arglist>(const Iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1Iterator.html</anchorfile>
      <anchor>a20fce6073d488765e09126646884a619</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>operator++</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1Iterator.html</anchorfile>
      <anchor>a5e154f95412ed21fb1599f0369fb6661</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1Iterator.html</anchorfile>
      <anchor>a7c6df4b813d3391f6b342b6669500d99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1Iterator.html</anchorfile>
      <anchor>ad4c405bc35cbb21489b06cb00704e9b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T*</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1Iterator.html</anchorfile>
      <anchor>a7fb31f8a568baece22330fde4e6b9ee7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AABSPTree&lt; T &gt;</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1Iterator.html</anchorfile>
      <anchor>a3c07e9d3aa234b6a7a7ced34ae1dcfb3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Set::Iterator</name>
    <filename>classG3D_1_1Set_1_1Iterator.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Set_1_1Iterator.html</anchorfile>
      <anchor>aabff29b1b9f24f57b1b6dd75da6fc3b7</anchor>
      <arglist>(const Iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Set_1_1Iterator.html</anchorfile>
      <anchor>a4a6e3d123939fedee3bffb547d3aeb3b</anchor>
      <arglist>(const Iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classG3D_1_1Set_1_1Iterator.html</anchorfile>
      <anchor>a78988ed852a8f3be4a4fed859758805c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>operator++</name>
      <anchorfile>classG3D_1_1Set_1_1Iterator.html</anchorfile>
      <anchor>a32c43156f5b6274fa5e5279df49d68c4</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Set_1_1Iterator.html</anchorfile>
      <anchor>ab76153a8f138d94997308c61d1b7ad06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classG3D_1_1Set_1_1Iterator.html</anchorfile>
      <anchor>af27c4e5a5f5b9bb93cf15b2c017996e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T*</name>
      <anchorfile>classG3D_1_1Set_1_1Iterator.html</anchorfile>
      <anchor>a6fe8145596511a78b960b6cab8dee09f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Set&lt; T &gt;</name>
      <anchorfile>classG3D_1_1Set_1_1Iterator.html</anchorfile>
      <anchor>a974ee694992fa25b95249498627f8703</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Table::Iterator</name>
    <filename>classG3D_1_1Table_1_1Iterator.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Table_1_1Iterator.html</anchorfile>
      <anchor>a568470e4de021c30fba2417d5fb6f761</anchor>
      <arglist>(const Iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Table_1_1Iterator.html</anchorfile>
      <anchor>a342746f139eeefdee25e3ef4d1f5f9ca</anchor>
      <arglist>(const Iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classG3D_1_1Table_1_1Iterator.html</anchorfile>
      <anchor>aa394b03044e5d37fbf5b676bef654ecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>operator++</name>
      <anchorfile>classG3D_1_1Table_1_1Iterator.html</anchorfile>
      <anchor>a3d7ecdbf6c924c95a316a1347acebe5e</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const Entry &amp;</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Table_1_1Iterator.html</anchorfile>
      <anchor>ae8b721f0b37c133c5c4cd6851387fa4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>operator-&gt;</name>
      <anchorfile>classG3D_1_1Table_1_1Iterator.html</anchorfile>
      <anchor>a055ba5a4d3eb496ab08967c2a15c66a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Entry *</name>
      <anchorfile>classG3D_1_1Table_1_1Iterator.html</anchorfile>
      <anchor>a99e0b9958aaab3032c321dccdfb3eae0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Table&lt; Key, Value &gt;</name>
      <anchorfile>classG3D_1_1Table_1_1Iterator.html</anchorfile>
      <anchor>ad8edd87b3e27cbc08a9d5a8d02510469</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AnyVal::KeyNotFound</name>
    <filename>classG3D_1_1AnyVal_1_1KeyNotFound.html</filename>
    <base>G3D::AnyVal::Exception</base>
    <member kind="function">
      <type></type>
      <name>KeyNotFound</name>
      <anchorfile>classG3D_1_1AnyVal_1_1KeyNotFound.html</anchorfile>
      <anchor>a99b3dadac416d04028863ecfcc962051</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyNotFound</name>
      <anchorfile>classG3D_1_1AnyVal_1_1KeyNotFound.html</anchorfile>
      <anchor>a55437c8fa73ff424ee54c68e6a6e8407</anchor>
      <arglist>(const std::string &amp;k)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>key</name>
      <anchorfile>classG3D_1_1AnyVal_1_1KeyNotFound.html</anchorfile>
      <anchor>a2991ae0c07b1a0389e6172d0291b84ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Lighting</name>
    <filename>classG3D_1_1Lighting.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ReferenceCountedPointer&lt; Lighting &gt;</type>
      <name>create</name>
      <anchorfile>classG3D_1_1Lighting.html</anchorfile>
      <anchor>aa4996bac3048f005b0c163bfe53cf689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>emissiveScale</name>
      <anchorfile>classG3D_1_1Lighting.html</anchorfile>
      <anchor>ae0d1b685e329e810decf7a8f1e215c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>ambientTop</name>
      <anchorfile>classG3D_1_1Lighting.html</anchorfile>
      <anchor>afdc34b767adc6b54b284510e5af4a9c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>ambientBottom</name>
      <anchorfile>classG3D_1_1Lighting.html</anchorfile>
      <anchor>ac3674c9fc502e873283595c43d54bd80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TextureRef</type>
      <name>environmentMap</name>
      <anchorfile>classG3D_1_1Lighting.html</anchorfile>
      <anchor>ad3f6fcd420064b72cc4ef4f9b6c12c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>environmentMapColor</name>
      <anchorfile>classG3D_1_1Lighting.html</anchorfile>
      <anchor>a8c48d9ea4c08a6478b0804cab07599eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; GLight &gt;</type>
      <name>lightArray</name>
      <anchorfile>classG3D_1_1Lighting.html</anchorfile>
      <anchor>aae68ee7afdc58ab186d13cc55e3504e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; GLight &gt;</type>
      <name>shadowedLightArray</name>
      <anchorfile>classG3D_1_1Lighting.html</anchorfile>
      <anchor>a41613acba8ec433cc6b1918d5de687e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::LightingParameters</name>
    <filename>classG3D_1_1LightingParameters.html</filename>
    <member kind="enumvalue">
      <name>SUN</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a4b67946c427ea666a64770b1344bdad4a6dc2953b78a58531d32cde73da59c461</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOON</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a4b67946c427ea666a64770b1344bdad4a9f160b0760e65080fe404d17384a61a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUN</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a4b67946c427ea666a64770b1344bdad4a6dc2953b78a58531d32cde73da59c461</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOON</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a4b67946c427ea666a64770b1344bdad4a9f160b0760e65080fe404d17384a61a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LightingParameters</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a3cfe990abaf51c4a3c5eca0a3b05a23c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LightingParameters</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a166324442f20c484bf8e5ea1aeb16bf1</anchor>
      <arglist>(const GameTime _time, bool _physicallyCorrect=true, float _latitude=BROWN_UNIVERSITY_LATITUDE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a8fdb9b1c8600928d936c883f36abc466</anchor>
      <arglist>(const GameTime _time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatitude</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a0157a9b7d918bf4df1abba3bf42858ce</anchor>
      <arglist>(float _latitude)</arglist>
    </member>
    <member kind="function">
      <type>GLight</type>
      <name>directionalLight</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a0d6c2d014bd40a1c75eb2d2c69cf855b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>emissiveScale</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a8989404be897c9137ce9d0961571c3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>skyAmbient</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a2d33303bb306c23ab86feda596b8d50a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>diffuseAmbient</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a17045c3e5ca956abd076f98979ce1141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>lightColor</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>ae8ce081016dd19d347a77e0993949f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color3</type>
      <name>ambient</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a89fe1e384ccadeed3db671fa3f79111b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>lightDirection</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>af7c4df6080a96be042e62ae04f3b6d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum G3D::LightingParameters::@8</type>
      <name>source</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a8899f50b5357b3f2064cd7bc7318ccec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>physicallyCorrect</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>afebbff11b88329c6e1f104a2bde3c482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>trueSunPosition</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a4f9b8b123cfce4385c39023ff1a21915</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>sunPosition</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a18d84b59851f8ed408fa3eb2446ebc28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>trueMoonPosition</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a7623494cd164d3ff2026800706a90275</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>moonPosition</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a03fe60e72227a8ea9e7103448b449172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>moonPhase</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a2d670b96caf7db7bfff7f72cf26da8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CoordinateFrame</type>
      <name>starFrame</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a082e057e7eed54d8bc4bcfd87907afb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CoordinateFrame</type>
      <name>trueStarFrame</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a9454f688cec81e82774d680368da0e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>starVec</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a799b58ff2ef59c00e0e732caa0dfc3d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>geoLatitude</name>
      <anchorfile>classG3D_1_1LightingParameters.html</anchorfile>
      <anchor>a211fdb17ae98988ed518ffd6c0f40fc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::RenderDevice::RenderState::Lights</name>
    <filename>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</filename>
    <member kind="function">
      <type></type>
      <name>Lights</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</anchorfile>
      <anchor>a80819130c6f2f117e93db06849c2f731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</anchorfile>
      <anchor>a58635d9baf7c6a43ba2dbcc86a381213</anchor>
      <arglist>(const Lights &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</anchorfile>
      <anchor>a4aed16864fbbc332de4f8d4bf6d34350</anchor>
      <arglist>(const Lights &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>GLight</type>
      <name>light</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</anchorfile>
      <anchor>a751d43c29358b6e69ffc69418e328a63</anchor>
      <arglist>[MAX_LIGHTS]</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>lightEnabled</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</anchorfile>
      <anchor>a346b274f2114251e2b1ee41a0efd4116</anchor>
      <arglist>[MAX_LIGHTS]</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>twoSidedLighting</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</anchorfile>
      <anchor>a48503b49a03ababb5688ad03a7742527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color4</type>
      <name>ambient</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</anchorfile>
      <anchor>a5fdf72abac8c0b54640a286e9999041e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>lighting</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</anchorfile>
      <anchor>aa1fc6fdef6ecf87791cf8f4893c1d35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>changed</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Lights.html</anchorfile>
      <anchor>a910bd6a07882a2dac84fa9abd6abdf36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::LightweightConduit</name>
    <filename>classG3D_1_1LightweightConduit.html</filename>
    <base>G3D::Conduit</base>
    <class kind="class">G3D::LightweightConduit::PacketSizeException</class>
    <member kind="function">
      <type></type>
      <name>~LightweightConduit</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a1e71f945a603e37b83361d04db273ed6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxMessageSize</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a00614bf8b8f0af3a3ae4762493e2ad7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a18fc0e8ce3ad4a6c6058fbf5403b8f1e</anchor>
      <arglist>(const NetAddress &amp;a, const NetMessage *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a42ae2ca6bde3a5c311c9b812bda68166</anchor>
      <arglist>(const NetAddress &amp;a, uint32 type, const T &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a86e8a92061cbf984d62aa468b0f357c5</anchor>
      <arglist>(const Array&lt; NetAddress &gt; &amp;a, const NetMessage *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>af439ab263aeceae396880c8d20665b40</anchor>
      <arglist>(const Array&lt; NetAddress &gt; &amp;a, uint32 type, const T &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>acc9a0d7c45b8343e92ed91c559bdbd57</anchor>
      <arglist>(const Array&lt; NetAddress &gt; &amp;a, const NetMessage &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a62b0401ae23dd75c3ead52c9f47e8f06</anchor>
      <arglist>(const Array&lt; NetAddress &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>aa1ab6126ca661463ab51b330091e4ed3</anchor>
      <arglist>(const NetAddress &amp;a, const NetMessage &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a0650c2a7c8d865d5d9fc7f2c403e6072</anchor>
      <arglist>(const NetAddress &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a33ea992034e56ff60e62ddf6a8762ecb</anchor>
      <arglist>(NetAddress &amp;sender, NetMessage *m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a5d4e5f6cc23d4b5f36ce5084bca9ee18</anchor>
      <arglist>(NetAddress &amp;sender, T &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>ab071462947f36808ff2ee78ec111005f</anchor>
      <arglist>(NetAddress &amp;sender, NetMessage &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a653d4b3b0b7040021f68b0fd268195e5</anchor>
      <arglist>(NetAddress &amp;sender)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a2a66ac93b6c700445aa88ca63e1463f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32</type>
      <name>waitingMessageType</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a63bb78549d16e45f8ea6a41c4aded713</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>messageWaiting</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>a7e9e89dbc082703b77069edfc257f4ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>bytesSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a328316292e1dbd421e3e657d2545b805</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>messagesSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a96e32f7d7fec28d51e7d9f9994a2dc8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>bytesReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>aef5491086698c4bf2d04282da1da6049</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>messagesReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a4a09a791f121f76c7a24602960228732</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a1c08f10278eef82f96e4eb6357bb9cff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>mSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a9f096e72804ae607f5a0dcdc6644569b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>mReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a2b8002b8175f5c95a346508faf8a6062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>bSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a0dd3e8c6d2514f002553c02425723713</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>bReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a15f17e452df4fc74958fb0b341c77e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>class NetworkDevice *</type>
      <name>nd</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>ae065b5dea5f3d3873667d3e4e72a491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SOCKET</type>
      <name>sock</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a9baa87aeb3777a03b8c1c8ae21f9b945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BinaryOutput</type>
      <name>binaryOutput</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>af4557f45feff508904ae1b55f76a0248</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NetworkDevice</name>
      <anchorfile>classG3D_1_1LightweightConduit.html</anchorfile>
      <anchor>aeecf97b085c6118a394e2b64b7367027</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Line</name>
    <filename>classG3D_1_1Line.html</filename>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a8bee829a254fedf0b998de40af225240</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a1ccfa930bcac23436fd100133308b4e3</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>aaa0d0cfeb1694a93e7a39d5e3701d9b7</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>ad2f48bc0e89d4853bd56dba5bfc9532d</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Line</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a0c08e6074e25b4bb612dac73ba48bdc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>closestPoint</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a5e8f3409145ec0f14fa6d98d26894395</anchor>
      <arglist>(const Vector3 &amp;pt) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a4fb9b523a47e8ecb5861b4ade961f996</anchor>
      <arglist>(const Vector3 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>point</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>ac84bdf5ea8e6e75618f81d2343a09381</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>direction</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a754875435b6cd210e1de694ed86561f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>intersection</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>aeec04e571e29b20093e332b7ccd20fab</anchor>
      <arglist>(const Plane &amp;plane) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Line</type>
      <name>fromTwoPoints</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a2a978701597e4139c838981c42859c6f</anchor>
      <arglist>(const Vector3 &amp;point1, const Vector3 &amp;point2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Line</type>
      <name>fromPointAndDirection</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a9bbe73dbed97bd38c2570a2a0f376975</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;direction)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Line</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a12934d9c9e250b715709420ed63336d9</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;direction)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector3</type>
      <name>_point</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>a682865bff7dda05fdd41136f792da302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector3</type>
      <name>_direction</name>
      <anchorfile>classG3D_1_1Line.html</anchorfile>
      <anchor>aeed82542e536645346b6c76a54c092e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::LineSegment</name>
    <filename>classG3D_1_1LineSegment.html</filename>
    <member kind="function">
      <type></type>
      <name>LineSegment</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a9ee56a46e15694a823b6fa36a53e5869</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineSegment</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a8ebd02bfd989dc3b0e6f7503cb8afa45</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a21597841dba39f72cb4a05bbc6b0b474</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a26e26ade538e064db736b9d3201c5870</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LineSegment</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a03a2a95649417763c05881b90d180477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector3 G3D_DEPRECATED</type>
      <name>endPoint</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a71f7dd6732d676284e24cc7ec864fd8b</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>point</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>ad526fcc2f2f694817afa4cb57f4fe469</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>length</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a20884a835ec632c134d5a4ad724ffc88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>closestPoint</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>ab4fe3a39c672a063e1caa36180fe2535</anchor>
      <arglist>(const Vector3 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>ac99a6db00180fa9abd3f60798d0b1586</anchor>
      <arglist>(const Vector3 &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distanceSquared</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a531ddadfb21cd94122a515a242abfa85</anchor>
      <arglist>(const Vector3 &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersectsSolidSphere</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a438f13d5917e408ded2d9a7d1be10f83</anchor>
      <arglist>(const class Sphere &amp;s) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomPoint</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>aedb6ffb29abcf59880c66a2fb34153e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LineSegment</type>
      <name>fromTwoPoints</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>ab112113076dea1e72e0fe7a6e8f7f978</anchor>
      <arglist>(const Vector3 &amp;point1, const Vector3 &amp;point2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LineSegment</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a302f7156bdde51d9e663e4c3629135c5</anchor>
      <arglist>(const Vector3 &amp;__point, const Vector3 &amp;_direction)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector3</type>
      <name>_point</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a16834d155cc33f7ff2a0118a79b88f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector3</type>
      <name>direction</name>
      <anchorfile>classG3D_1_1LineSegment.html</anchorfile>
      <anchor>a60bd66314d3a5911e5e50b3b24260ef6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::LineSegment2D</name>
    <filename>classG3D_1_1LineSegment2D.html</filename>
    <member kind="function">
      <type></type>
      <name>LineSegment2D</name>
      <anchorfile>classG3D_1_1LineSegment2D.html</anchorfile>
      <anchor>a44acefd7be626683778f75f0bbf4c365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>point</name>
      <anchorfile>classG3D_1_1LineSegment2D.html</anchorfile>
      <anchor>ad26a0f5a64ec16ccf79c80de8407adcf</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>closestPoint</name>
      <anchorfile>classG3D_1_1LineSegment2D.html</anchorfile>
      <anchor>afa281aaa2576f4b1bbd7d3c038c7895b</anchor>
      <arglist>(const Vector2 &amp;Q) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>distance</name>
      <anchorfile>classG3D_1_1LineSegment2D.html</anchorfile>
      <anchor>a365e11a39a3fdbc687343cd715c531e2</anchor>
      <arglist>(const Vector2 &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>length</name>
      <anchorfile>classG3D_1_1LineSegment2D.html</anchorfile>
      <anchor>a8c473604d0d7ee6dc9896ccbbf1a08b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LineSegment2D</type>
      <name>fromTwoPoints</name>
      <anchorfile>classG3D_1_1LineSegment2D.html</anchorfile>
      <anchor>ab230fb142f460b9a74594f5b7a6e4a04</anchor>
      <arglist>(const Vector2 &amp;p0, const Vector2 &amp;p1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Log</name>
    <filename>classG3D_1_1Log.html</filename>
    <member kind="function">
      <type></type>
      <name>Log</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>adb368b650d84db206092950f4e371622</anchor>
      <arglist>(const std::string &amp;filename=&quot;log.txt&quot;, int stripFromStackBottom=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Log</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>a6d00080706edad176499959345eedb78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>getFile</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>a936a635ea85d9a400b7943ac2154f4f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>section</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>a27ec4ee209dd146897134f75af0bd87a</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void __cdecl</type>
      <name>printf</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>a296bb0cd133338ec10442ddab429f0cb</anchor>
      <arglist>(const char *fmt,...) G3D_CHECK_PRINTF_METHOD_ARGS</arglist>
    </member>
    <member kind="function">
      <type>void __cdecl</type>
      <name>vprintf</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>a0f39209ee1deef7fdb6473e9f55c7533</anchor>
      <arglist>(const char *, va_list argPtr) G3D_CHECK_VPRINTF_METHOD_ARGS</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>aa831eace68a0840ef466a4d8bd78d22c</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>println</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>aba38390e7bc9716056e29a1f76f8ca6a</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Log *</type>
      <name>common</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>a0d4da4a2811b4305496c5289099dc511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getCommonLogFilename</name>
      <anchorfile>classG3D_1_1Log.html</anchorfile>
      <anchor>a71bf85d8bbb89422b2bcd5c03b3d96d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Manipulator</name>
    <filename>classG3D_1_1Manipulator.html</filename>
    <base>G3D::GModule</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getFrame</name>
      <anchorfile>classG3D_1_1Manipulator.html</anchorfile>
      <anchor>a0d3e94cb03ebe749ce6bfcbf00e949b2</anchor>
      <arglist>(CoordinateFrame &amp;c) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CoordinateFrame</type>
      <name>frame</name>
      <anchorfile>classG3D_1_1Manipulator.html</anchorfile>
      <anchor>a4b92f784355376509e35ceaa187b32ef</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getPosedModel</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>a392c8537ec7939bda7f8d7ade154757d</anchor>
      <arglist>(Array&lt; PosedModelRef &gt; &amp;posedArray, Array&lt; PosedModel2DRef &gt; &amp;posed2DArray)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onSimulation</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>a78c9483390c6d26f72bd6912c31b2aa4</anchor>
      <arglist>(RealTime rdt, SimTime sdt, SimTime idt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>onEvent</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>ab273fc2c61d4aaf7ca9b184a5161751f</anchor>
      <arglist>(const GEvent &amp;event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onUserInput</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>af93498125b0386326be43ef287f23d7f</anchor>
      <arglist>(UserInput *ui)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onNetwork</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>a719f436a12649677eb798d1a695bece1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onLogic</name>
      <anchorfile>classG3D_1_1GModule.html</anchorfile>
      <anchor>a1b90ab386d81dd714b000cdd320b8ff7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::RenderDevice::RenderState::Matrices</name>
    <filename>classG3D_1_1RenderDevice_1_1RenderState_1_1Matrices.html</filename>
    <member kind="function">
      <type></type>
      <name>Matrices</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Matrices.html</anchorfile>
      <anchor>a382d21ab07766b831a3d11cc79ce4f32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Matrices.html</anchorfile>
      <anchor>a1285781331fbdbe6a570184abbca0e4d</anchor>
      <arglist>(const Matrices &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Matrices.html</anchorfile>
      <anchor>a18364b6543bcdbb1be660ddf2da3f10b</anchor>
      <arglist>(const Matrices &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>CoordinateFrame</type>
      <name>objectToWorldMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Matrices.html</anchorfile>
      <anchor>aaf15ae45540b81b76c0cd233d57b7990</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CoordinateFrame</type>
      <name>cameraToWorldMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Matrices.html</anchorfile>
      <anchor>a14a98fb964fb23fd943bf85221f7827b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CoordinateFrame</type>
      <name>cameraToWorldMatrixInverse</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Matrices.html</anchorfile>
      <anchor>a3abc8fc72c0040e615e3eb1673b4d0d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix4</type>
      <name>projectionMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Matrices.html</anchorfile>
      <anchor>a4e11ce54318723ba79db3a6e39233216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>changed</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Matrices.html</anchorfile>
      <anchor>a48a5363804c9a27576742940770e8274</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Matrix3</name>
    <filename>classG3D_1_1Matrix3.html</filename>
    <member kind="function">
      <type></type>
      <name>Matrix3</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a4c9b76c2559ebff676a7da460ffb7611</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix3</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ae4e0917d8fa4991c4bf6e72d7298f58b</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix3</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a3cfa887fbbf8789fcaf21f79a11faca6</anchor>
      <arglist>(const float aafEntry[3][3])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix3</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a37bb3db86c68cb000c764a81f8be64cd</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix3</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a353014b88fd34d6e1465712c0df648ff</anchor>
      <arglist>(float fEntry00, float fEntry01, float fEntry02, float fEntry10, float fEntry11, float fEntry12, float fEntry20, float fEntry21, float fEntry22)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyEq</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a60b198e59499c201d971d3e31f787956</anchor>
      <arglist>(const Matrix3 &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix3</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ad8f04c21097a317581f632631cbdcb7c</anchor>
      <arglist>(const class Quat &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a1d3842be4584ed07ac829e9f1524bc32</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>acf4fff98ac0f3f62f63e82ae90443da0</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>aa24d6fe91ac4fe5b3f6e81c2f9833adb</anchor>
      <arglist>(float fEntry00, float fEntry01, float fEntry02, float fEntry10, float fEntry11, float fEntry12, float fEntry20, float fEntry21, float fEntry22)</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ac9ce737dc9f74cf6eb22173f3b4a6285</anchor>
      <arglist>(int iRow)</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ad20dbc8ac72fce64cff656a8d4e6132e</anchor>
      <arglist>(int iRow) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float *</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a5312ff1368f4d9b8e1b3a70ebc722b6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const float *</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a1b594a2c6a22153f01f7360ca158886e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getColumn</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>abb9f15c1eba3edd1e2791070499c9cbd</anchor>
      <arglist>(int iCol) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>getRow</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>af3369606d47b9fa752e1c083b1945ac3</anchor>
      <arglist>(int iRow) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumn</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ae1bfa5fa961ffd98cefffcd9b16ef2ed</anchor>
      <arglist>(int iCol, const Vector3 &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRow</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a2ddcfb0a2885cc04205730cd8aa3e46c</anchor>
      <arglist>(int iRow, const Vector3 &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>Matrix3 &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ad88bf45da5ac55fdbaf448d1830d6b8f</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>adbb2b8d64593b88703cbb8428f6a54df</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a73dbbcabb088670ca7cae16b7d098c9b</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>operator+</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a97838d72ba19f12a6de8b6b9acb4a510</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>af5ff9fa515fdb3ee95c16a269d0310c0</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>aead61fb3d3bda8975ef04fc6f45e1aa5</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a726c66d4e79918ecb6c39ceaded362b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a2ea9ec3b279fc537c83ef3df3a360dcf</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix)</arglist>
    </member>
    <member kind="function">
      <type>Matrix3 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ad60ddbe788ce218ab5a4ab63a1820f2f</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix)</arglist>
    </member>
    <member kind="function">
      <type>Matrix3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a74b2825469f04be18e2ce0a7a943069e</anchor>
      <arglist>(const Matrix3 &amp;rkMatrix)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ad0691b343415ef3c9bbd2408abbdfbf3</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>aef6f02ff4258bc64df8d68c30ce62ff3</anchor>
      <arglist>(float fScalar) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOrthonormal</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a34787425dcd1e9c8c28f7a4a04276708</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>transpose</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ab41a4d216c17f68d2fe00aadeb4f1ab8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inverse</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ae0e88f9be0c14def855ffd7fe198d0e4</anchor>
      <arglist>(Matrix3 &amp;rkInverse, float fTolerance=1e-06) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>inverse</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a7938360e752607f5a48149e7c8b91b7f</anchor>
      <arglist>(float fTolerance=1e-06) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>determinant</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>abb14699e31b4f5e48a9711ab4b17ced4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>singularValueDecomposition</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a71c79c0631a09f9de20fb7cf0e3c9981</anchor>
      <arglist>(Matrix3 &amp;rkL, Vector3 &amp;rkS, Matrix3 &amp;rkR) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>singularValueComposition</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a21ac3feaffe1e24d886273128c3562ee</anchor>
      <arglist>(const Matrix3 &amp;rkL, const Vector3 &amp;rkS, const Matrix3 &amp;rkR)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>orthonormalize</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a090c71d25cbe780124a5cf4942ec48d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qDUDecomposition</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a6fe8e7f3b041c451f21900085475c838</anchor>
      <arglist>(Matrix3 &amp;rkQ, Vector3 &amp;rkD, Vector3 &amp;rkU) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>spectralNorm</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a6cb44ddbbc446269ff9064f6fd058ef3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toAxisAngle</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ac594d1f50d931179247da528519f8d67</anchor>
      <arglist>(Vector3 &amp;rkAxis, float &amp;rfRadians) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEulerAnglesXYZ</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a9a5b5f71a7b463867398866e3eed13e4</anchor>
      <arglist>(float &amp;rfYAngle, float &amp;rfPAngle, float &amp;rfRAngle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEulerAnglesXZY</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a112e9b6eb0691ed7478ff9aa7e56a46e</anchor>
      <arglist>(float &amp;rfYAngle, float &amp;rfPAngle, float &amp;rfRAngle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEulerAnglesYXZ</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a78ce7d6c9aa2f6c2c5f1ee207a18118d</anchor>
      <arglist>(float &amp;rfYAngle, float &amp;rfPAngle, float &amp;rfRAngle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEulerAnglesYZX</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>acf1274dbfb20cf4f4531fe0645810a28</anchor>
      <arglist>(float &amp;rfYAngle, float &amp;rfPAngle, float &amp;rfRAngle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEulerAnglesZXY</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ac0bcb6103d4496dfbdcca1dba9af8402</anchor>
      <arglist>(float &amp;rfYAngle, float &amp;rfPAngle, float &amp;rfRAngle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEulerAnglesZYX</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a8ea3178e8db7fecc83078d19ab6bb979</anchor>
      <arglist>(float &amp;rfYAngle, float &amp;rfPAngle, float &amp;rfRAngle) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eigenSolveSymmetric</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>af6b8d60e9cf2fc77a598ce20df141014</anchor>
      <arglist>(float afEigenvalue[3], Vector3 akEigenvector[3]) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a4c389315bdca62213c69f035f255f23e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>mul</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ab2501b049e84b8968ae394b41910edb2</anchor>
      <arglist>(const Matrix3 &amp;A, const Matrix3 &amp;B, Matrix3 &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transpose</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>af9abed9019046beee36ea005419c86af</anchor>
      <arglist>(const Matrix3 &amp;A, Matrix3 &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3</type>
      <name>fromAxisAngle</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>aa91c3ecb4f600281cac9cbbb626168ea</anchor>
      <arglist>(const Vector3 &amp;rkAxis, float fRadians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3</type>
      <name>fromEulerAnglesXYZ</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>aec1b9431910e068cb009718487e57d32</anchor>
      <arglist>(float fYAngle, float fPAngle, float fRAngle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3</type>
      <name>fromEulerAnglesXZY</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a23ac24460c30c3a2ff16ffa149ed135a</anchor>
      <arglist>(float fYAngle, float fPAngle, float fRAngle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3</type>
      <name>fromEulerAnglesYXZ</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a1af7943e740d511800b6a701644485ac</anchor>
      <arglist>(float fYAngle, float fPAngle, float fRAngle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3</type>
      <name>fromEulerAnglesYZX</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a2d5916e2f95405f71c948de3af58edea</anchor>
      <arglist>(float fYAngle, float fPAngle, float fRAngle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3</type>
      <name>fromEulerAnglesZXY</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a1f3fe9f10682af6e9bd74a98ac6e4e7a</anchor>
      <arglist>(float fYAngle, float fPAngle, float fRAngle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix3</type>
      <name>fromEulerAnglesZYX</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a8daf8905a74bbab99a7141a24170f54d</anchor>
      <arglist>(float fYAngle, float fPAngle, float fRAngle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>tensorProduct</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a7ccfb8a4d546bb8692d7f5f5f7776054</anchor>
      <arglist>(const Vector3 &amp;rkU, const Vector3 &amp;rkV, Matrix3 &amp;rkProduct)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Matrix3 &amp;</type>
      <name>zero</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a524f6777ce8c63bf28e5ac8b25fe4630</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Matrix3 &amp;</type>
      <name>identity</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ae4f77db91122912953621c5675a49bc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>EPSILON</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a39df747d9f69b27451868adddd814355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Matrix3</type>
      <name>ZERO</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ab29b8affc82b344424cedb87ea39507b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Matrix3</type>
      <name>IDENTITY</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a281dc68ce0cac328ce85f20de2864395</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>tridiagonal</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>aa82bfe22f91f60d505d9dbcf34623ef7</anchor>
      <arglist>(float afDiag[3], float afSubDiag[3])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>qLAlgorithm</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a0492195a59f29014c9acb05e205d3ae5</anchor>
      <arglist>(float afDiag[3], float afSubDiag[3])</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>bidiagonalize</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>aee7741dd4aab134c35e1fd70e8dc135f</anchor>
      <arglist>(Matrix3 &amp;kA, Matrix3 &amp;kL, Matrix3 &amp;kR)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>golubKahanStep</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a65af02eb8ad5181d6fa9f6e14d564f94</anchor>
      <arglist>(Matrix3 &amp;kA, Matrix3 &amp;kL, Matrix3 &amp;kR)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static float</type>
      <name>maxCubicRoot</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a4867e0cf0d931e189cc83c7666f0ceee</anchor>
      <arglist>(float afCoeff[3])</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const float</type>
      <name>ms_fSvdEpsilon</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>aaaa0a9c1a4a524dcece1d7de24fa2eab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>ms_iSvdMaxIterations</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a348cda281aa3c5b124a4b918935e8b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend Vector3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a116694858d25a656397d96fef259d204</anchor>
      <arglist>(const Vector3 &amp;rkVector, const Matrix3 &amp;rkMatrix)</arglist>
    </member>
    <member kind="friend">
      <type>friend Matrix3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>a882e9e4a590c0c5403926175db256b3a</anchor>
      <arglist>(double fScalar, const Matrix3 &amp;rkMatrix)</arglist>
    </member>
    <member kind="friend">
      <type>friend Matrix3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>aee94646f237db280d57f3d52a4195f43</anchor>
      <arglist>(float fScalar, const Matrix3 &amp;rkMatrix)</arglist>
    </member>
    <member kind="friend">
      <type>friend Matrix3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix3.html</anchorfile>
      <anchor>ad322a924479ed3200e69041c4816865a</anchor>
      <arglist>(int fScalar, const Matrix3 &amp;rkMatrix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Matrix4</name>
    <filename>classG3D_1_1Matrix4.html</filename>
    <member kind="function">
      <type></type>
      <name>Matrix4</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a4048c24ef05123526b04c19b38586ffb</anchor>
      <arglist>(float r1c1, float r1c2, float r1c3, float r1c4, float r2c1, float r2c2, float r2c3, float r2c4, float r3c1, float r3c2, float r3c3, float r3c4, float r4c1, float r4c2, float r4c3, float r4c4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix4</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a86f2b18a7f50a8a95c38a1b00be1e92a</anchor>
      <arglist>(const float *init)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix4</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>afdac8483140ac01f04f2f3f2eba7f85c</anchor>
      <arglist>(const class CoordinateFrame &amp;c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix4</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a9471d6e6658ddc5c7e3b197c284376db</anchor>
      <arglist>(const double *init)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix4</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a5318a2d23d7d8df2fa6f25a3d84108ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>class CoordinateFrame</type>
      <name>approxCoordinateFrame</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a72fc716aca8369d87c72a3240ca8daee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>af4e9df34421edf3327d07aedc2e29e50</anchor>
      <arglist>(int r)</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a67fb8d112c7268b3cff714914e93ec76</anchor>
      <arglist>(int r) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float *</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a75c7b56d0cddfabfe4f2b18fcff9d502</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const float *</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>ad403c73a6077758888f4950271ec257e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a87256eeefbd8b8ce58d188a733a4adb2</anchor>
      <arglist>(const Matrix4 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRow</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>addcc3f0d705b0c892cfa5ccf2eb2cf2c</anchor>
      <arglist>(int r, const class Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumn</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>aa96fec5319c759ef1904197387554eb8</anchor>
      <arglist>(int c, const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>getRow</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a94b9b1cd12b37d16262f0fd155437db2</anchor>
      <arglist>(int r) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>getColumn</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>af330761ad80abd87f2269254de4ea965</anchor>
      <arglist>(int c) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a925c1b7d3e23c1e7055c314dd4936736</anchor>
      <arglist>(const float s) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a8a1e97881308155ad884f9c561327df9</anchor>
      <arglist>(const Vector4 &amp;vector) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>transpose</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a3dcce5ba337a2f53193ceb69205e705f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>ac8aeab8c2cf7516c4bf8a49e086e1bdb</anchor>
      <arglist>(const Matrix4 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a33b6a5e9ce17910e9872bb9f51c5d982</anchor>
      <arglist>(const Matrix4 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>determinant</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a6f59d3b6ba15a2907b5296dd788d8c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>inverse</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>afd968d8f7546bae1a1baaeffe66394b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>adjoint</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a0756f40f36353d2488f13f77c35e05b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>cofactor</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>ae13ac1760f70e6b8c04c1fe6e21d7295</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a2701e8afd61f22eb0304a3d0b94e69f9</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a6c55dc5c745bf117df5c7c2af025ab4f</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a5959322b91663b507ffc3ec952a20252</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Matrix4 &amp;</type>
      <name>identity</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a5b6eef12279706c438b0c1e88702a321</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Matrix4 &amp;</type>
      <name>zero</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>accdaa305bc846d6d9ae44889ce48565a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4</type>
      <name>orthogonalProjection</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>ad307441e11f1b90d4d8724d4fa56dfa3</anchor>
      <arglist>(float left, float right, float bottom, float top, float nearval, float farval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4</type>
      <name>orthogonalProjection</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>aabc60216109bc777d2a5c2df6f983c3c</anchor>
      <arglist>(const class Rect2D &amp;rect, float nearval, float farval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matrix4</type>
      <name>perspectiveProjection</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a8d59d9f2991603304851587c71c5c33a</anchor>
      <arglist>(float left, float right, float bottom, float top, float nearval, float farval)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Matrix4</type>
      <name>IDENTITY</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>a728ec95a72034dacef66bff922008587</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Matrix4</type>
      <name>ZERO</name>
      <anchorfile>classG3D_1_1Matrix4.html</anchorfile>
      <anchor>add0347c5fca82681d510f0c54f5e3d15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MD2Model::MD2AnimInfo</name>
    <filename>classG3D_1_1MD2Model_1_1MD2AnimInfo.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>first</name>
      <anchorfile>classG3D_1_1MD2Model_1_1MD2AnimInfo.html</anchorfile>
      <anchor>a7258f2225ad9c86c14d3b6d1263762db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last</name>
      <anchorfile>classG3D_1_1MD2Model_1_1MD2AnimInfo.html</anchorfile>
      <anchor>a731f3e923cb8a3c397e4eceec3bdfd20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fps</name>
      <anchorfile>classG3D_1_1MD2Model_1_1MD2AnimInfo.html</anchorfile>
      <anchor>af23f752ad414a9b3faaca22d627144e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>loops</name>
      <anchorfile>classG3D_1_1MD2Model_1_1MD2AnimInfo.html</anchorfile>
      <anchor>a3797ca383daa0e381f6544bc3f18dc75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MD2Model</name>
    <filename>classG3D_1_1MD2Model.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <class kind="class">G3D::MD2Model::MD2AnimInfo</class>
    <class kind="class">G3D::MD2Model::PackedGeometry</class>
    <class kind="class">G3D::MD2Model::Pose</class>
    <class kind="class">G3D::MD2Model::PosedMD2Model</class>
    <class kind="class">G3D::MD2Model::Primitive</class>
    <member kind="enumeration">
      <type></type>
      <name>Animation</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUMP_UP</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a62485090cc47f6a8a2e8d756c99d59cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_WALK_BACKWARD</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a3c04a3ec8392b8e80410cc87a01b26e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RUN_BACKWARD</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46af920543e280c13bb4c8d9e212a5f8c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAND</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46afd49431854f90049d4c065ffede03957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RUN</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46ae9b65381f2d4771c08a9b3ef5f2ea46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ATTACK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a1a1561aa56ff437a7439e8de34d18010</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAIN_A</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a6942aaddaa3e9d99e22492539efd6b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAIN_B</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46acda78e8645f09f0e778b217324b7c26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAIN_C</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a9b211369502f84d38f6cab078675b6bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUMP_DOWN</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a835ac9ca44a9ce531acd885700f00992</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLIP</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a2b299d4ecc91f13971a634803617af38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SALUTE</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46aa2b81a43558a99c1ffe694025827583a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FALLBACK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46ab8b153db11de7f3a369a9cca4ea8ed70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAVE</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a277fc08f8727867f1d42340431c4c375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINT</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a46d5a252d1e76f2f6ab8f1188fc4b539</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_STAND</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46abfc7633871ac5019fe7d25d8a6cebbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_WALK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a3928c2d508730aab1dc6f873c45c4be4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_ATTACK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46aa0433600a84d725487d3e411905ff177</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_PAIN</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a93a50b1932e6307203c1c1289767a2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_DEATH</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46acca257820a0ceb1ee5cde89c4460b9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEATH_FALLBACK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46ad758059e03cca7f168245dd6680bf03c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEATH_FALLFORWARD</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a91fb4cccc04ba5b8d0c279f8b187f16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEATH_FALLBACKSLOW</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a9562aacc85713915e654963e766ad27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUMP</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46ab16d26bbdf054c7167ba30fd865504c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_ANIMATIONS</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a9877ec11e7e93e7e263ff0aa563697b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUMP_UP</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a62485090cc47f6a8a2e8d756c99d59cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_WALK_BACKWARD</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a3c04a3ec8392b8e80410cc87a01b26e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RUN_BACKWARD</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46af920543e280c13bb4c8d9e212a5f8c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAND</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46afd49431854f90049d4c065ffede03957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RUN</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46ae9b65381f2d4771c08a9b3ef5f2ea46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ATTACK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a1a1561aa56ff437a7439e8de34d18010</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAIN_A</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a6942aaddaa3e9d99e22492539efd6b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAIN_B</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46acda78e8645f09f0e778b217324b7c26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAIN_C</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a9b211369502f84d38f6cab078675b6bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUMP_DOWN</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a835ac9ca44a9ce531acd885700f00992</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLIP</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a2b299d4ecc91f13971a634803617af38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SALUTE</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46aa2b81a43558a99c1ffe694025827583a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FALLBACK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46ab8b153db11de7f3a369a9cca4ea8ed70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAVE</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a277fc08f8727867f1d42340431c4c375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINT</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a46d5a252d1e76f2f6ab8f1188fc4b539</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_STAND</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46abfc7633871ac5019fe7d25d8a6cebbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_WALK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a3928c2d508730aab1dc6f873c45c4be4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_ATTACK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46aa0433600a84d725487d3e411905ff177</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_PAIN</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a93a50b1932e6307203c1c1289767a2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROUCH_DEATH</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46acca257820a0ceb1ee5cde89c4460b9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEATH_FALLBACK</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46ad758059e03cca7f168245dd6680bf03c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEATH_FALLFORWARD</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a91fb4cccc04ba5b8d0c279f8b187f16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEATH_FALLBACKSLOW</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a9562aacc85713915e654963e766ad27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUMP</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46ab16d26bbdf054c7167ba30fd865504c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_ANIMATIONS</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a30f4eaa0dd607ed55fd273cb2a8bac46a9877ec11e7e93e7e263ff0aa563697b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ac6e07a302f9d4625c19832f3b40fce34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setName</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a6a8a4615f45703c78815ab73b2986b55</anchor>
      <arglist>(const std::string &amp;n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MD2Model</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ab055aa26966e9ec5b75845dc0906ee2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PosedModelRef</type>
      <name>pose</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a4337fa9a8ebcc6cb5c5c44d9e11bb5d9</anchor>
      <arglist>(const CoordinateFrame &amp;cframe, const Pose &amp;pose)</arglist>
    </member>
    <member kind="function">
      <type>PosedModelRef</type>
      <name>pose</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ad13667bd277bd7ad967dc8671b7a6919</anchor>
      <arglist>(const CoordinateFrame &amp;cframe, const Pose &amp;pose, const GMaterial &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; Vector2int16 &gt; &amp;</type>
      <name>texCoordArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>acf68e8967369091c8746b65859615d0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; MeshAlg::Face &gt; &amp;</type>
      <name>faces</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a9bdfa9b96938f620a61576b405b2dddf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; MeshAlg::Face &gt; &amp;</type>
      <name>weldedFaces</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ab7022e193e6fc15e434d7b7960c9f97a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; MeshAlg::Edge &gt; &amp;</type>
      <name>edges</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a1f4214c9e7acec9f2451369a7c3a7b32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; MeshAlg::Edge &gt; &amp;</type>
      <name>weldedEdges</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>aab9dbd779198bc0cb612cdcc5a6af533</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; MeshAlg::Vertex &gt; &amp;</type>
      <name>vertices</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a9fb550b048185332cf7a071840f7e834</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; MeshAlg::Vertex &gt; &amp;</type>
      <name>weldedVertices</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a367e4c646e9381cccd01a97a7a11479d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const CoordinateFrame &amp;</type>
      <name>textureMatrix</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a5f1cd05ed4f9fdedad0269d947345087</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debugRenderWireframe</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a74c795183393614903564a40e9e138a7</anchor>
      <arglist>(RenderDevice *renderDevice, const Pose &amp;pose)</arglist>
    </member>
    <member kind="function">
      <type>const Sphere &amp;</type>
      <name>objectSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>adb991add09578590bff19b960c51ddb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>objectSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ac6df7dc4a827f295632ea133a5810740</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; std::string &gt; &amp;</type>
      <name>textureFilenames</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>acdb68198badf1efb0e7f18f73fc3f09d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>mainMemorySize</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a070c6814a52e45bf4ce06029ada0de5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MD2ModelRef</type>
      <name>create</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ac33786d9e994e0b9fa8edb9ccf9618c9</anchor>
      <arglist>(const std::string &amp;filename, float scale=1.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GameTime</type>
      <name>animationLength</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a1e4239ee90f1b6b36828b23b96b54de0</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationLoops</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>afae26351eeb882974e5055c5d1b1f3ae</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationCrouch</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>aa591220135ede3f648b55515adb49d20</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationDeath</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>acb0cc5c1ccca6fb8bb0e9af11d1189fa</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationAttack</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a4055408ac66c13a938494d30ec0b600c</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationJump</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a9efc192978dd718433a15992228b3066</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationPain</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a5cb04a7ecb4df99207a335832c2643c2</anchor>
      <arglist>(Animation A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationStand</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ae9834565674a68f2b50ebf63f154f8c0</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationRun</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a1e86403a4a893bf9abf3348bfea9c132</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationRunForward</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>abab955011a439cacfdd85b8211f2d96a</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationRunBackward</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a38e89eaa5f4d2a68dadf6078d93da4ed</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>animationInterruptible</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a63c2600442a7127b1ff64331cbd91822</anchor>
      <arglist>(Animation a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getFrameNumber</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a9755a878f9a2820feb8be2d542a6759b</anchor>
      <arglist>(const Pose &amp;pose)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const GameTime</type>
      <name>PRE_BLEND_TIME</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a27bc68d099dbbd6ceec0fdf22357f9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NUM_VAR_AREAS</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a71a33c1ffef88a025ec44087834f7cb4a052ae41535a2b78eac8b8ccc428f8467</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NONE_ALLOCATED</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a71a33c1ffef88a025ec44087834f7cb4aab7968a7a49380437cd50cbb3d235585</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NUM_VAR_AREAS</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a71a33c1ffef88a025ec44087834f7cb4a052ae41535a2b78eac8b8ccc428f8467</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NONE_ALLOCATED</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a71a33c1ffef88a025ec44087834f7cb4aab7968a7a49380437cd50cbb3d235585</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadTextureFilenames</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>aafc8f3a677b98e7d67b68f7ea44842a3</anchor>
      <arglist>(BinaryInput &amp;b, int num, int offset)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeTexCoords</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a233080e4b64cd015d0990e8702da2b10</anchor>
      <arglist>(const Array&lt; Vector2int16 &gt; &amp;inCoords)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocateVertexArrays</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ab9f9fc26e6813e3ded228bad4eb7e603</anchor>
      <arglist>(RenderDevice *renderDevice)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MD2Model</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a1761b7b338fb0f82e9a822f2c3280fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>load</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a0ec950b36b7094291517af4176c8e20e</anchor>
      <arglist>(const std::string &amp;filename, float scale)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a1fb095df9e29350e70c0b16e3b63dc67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>af74ba9f7787e7e09969d1260edf63ff9</anchor>
      <arglist>(RenderDevice *renderDevice, const Pose &amp;pose)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getGeometry</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a4d5a7a124ee1932cb0e128cf55a65e57</anchor>
      <arglist>(const Pose &amp;pose, MeshAlg::Geometry &amp;geometry) const</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>setNormalTable</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ace27817a19e92ed65b73f8a733c4c2af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>computeFrameNumbers</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a023cf848cb550b39e7567d7690ee0ef3</anchor>
      <arglist>(const MD2Model::Pose &amp;pose, int &amp;kf0, int &amp;kf1, double &amp;alpha)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; std::string &gt;</type>
      <name>_textureFilenames</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a713284e706713f4087a15c3c1d0e883a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; PackedGeometry &gt;</type>
      <name>keyFrame</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a012a0f1d184ea9afd730f3f05f937a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; Primitive &gt;</type>
      <name>primitiveArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a8fcbaf8e02559dfc77a4ec15d296775c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; Vector2int16 &gt;</type>
      <name>_texCoordArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a1fa65f601f9f199b0fe05dbc85b76179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CoordinateFrame</type>
      <name>texFrame</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>afd6ad6c861a93cc35380c93ae73cb26e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Sphere</type>
      <name>animationBoundingSphere</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a94dd80fd18156452dd4eaaf7ef805e7c</anchor>
      <arglist>[MAX_ANIMATIONS]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Box</type>
      <name>animationBoundingBox</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a3c093a6c15099a9e800a9a309d0e8b9b</anchor>
      <arglist>[MAX_ANIMATIONS]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; int &gt;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ac6774e116073a6b0ff943453e85e0720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; Vector3 &gt;</type>
      <name>faceNormalArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a7c9a953a1c78353a594ef3bacbf3c623</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; MeshAlg::Face &gt;</type>
      <name>faceArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>aa2b38962298d5a083a901e819cb88eac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; MeshAlg::Vertex &gt;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a7ae689b8153b6979fd24905b23ed141d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; MeshAlg::Edge &gt;</type>
      <name>edgeArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a09ca3adbd775e0b7b7ee40202f252a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; MeshAlg::Face &gt;</type>
      <name>weldedFaceArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>aec097f603a28afdf4200b1f6ea62d2dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; MeshAlg::Vertex &gt;</type>
      <name>weldedVertexArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>afb4d3e00a5d1f3f7e7a80494c648af13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; MeshAlg::Edge &gt;</type>
      <name>weldedEdgeArray</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a826b3672348b1030feb04c6186d1c3fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a77c24b0abe23c06aebee60047a972a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Box</type>
      <name>boundingBox</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a5acc858c3d9924afabc87597b290e0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numBoundaryEdges</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a7c070a3a5fd60dacf1db936a40b91cb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numWeldedBoundaryEdges</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a03eb8259d2798dd6012ac9c5487f5765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_name</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>acde751f16a7f2cba004f2860769453e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static Vector3</type>
      <name>normalTable</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a0b29b0fc5d33244ad42a97a52c34e314</anchor>
      <arglist>[162]</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const MD2AnimInfo</type>
      <name>animationTable</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ae70d4b586524723b33747def17c539cc</anchor>
      <arglist>[MAX_ANIMATIONS]</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const double</type>
      <name>hangTimePct</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>ab905d79e654c5984c391785fcc39d34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static MD2Model *</type>
      <name>interpolatedModel</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a9ecc915d9d379258fe06f2ab3bb4f0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static Pose</type>
      <name>interpolatedPose</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a0e7119f3877784bed026cd8cb871ed88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static MeshAlg::Geometry</type>
      <name>interpolatedFrame</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>aadd35739783857b820e9ab794c8d0e91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static VARAreaRef</type>
      <name>varArea</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a696ccdb5433710e50db579c403b4a282</anchor>
      <arglist>[NUM_VAR_AREAS]</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static int</type>
      <name>nextVarArea</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a17f0cc3dc96b756c9f85b1ff234fca2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>PosedMD2Model</name>
      <anchorfile>classG3D_1_1MD2Model.html</anchorfile>
      <anchor>a4c6af3d8080f03dd1ae82e8061953e7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MD5Hash</name>
    <filename>classG3D_1_1MD5Hash.html</filename>
    <member kind="function">
      <type></type>
      <name>MD5Hash</name>
      <anchorfile>classG3D_1_1MD5Hash.html</anchorfile>
      <anchor>ae2e3ad5611b9a1efe616da8ce4319b04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MD5Hash</name>
      <anchorfile>classG3D_1_1MD5Hash.html</anchorfile>
      <anchor>aa0608acef3487de9ac61db16dda2fdef</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>uint8 &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1MD5Hash.html</anchorfile>
      <anchor>ae7648dd733ed65a98f7d296a3e678e49</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const uint8 &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1MD5Hash.html</anchorfile>
      <anchor>aa7615bd02150b2b4714c166e506cb0c3</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1MD5Hash.html</anchorfile>
      <anchor>a2d0e62215d69cbec02bcda8b94656212</anchor>
      <arglist>(const MD5Hash &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1MD5Hash.html</anchorfile>
      <anchor>a2ef42d2d5f240d3a35ffb900f99ef500</anchor>
      <arglist>(const MD5Hash &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1MD5Hash.html</anchorfile>
      <anchor>adbc722e6aab1b43dd7866234b73d6573</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1MD5Hash.html</anchorfile>
      <anchor>a2a038fd35d44e7a61d3ebea47341e150</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MeshAlg</name>
    <filename>classG3D_1_1MeshAlg.html</filename>
    <class kind="class">G3D::MeshAlg::Edge</class>
    <class kind="class">G3D::MeshAlg::Face</class>
    <class kind="class">G3D::MeshAlg::Geometry</class>
    <class kind="class">G3D::MeshAlg::Vertex</class>
    <member kind="enumeration">
      <type></type>
      <name>Primitive</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINES</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2aefcfe85b26e0324dd5400b348549329a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINE_STRIP</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2addc7fb224cab2a6d8a143298fc32be6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLES</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2a326ecb184a1c538a2d0cd45a4207ced4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLE_STRIP</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2ab4caaebef3a3e0442b6633d6e4c313c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLE_FAN</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2aac5c55d56d5e0c6de8a31961b0fa8f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUADS</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2a08eea558b9191b4b98a114f8b2ea7b44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUAD_STRIP</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2a31315b6501c2ce54241120155433de70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTS</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2a71e2e862696cd1fe9cb067439c252977</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINES</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2aefcfe85b26e0324dd5400b348549329a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINE_STRIP</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2addc7fb224cab2a6d8a143298fc32be6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLES</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2a326ecb184a1c538a2d0cd45a4207ced4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLE_STRIP</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2ab4caaebef3a3e0442b6633d6e4c313c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLE_FAN</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2aac5c55d56d5e0c6de8a31961b0fa8f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUADS</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2a08eea558b9191b4b98a114f8b2ea7b44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUAD_STRIP</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2a31315b6501c2ce54241120155433de70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTS</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a7f9564bdd428cbe00dec560d53382ce2a71e2e862696cd1fe9cb067439c252977</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeAdjacency</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>af526503b380f081d1ac4dc0dcc3055b1</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexGeometry, const Array&lt; int &gt; &amp;indexArray, Array&lt; Face &gt; &amp;faceArray, Array&lt; Edge &gt; &amp;edgeArray, Array&lt; Vertex &gt; &amp;vertexArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeAdjacency</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>acbbc44e2f79d577b5709a61db20efd80</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexArray, const Array&lt; int &gt; &amp;indexArray, Array&lt; Face &gt; &amp;faceArray, Array&lt; Edge &gt; &amp;edgeArray, Array&lt; Array&lt; int &gt; &gt; &amp;facesAdjacentToVertex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeAreaStatistics</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>aa7b42c0bb86632826eb5575afdfed52e</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexArray, const Array&lt; int &gt; &amp;indexArray, double &amp;minEdgeLength, double &amp;meanEdgeLength, double &amp;medianEdgeLength, double &amp;maxEdgeLength, double &amp;minFaceArea, double &amp;meanFaceArea, double &amp;medianFaceArea, double &amp;maxFaceArea)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeTangentSpaceBasis</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>aa0eb13268e9145c10edce0deb8795750</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexArray, const Array&lt; Vector2 &gt; &amp;texCoordArray, const Array&lt; Vector3 &gt; &amp;vertexNormalArray, const Array&lt; Face &gt; &amp;faceArray, Array&lt; Vector3 &gt; &amp;tangent, Array&lt; Vector3 &gt; &amp;binormal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeNormals</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a3e30437bf3a3cd467e6383fca8b30ec0</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexArray, const Array&lt; Face &gt; &amp;faceArray, const Array&lt; Array&lt; int &gt; &gt; &amp;adjacentFaceArray, Array&lt; Vector3 &gt; &amp;vertexNormalArray, Array&lt; Vector3 &gt; &amp;faceNormalArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeNormals</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>aed2d67db784bb8f9e141444120caf35b</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexGeometry, const Array&lt; Face &gt; &amp;faceArray, const Array&lt; Vertex &gt; &amp;vertexArray, Array&lt; Vector3 &gt; &amp;vertexNormalArray, Array&lt; Vector3 &gt; &amp;faceNormalArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeNormals</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a97f39de8b37a813dcf3169b70bc9ee88</anchor>
      <arglist>(Geometry &amp;geometry, const Array&lt; int &gt; &amp;indexArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeFaceNormals</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a3936ff53229513bccf2916da61cc0876</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexArray, const Array&lt; Face &gt; &amp;faceArray, Array&lt; Vector3 &gt; &amp;faceNormals, bool normalize=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>identifyBackfaces</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a533758cb98007c167999610453e4847c</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexArray, const Array&lt; Face &gt; &amp;faceArray, const Vector4 &amp;P, Array&lt; bool &gt; &amp;backface)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>identifyBackfaces</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>ab02b8f2c9b36806e7f41959c62521c99</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexArray, const Array&lt; Face &gt; &amp;faceArray, const Vector4 &amp;P, Array&lt; bool &gt; &amp;backface, const Array&lt; Vector3 &gt; &amp;faceNormals)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeWeld</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>af9477490c884a2eb1d0d3641fad5a502</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;oldVertexPositions, Array&lt; Vector3 &gt; &amp;newVertexPositions, Array&lt; int &gt; &amp;toNew, Array&lt; int &gt; &amp;toOld, double radius=G3D::fuzzyEpsilon)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>weldAdjacency</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a70eabbbab8a53c4fa254aedf5b3d9776</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;originalGeometry, Array&lt; Face &gt; &amp;faceArray, Array&lt; Edge &gt; &amp;edgeArray, Array&lt; Vertex &gt; &amp;vertexArray, double radius=G3D::fuzzyEpsilon)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>countBoundaryEdges</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a4dc47838a0ddeaae0fe6ec4f27dcc291</anchor>
      <arglist>(const Array&lt; Edge &gt; &amp;edgeArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>countBrokenEdges</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a1a8c0d4227afc89a5138f1ba3dc6716c</anchor>
      <arglist>(const Array&lt; Edge &gt; &amp;edgeArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createIndexArray</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a3e8cb9ceb94d0d4f3f180cd843e71304</anchor>
      <arglist>(int n, Array&lt; int &gt; &amp;array, int start=0, int run=1, int skip=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeBounds</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a1f89419789ecba4e884a8eff86d53761</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertex, class Box &amp;box, class Sphere &amp;sphere)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeBounds</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>aaf9a8ffd5c5c7db1913758077c1621f0</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertex, const Array&lt; int &gt; &amp;index, class Box &amp;box, class Sphere &amp;sphere)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>debugCheckConsistency</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>af2aca62ecfe3c6fb45e20823cd85f1cb</anchor>
      <arglist>(const Array&lt; Face &gt; &amp;faceArray, const Array&lt; Edge &gt; &amp;edgeArray, const Array&lt; Vertex &gt; &amp;vertexArray)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>toIndexedTriList</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>a8dc9b8ecc53935df67b76bb2d6ce2eb2</anchor>
      <arglist>(const Array&lt; IndexType &gt; &amp;inIndices, MeshAlg::Primitive inType, Array&lt; IndexType &gt; &amp;outIndices)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>findEdgeIndex</name>
      <anchorfile>classG3D_1_1MeshAlg.html</anchorfile>
      <anchor>ae0cac2603ebeaace79d19a7d46d8fa10</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertexArray, Array&lt; Edge &gt; &amp;geometricEdgeArray, int i0, int i1, int f, double area)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MeshBuilder</name>
    <filename>classG3D_1_1MeshBuilder.html</filename>
    <member kind="enumvalue">
      <name>AUTO_WELD</name>
      <anchorfile>classG3D_1_1MeshBuilder.html</anchorfile>
      <anchor>ab1f0fc0d1a470b69321c4eb47d18b50ea4f313c040ea3d561bda5025415cc386b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTO_WELD</name>
      <anchorfile>classG3D_1_1MeshBuilder.html</anchorfile>
      <anchor>ab1f0fc0d1a470b69321c4eb47d18b50ea4f313c040ea3d561bda5025415cc386b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshBuilder</name>
      <anchorfile>classG3D_1_1MeshBuilder.html</anchorfile>
      <anchor>a30a79deaaa6ca1c4e51bb8715b27f23f</anchor>
      <arglist>(bool twoSided=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commit</name>
      <anchorfile>classG3D_1_1MeshBuilder.html</anchorfile>
      <anchor>a87ba3a8496ec9c4d43cae46548260cdb</anchor>
      <arglist>(std::string &amp;name, Array&lt; int &gt; &amp;indexArray, Array&lt; Vector3 &gt; &amp;vertexArray)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTriangle</name>
      <anchorfile>classG3D_1_1MeshBuilder.html</anchorfile>
      <anchor>afb9521829c35eda4b0d4656d6e7ffdad</anchor>
      <arglist>(const Vector3 &amp;a, const Vector3 &amp;b, const Vector3 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addQuad</name>
      <anchorfile>classG3D_1_1MeshBuilder.html</anchorfile>
      <anchor>abf7251ee5aefbc9af805c035aaf9e580</anchor>
      <arglist>(const Vector3 &amp;a, const Vector3 &amp;b, const Vector3 &amp;c, const Vector3 &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTriangle</name>
      <anchorfile>classG3D_1_1MeshBuilder.html</anchorfile>
      <anchor>a89cce229b8db20b26cf942aa503d10b6</anchor>
      <arglist>(const Triangle &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classG3D_1_1MeshBuilder.html</anchorfile>
      <anchor>a450209def8157430c6a771aafb75f2bb</anchor>
      <arglist>(const std::string &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWeldRadius</name>
      <anchorfile>classG3D_1_1MeshBuilder.html</anchorfile>
      <anchor>a99d886ec25dfb8a5a3bd078586c74116</anchor>
      <arglist>(double r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MeshShape</name>
    <filename>classG3D_1_1MeshShape.html</filename>
    <base>G3D::Shape</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshShape</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>aa46a4c265444cca42ef40fc810f50d79</anchor>
      <arglist>(const Array&lt; Vector3 &gt; &amp;vertex, const Array&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a9245408f59bf512a3b33df30a2c0bc8c</anchor>
      <arglist>(RenderDevice *rd, const CoordinateFrame &amp;cframe, Color4 solidColor=Color4(.5,.5, 0,.5), Color4 wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a4c6e680dc21c5df60a3a79221505afe0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; Vector3 &gt; &amp;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a7b04eb4363bb1fd594b31ef310a80fc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; int &gt; &amp;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>af3f7716b7b958091595e4d78ab36a676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const AABSPTree&lt; Triangle &gt; &amp;</type>
      <name>bspTree</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a2f87166de0fcbdce39899a82c434aeab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a621e49ba44e865e7d1fb8aa0949f65a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a9e4b14a5ae079a565e4d616c4bd000da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a35b82440a6f7d73412ff2c8b3834ee02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a5b62bd52767a0adc4c965dfbd27a3c94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AABox</type>
      <name>boundingAABox</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>adc0b43a393515aa8814fe7bd3ebb575f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a14187e9cd451d111e7460858c2d4acb9</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1MeshShape.html</anchorfile>
      <anchor>a7e239c43d8d490f58981f71958b07f10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3d43a4cfb48ee5fad4c62a4e563d8f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a8c83969ebefbc0ea6b08c675a4a6da72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>af24833903a0d3e336c05d3f763b077f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cdc30906056508d91c8fbc8012c6e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a62c8b5504a00b0e83384b506ecefa036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ddd2389f3223bcf50c2066e7c877767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cc634a9611ef8f902cd59101b53a471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>ab71af0f244ad7c155a8d3ae9b06786ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3dcd66fc09e3e7542a258cc364a08f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a470ee3f279a66cf7f24a33b3d7882142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>aaa54c9f8e2996ed83cf914dd091f6bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6079582403e91245db8e8c84935d7851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a0c6d6e09678f9fafa99f39c7ad783a48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>typeToString</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a5d042e391bc27f781099b673ac9d8388</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Milestone</name>
    <filename>classG3D_1_1Milestone.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function">
      <type></type>
      <name>~Milestone</name>
      <anchorfile>classG3D_1_1Milestone.html</anchorfile>
      <anchor>aa4790181fc921a25e4e33895295f6234</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classG3D_1_1Milestone.html</anchorfile>
      <anchor>ab0a7647fd1fadc7a89570994d385e414</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RenderDevice</name>
      <anchorfile>classG3D_1_1Milestone.html</anchorfile>
      <anchor>a7532f2d0335e7fc849b32c467b27a0a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::NetAddress</name>
    <filename>classG3D_1_1NetAddress.html</filename>
    <member kind="function">
      <type></type>
      <name>NetAddress</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>aac3810edb19320c6ce60ca3999f51a76</anchor>
      <arglist>(uint32 host, uint16 port=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NetAddress</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>a38d14dd36acb8ce086d9a93b8e10d295</anchor>
      <arglist>(const std::string &amp;hostname, uint16 port)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NetAddress</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>ae457f90f181a50d48b4d2fed1f46828c</anchor>
      <arglist>(const std::string &amp;hostnameAndPort)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NetAddress</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>a5d1ecd4d2ecdd8b211e7992c26bf7a5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>ac35df1b5f341ad05677a6f27ffd38535</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>ada705d2a82bf9a0f392b89e438b8cf46</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>a341b979e7aebf9b6df2c9a1ca6ca37b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>ip</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>a1369626fe3b9032a2a0ddae27b3f8c4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>port</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>a9909f2568aeb4877f01dc247e5944e69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ipString</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>a04494f36ab0406834c57a724d12bec83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>ae9fa171b2fe76f2a03bb7e081df4b017</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NetAddress</type>
      <name>broadcastAddress</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>a5083219402960d99b5f90cdf1a934b9c</anchor>
      <arglist>(uint16 port)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NetworkDevice</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>aeecf97b085c6118a394e2b64b7367027</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>LightweightConduit</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>ae7232e8ab4004d70f704b222f0ec8bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ReliableConduit</name>
      <anchorfile>classG3D_1_1NetAddress.html</anchorfile>
      <anchor>a7a9802728429497bd4714d43ff669003</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::NetListener</name>
    <filename>classG3D_1_1NetListener.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function">
      <type></type>
      <name>~NetListener</name>
      <anchorfile>classG3D_1_1NetListener.html</anchorfile>
      <anchor>af577c7005724e1d9d0e9a01b7ba998e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReliableConduitRef</type>
      <name>waitForConnection</name>
      <anchorfile>classG3D_1_1NetListener.html</anchorfile>
      <anchor>ad36f4692103498e55046b9b869a73024</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clientWaiting</name>
      <anchorfile>classG3D_1_1NetListener.html</anchorfile>
      <anchor>a34a782a7c9316d56daecd60097434fcb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1NetListener.html</anchorfile>
      <anchor>aa92c2ffebe131167d5081231cc0a392a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NetworkDevice</name>
      <anchorfile>classG3D_1_1NetListener.html</anchorfile>
      <anchor>aeecf97b085c6118a394e2b64b7367027</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::NetMessage</name>
    <filename>classG3D_1_1NetMessage.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NetMessage</name>
      <anchorfile>classG3D_1_1NetMessage.html</anchorfile>
      <anchor>a20b9622a9792e227ad9c4f4ea3b2c658</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32</type>
      <name>type</name>
      <anchorfile>classG3D_1_1NetMessage.html</anchorfile>
      <anchor>ac947bd75752c7cedc2ed2e4676aa5604</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1NetMessage.html</anchorfile>
      <anchor>a9ba6bd5a6ccacb151399c4ec1b210b1d</anchor>
      <arglist>(class BinaryOutput &amp;b) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1NetMessage.html</anchorfile>
      <anchor>a0ffbb4c6ee4421ee09fc520c64377d99</anchor>
      <arglist>(class BinaryInput &amp;b)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::NetworkDevice</name>
    <filename>classG3D_1_1NetworkDevice.html</filename>
    <member kind="function">
      <type></type>
      <name>NetworkDevice</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a73506dfc011937d6918e18498949c177</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a5c74ed958cc1ee94e82f43937a309cfb</anchor>
      <arglist>(class Log *log=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a5d008b0d1876dfa12859dd3a64a9e245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describeSystem</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a5c19fb4d6bd18697fc5b484335d73b74</anchor>
      <arglist>(TextOutput &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describeSystem</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a197d4f4c50117ea129f4213a626b7852</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Log *</type>
      <name>log</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a23c9b444246e3aae5c298d5d218441a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>localHostName</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>adfb37dfd62ba9e1534adb0d1062a9d30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>localHostAddresses</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>ad7665761974645f53f4f976fd74e3958</anchor>
      <arglist>(Array&lt; NetAddress &gt; &amp;array) const</arglist>
    </member>
    <member kind="function">
      <type>LightweightConduitRef</type>
      <name>createLightweightConduit</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a5f4bb7fed61f13e573850f986092023f</anchor>
      <arglist>(uint16 receivePort=0, bool enableReceive=false, bool enableBroadcast=false)</arglist>
    </member>
    <member kind="function">
      <type>ReliableConduitRef</type>
      <name>createReliableConduit</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>afcdc9c815755c722edcd3ebb6b0570ea</anchor>
      <arglist>(const NetAddress &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>NetListenerRef</type>
      <name>createListener</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a8a4a2f1391d071cbc5af758adf42b6cb</anchor>
      <arglist>(const uint16 port)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Conduit</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a47e7ddb6af641f77156f0beb35d1c60d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>LightweightConduit</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>ae7232e8ab4004d70f704b222f0ec8bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ReliableConduit</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>a7a9802728429497bd4714d43ff669003</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NetListener</name>
      <anchorfile>classG3D_1_1NetworkDevice.html</anchorfile>
      <anchor>aa297c1e87aebfbe384d672af97105f7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::ObjectShader</name>
    <filename>classG3D_1_1ObjectShader.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function">
      <type>bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1ObjectShader.html</anchorfile>
      <anchor>a466370190ae9787aa47ab418d6c52206</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>classG3D_1_1ObjectShader.html</anchorfile>
      <anchor>aa57215d423b68dfd8e339d935f84ab55</anchor>
      <arglist>(class RenderDevice *renderDevice)=0</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>messages</name>
      <anchorfile>classG3D_1_1ObjectShader.html</anchorfile>
      <anchor>a87e7f5f4b4b9c9be838bc9b7450c389b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ObjectShader</name>
      <anchorfile>classG3D_1_1ObjectShader.html</anchorfile>
      <anchor>ab2987ab6ccb673cbee5301aea8d6de47</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextOutput::Options</name>
    <filename>classG3D_1_1TextOutput_1_1Options.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>WordWrapMode</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a56a8f14bb10943ea3b258f1d83955456</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_NONE</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a56a8f14bb10943ea3b258f1d83955456a28d9249e417e1259f872dc4da27e06ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_WITHOUT_BREAKING</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a56a8f14bb10943ea3b258f1d83955456a48419494337ff6880d53712f0df55c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_ALWAYS</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a56a8f14bb10943ea3b258f1d83955456a0b6f78958296c94ea39f1b866668e2d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NewlineStyle</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>afdce49022a7a4b71141f2e6d8400953c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEWLINE_WINDOWS</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>afdce49022a7a4b71141f2e6d8400953caecd2d758a2e5768270d31e43c699d7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEWLINE_UNIX</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>afdce49022a7a4b71141f2e6d8400953caab2b3a88ed38b28bd5e8fb134e7353b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_NONE</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a56a8f14bb10943ea3b258f1d83955456a28d9249e417e1259f872dc4da27e06ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_WITHOUT_BREAKING</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a56a8f14bb10943ea3b258f1d83955456a48419494337ff6880d53712f0df55c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_ALWAYS</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a56a8f14bb10943ea3b258f1d83955456a0b6f78958296c94ea39f1b866668e2d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEWLINE_WINDOWS</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>afdce49022a7a4b71141f2e6d8400953caecd2d758a2e5768270d31e43c699d7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEWLINE_UNIX</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>afdce49022a7a4b71141f2e6d8400953caab2b3a88ed38b28bd5e8fb134e7353b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Options</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a3cf8ac09e43623cb9ea01e7c43f54c6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>WordWrapMode</type>
      <name>wordWrap</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a21cba8bd21006b8449ff6b2bea277214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allowWordWrapInsideDoubleQuotes</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a9265f284d1b8ada95c542f946ea57c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numColumns</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a15fa7ee9bab7e079ad86a310c831b97b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>spacesPerIndent</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>a73bd94e3a7c24a47d5673a05800046ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NewlineStyle</type>
      <name>newlineStyle</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>ae6ba9d00a4def47e63e3a58d39eb8245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>convertNewlines</name>
      <anchorfile>classG3D_1_1TextOutput_1_1Options.html</anchorfile>
      <anchor>afd30d18a0accd994f7583375e938df90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MD2Model::PackedGeometry</name>
    <filename>classG3D_1_1MD2Model_1_1PackedGeometry.html</filename>
    <member kind="variable">
      <type>Array&lt; Vector3 &gt;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PackedGeometry.html</anchorfile>
      <anchor>af9ee6b5727595a2cbecc22e0cac8c7eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; uint8 &gt;</type>
      <name>normalArray</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PackedGeometry.html</anchorfile>
      <anchor>addd6ae7d37cb6f8d896d1e8565b37fe5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::LightweightConduit::PacketSizeException</name>
    <filename>classG3D_1_1LightweightConduit_1_1PacketSizeException.html</filename>
    <member kind="function">
      <type></type>
      <name>PacketSizeException</name>
      <anchorfile>classG3D_1_1LightweightConduit_1_1PacketSizeException.html</anchorfile>
      <anchor>a72e2bcc9973908ebc19111437b7804be</anchor>
      <arglist>(const std::string &amp;m, int s, int b)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classG3D_1_1LightweightConduit_1_1PacketSizeException.html</anchorfile>
      <anchor>abaeda495421137f462e801e77dd7313e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>serializedPacketSize</name>
      <anchorfile>classG3D_1_1LightweightConduit_1_1PacketSizeException.html</anchorfile>
      <anchor>af0d2df82d3855c68f2a49ebf65fd2ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxMessageSize</name>
      <anchorfile>classG3D_1_1LightweightConduit_1_1PacketSizeException.html</anchorfile>
      <anchor>a9e428be5157bc72ec3b74e987509f249</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::PhysicsFrame</name>
    <filename>classG3D_1_1PhysicsFrame.html</filename>
    <member kind="function">
      <type></type>
      <name>PhysicsFrame</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a9b72b36e8732e0193dfafa25663ecf7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhysicsFrame</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>addb6d15dff66e519693da1efaee9191c</anchor>
      <arglist>(const Vector3 &amp;translation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhysicsFrame</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a2c4836b9a8201277af0cf4c344086ab3</anchor>
      <arglist>(const CoordinateFrame &amp;coordinateFrame)</arglist>
    </member>
    <member kind="function">
      <type>PhysicsFrame</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a53b584c27ce5b6b6bd44f8a3d0e148fd</anchor>
      <arglist>(const PhysicsFrame &amp;other) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PhysicsFrame</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>ad83ca1a55ea825517ee201cec181d6b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>toCoordinateFrame</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a2eab6cb947799ccd893ac31c727a66e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PhysicsFrame</type>
      <name>lerp</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>ae006d4eb327b13bebe00b216c7c830f2</anchor>
      <arglist>(const PhysicsFrame &amp;other, float alpha) const</arglist>
    </member>
    <member kind="function">
      <type>PhysicsFrame</type>
      <name>integrate</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a28a2ed477c45b06a7b6b2cf16db3a6b8</anchor>
      <arglist>(float t, const PhysicsFrame &amp;dx)</arglist>
    </member>
    <member kind="function">
      <type>PhysicsFrame</type>
      <name>integrate</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a7cb6124aa474b1dbcbcc4f093c9f7ad6</anchor>
      <arglist>(float t, const PhysicsFrame &amp;dx, const PhysicsFrame &amp;ddx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a4fcd9ea079023e3d443c6989aef20627</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a585ecc107866cb7330f6dba12e90b903</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="variable">
      <type>Quat</type>
      <name>rotation</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a4350e05d9e7d20a895e44b51eeaa8f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>translation</name>
      <anchorfile>classG3D_1_1PhysicsFrame.html</anchorfile>
      <anchor>a77487e69b518d4ae53c0be1d902641a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::PixelProgram</name>
    <filename>classG3D_1_1PixelProgram.html</filename>
    <base>G3D::GPUProgram</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4X4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a54ba8540760736c58ee8c1501c456e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3X3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acafbc1b22722b0523c4c6d0e000c9678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2X2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a9f2228853635c3489f8e1e531497933f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a37cc1bc86e946fd3671eee95b9de89fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a91b194f18416bc61e9a331bd7f15d0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95ab000a51b184e8abb5223f0fe6835ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT1</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a08025e2ef39627d062e326478b5ea435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER1D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acfe89cc9a3fd1450383de77ee509b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER2D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95aeb21d2b1fc83bb94d9519a376b522ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER3D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a63414caa2aaa70eaa3e508424eb0518a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERCUBE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a01093fc8efba7adf292ded5010f0316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERRECT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95af1dc2f3ee42defa67c584811972579ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Source</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3af0e5be77f3670e5d6181c7cc5188e17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONSTANT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3a4fb7b052042eebf5dd6ae6749838bb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4X4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a54ba8540760736c58ee8c1501c456e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3X3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acafbc1b22722b0523c4c6d0e000c9678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2X2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a9f2228853635c3489f8e1e531497933f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a37cc1bc86e946fd3671eee95b9de89fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a91b194f18416bc61e9a331bd7f15d0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95ab000a51b184e8abb5223f0fe6835ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT1</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a08025e2ef39627d062e326478b5ea435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER1D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acfe89cc9a3fd1450383de77ee509b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER2D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95aeb21d2b1fc83bb94d9519a376b522ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER3D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a63414caa2aaa70eaa3e508424eb0518a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERCUBE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a01093fc8efba7adf292ded5010f0316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERRECT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95af1dc2f3ee42defa67c584811972579ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3af0e5be77f3670e5d6181c7cc5188e17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONSTANT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3a4fb7b052042eebf5dd6ae6749838bb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reload</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a79bd71f903aa0f4f225b2df08489d644</anchor>
      <arglist>(const std::string &amp;code=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>getOpenGLID</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>ab370c18c1c459e4ca90581b46ea023f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a5a77809ff2a8a865c4d71d866b02b5eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a0f1e48dedb8aafacb2317551e3ca6fc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PixelProgramRef</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1PixelProgram.html</anchorfile>
      <anchor>af0ecad4ff9c8b7d4c43575326934c086</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PixelProgramRef</type>
      <name>fromCode</name>
      <anchorfile>classG3D_1_1PixelProgram.html</anchorfile>
      <anchor>aa4ba9e6e5672a4564653f68da614d505</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;code)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CgType</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a8e16a9a0d33cf7ff3b7e0774e2cbcf6a</anchor>
      <arglist>(const std::string &amp;s, Type &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>aef1736a3c25d0d52a5ca9d76d0341992</anchor>
      <arglist>(const Type &amp;t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>Extension</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ARB</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ab327b3bdeb9ce53dd56cf2e968de5ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVIDIA</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ac0a362616a3e5755ee1161f6e2eb07c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ARB</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ab327b3bdeb9ce53dd56cf2e968de5ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVIDIA</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ac0a362616a3e5755ee1161f6e2eb07c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>genPrograms</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a251bb51d21edbdaf5d05f3b48be91235</anchor>
      <arglist>(int num, unsigned int *id) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a8af0876f1d6cea5db92039312609d775</anchor>
      <arglist>(int unit, unsigned int glProgram) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>ab456e6f8179e5810d3ba828a2aaf650c</anchor>
      <arglist>(const std::string &amp;code) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadConstant</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a287b6fe337e2454c39b38f8b7fa6948b</anchor>
      <arglist>(int slot, const Vector4 &amp;value) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getProgramError</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a683014afc04db90c3055192f6d278881</anchor>
      <arglist>(int &amp;pos, const unsigned char *&amp;msg) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deletePrograms</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a7c453f616eaabf60a923947bc126a97e</anchor>
      <arglist>(int num, unsigned int *id) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setArgs</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>ad1c9c6fff0952a944f30f59b5676dc14</anchor>
      <arglist>(class RenderDevice *, const ArgList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static GLenum</type>
      <name>getUnitFromCode</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a4723bfc4f2da1d71eb6f8e446b5351b9</anchor>
      <arglist>(const std::string &amp;code, Extension &amp;extension)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BindingTable</type>
      <name>bindingTable</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>af37f8c6771dc561fbc1c4ad8de42a9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLenum</type>
      <name>unit</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a1f99e52569c1e3257549c90102ffa8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>adc4e3a6f173428d2dc3eb0102bd55d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLuint</type>
      <name>glProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a28a25dfa0355c7408f5a238857ce1ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a36c0debde770bd2b47cd3acc179df313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum G3D::GPUProgram::Extension</type>
      <name>extension</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a38837303120944377d66eb4708bc8629</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Plane</name>
    <filename>classG3D_1_1Plane.html</filename>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>ac40ea688fce2fd28eb4c7ec19fafc55b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>acfa8a6896fbfbdbf690b58e07cd4a4fb</anchor>
      <arglist>(const Vector3 &amp;point0, const Vector3 &amp;point1, const Vector3 &amp;point2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a9b6b7579e5abc5711d7d6b73f43aebbc</anchor>
      <arglist>(Vector4 point0, Vector4 point1, Vector4 point2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a99ad5af3dfaaa0925e1a6a253cfb85f1</anchor>
      <arglist>(const Vector3 &amp;__normal, const Vector3 &amp;point)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>ab1a0ecb7543794d856f7e8985188ac35</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>aa3e65d60ac7e05e8f572c23fb1325d83</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>ae140830165ca0998be031a83d4faf228</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Plane</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a94195fffa1118ae68222c658e02fe61f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>halfSpaceContains</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a52e0400b41b32a862a674d85c03bbb00</anchor>
      <arglist>(Vector3 point) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>halfSpaceContains</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a559905baf4a488d59f82e7619e06031e</anchor>
      <arglist>(const Vector4 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>halfSpaceContainsFinite</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>aef5d6620ce2cfed4daaa9f9734330607</anchor>
      <arglist>(const Vector3 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyContains</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a6eb6fa2392d296ce28ebad6cbac2cda9</anchor>
      <arglist>(const Vector3 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>const Vector3 &amp;</type>
      <name>normal</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a4d9ef89e9b447b2fe28d9d46902bd346</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>distance</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a869b16cbbf8fe796cd610f20f426acda</anchor>
      <arglist>(const Vector3 &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>closestPoint</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>af344d1a9960cf204cc697f7f5b464da5</anchor>
      <arglist>(const Vector3 &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a968a9e0ce34355b621b64592ead68d5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flip</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a3c73f15096f448891147dcf03ddaa719</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getEquation</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>ad42b18c66bc402c16fbfaa438bc42b9c</anchor>
      <arglist>(Vector3 &amp;normal, double &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getEquation</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a2c7f6f19811c1aab896f6fee1519a34f</anchor>
      <arglist>(Vector3 &amp;normal, float &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getEquation</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a34c58e48ed722dfd00d3efb93eb0869c</anchor>
      <arglist>(double &amp;a, double &amp;b, double &amp;c, double &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getEquation</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a6c06e2f08442a810a5260e3be1748485</anchor>
      <arglist>(float &amp;a, float &amp;b, float &amp;c, float &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a6d8ea6eae0b7d1a2482e3e54a6020d0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Plane</type>
      <name>fromEquation</name>
      <anchorfile>classG3D_1_1Plane.html</anchorfile>
      <anchor>a27ec537a2146d5485860935115dc8fe6</anchor>
      <arglist>(float a, float b, float c, float d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::PlaneShape</name>
    <filename>classG3D_1_1PlaneShape.html</filename>
    <base>G3D::Shape</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlaneShape</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>aa8b1c69304af8cbe849059df1f36b4f7</anchor>
      <arglist>(const G3D::Plane &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>ae688fddfca59bf5be3efacdff3fbdc94</anchor>
      <arglist>(RenderDevice *rd, const CoordinateFrame &amp;cframe, Color4 solidColor=Color4(.5,.5, 0,.5), Color4 wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>aa5173840881b691a7303bc7ee87473f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>a5ff57eba047ac1568882dd4137c07024</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>a48848ed186eb7155f739a384025bca5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>a1d44d5d0d90da647602285a59a6bfee9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>a05d611aeaaa37b3843114f432c28390b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>a8f23e9cc183e0931d226f45d5be1c916</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>a004b743b3decfc4b1cd6e88a21e2f4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AABox</type>
      <name>boundingAABox</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>ab2b23812562e3e8948c5c889ce0e744b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>a498ec672992c3652c21cf350aab71a84</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1PlaneShape.html</anchorfile>
      <anchor>af4be3aa085bc05c18c7a3bd0def02790</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3d43a4cfb48ee5fad4c62a4e563d8f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a8c83969ebefbc0ea6b08c675a4a6da72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>af24833903a0d3e336c05d3f763b077f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cdc30906056508d91c8fbc8012c6e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a62c8b5504a00b0e83384b506ecefa036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ddd2389f3223bcf50c2066e7c877767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cc634a9611ef8f902cd59101b53a471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>ab71af0f244ad7c155a8d3ae9b06786ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3dcd66fc09e3e7542a258cc364a08f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a470ee3f279a66cf7f24a33b3d7882142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>aaa54c9f8e2996ed83cf914dd091f6bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a717a33c14c235862869010700e1a5c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a875d0e9c54adbe065257157c88a007f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>typeToString</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a5d042e391bc27f781099b673ac9d8388</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::_internal::PolyLineGeneric</name>
    <filename>classG3D_1_1__internal_1_1PolyLineGeneric.html</filename>
    <templarg>class SegmentType</templarg>
    <templarg>class VertexType</templarg>
    <member kind="function">
      <type></type>
      <name>PolyLineGeneric</name>
      <anchorfile>classG3D_1_1__internal_1_1PolyLineGeneric.html</anchorfile>
      <anchor>a6db3591ffd29470c5de4b3c73bafa804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PolyLineGeneric</name>
      <anchorfile>classG3D_1_1__internal_1_1PolyLineGeneric.html</anchorfile>
      <anchor>a7041b3e5720beed282c5a6aab196221f</anchor>
      <arglist>(const Array&lt; VertexType &gt; &amp;v, bool reverse=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numVertices</name>
      <anchorfile>classG3D_1_1__internal_1_1PolyLineGeneric.html</anchorfile>
      <anchor>ac37d4db3b5821d9d0375f47515199874</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closed</name>
      <anchorfile>classG3D_1_1__internal_1_1PolyLineGeneric.html</anchorfile>
      <anchor>aefb278d5322d5022562528f880840bea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VertexType</type>
      <name>vertex</name>
      <anchorfile>classG3D_1_1__internal_1_1PolyLineGeneric.html</anchorfile>
      <anchor>a04ef345fa15417977647a369abe75157</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numSegments</name>
      <anchorfile>classG3D_1_1__internal_1_1PolyLineGeneric.html</anchorfile>
      <anchor>a7d00c74cfb4157b1aef6664588469cdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SegmentType &amp;</type>
      <name>segment</name>
      <anchorfile>classG3D_1_1__internal_1_1PolyLineGeneric.html</anchorfile>
      <anchor>a34cdb587b9e31fe65697e03d1aaebbf5</anchor>
      <arglist>(int s) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>distance</name>
      <anchorfile>classG3D_1_1__internal_1_1PolyLineGeneric.html</anchorfile>
      <anchor>a96eee92b669a0ef70fbfbc3981f6e022</anchor>
      <arglist>(const VertexType &amp;p, int &amp;segmentIndex=dummyInt) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MD2Model::Pose</name>
    <filename>classG3D_1_1MD2Model_1_1Pose.html</filename>
    <member kind="function">
      <type></type>
      <name>Pose</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Pose.html</anchorfile>
      <anchor>aa36579d9750d8e48399cb869737bcfb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pose</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Pose.html</anchorfile>
      <anchor>a9cf2168a811ae550937057553c9d3b3e</anchor>
      <arglist>(Animation a, GameTime t=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Pose.html</anchorfile>
      <anchor>a395f841ed5ca8af93e90b10970cc96de</anchor>
      <arglist>(const Pose &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Pose.html</anchorfile>
      <anchor>ac4ca77bbd10715b86574ff399be4753f</anchor>
      <arglist>(const Pose &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doSimulation</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Pose.html</anchorfile>
      <anchor>a9c393eada2ef8d1244ef167e05b3ce32</anchor>
      <arglist>(GameTime deltaTime, bool crouching, bool movingForward, bool movingBackward, bool attack, bool jump, bool flip, bool salute, bool fallback, bool wave, bool point, bool death1, bool death2, bool death3, bool pain1, bool pain2, bool pain3)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>preFrameNumber</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Pose.html</anchorfile>
      <anchor>ad5c46da07bc8359e7705fcaa37e84345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Animation</type>
      <name>animation</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Pose.html</anchorfile>
      <anchor>a69bcce104b8fa7c070cb7d58bfed5fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GameTime</type>
      <name>time</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Pose.html</anchorfile>
      <anchor>ad68174250b1e025d9aaed9d0e0c51905</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MD2Model::PosedMD2Model</name>
    <filename>classG3D_1_1MD2Model_1_1PosedMD2Model.html</filename>
    <base>G3D::PosedModel</base>
    <member kind="function">
      <type></type>
      <name>PosedMD2Model</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>adc71a0c187f5f78a63826ea327f25860</anchor>
      <arglist>(MD2ModelRef _model, const CoordinateFrame &amp;_cframe, const Pose &amp;_pose, bool _useMat, const GMaterial &amp;_mat)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PosedMD2Model</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a1562e3dc5ee68be3dfb2b1718709e443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a078453d43d05177e81c10924fa6f747f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCoordinateFrame</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>aa1e87ad148fa24a61690fe6cfaa0e9ae</anchor>
      <arglist>(CoordinateFrame &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MeshAlg::Geometry &amp;</type>
      <name>objectSpaceGeometry</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a09936c4d0db4749f0744b2298193068b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Face &gt; &amp;</type>
      <name>faces</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>aa4a314cfbcd742881cf76002dc54e3b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Edge &gt; &amp;</type>
      <name>edges</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>aefc06197a2d5dc34a5e1907c2f6f46fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Vertex &gt; &amp;</type>
      <name>vertices</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>ab6ba8cd9058c8307d6aa41f5ad5e60b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Face &gt; &amp;</type>
      <name>weldedFaces</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>aa4a946f72d95908aab3d254e7707036c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Edge &gt; &amp;</type>
      <name>weldedEdges</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a9a6f6e26cac5d1db939df28dbc4b83b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Vertex &gt; &amp;</type>
      <name>weldedVertices</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>ac25454e08245784b9832e5c19d14a5fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>triangleIndices</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a431276ef606fe6a5bb7acb3b151d6c13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getObjectSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>ae8513412d81ce6a5f4eb644a3792a209</anchor>
      <arglist>(Sphere &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>objectSpaceFaceNormals</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>ac0c3575ae300d8d9b07ec1f52a4faed5</anchor>
      <arglist>(bool normalize=true) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getObjectSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a00a8346890b8d63c93f02ab652b08878</anchor>
      <arglist>(Box &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a4d5bb058fbc1e01ef30f71529d6fe732</anchor>
      <arglist>(RenderDevice *renderDevice) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numBoundaryEdges</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>ab7f0e96f108c9c3a69b5c58348d178f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numWeldedBoundaryEdges</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>ad021af4be3b15073e4caea71735ebe1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransparency</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a0aad3f5817990672a33688fec64a4d9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame</type>
      <name>coordinateFrame</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a8d52fea014cd6ec21ad4ac3678fa5118</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceGeometry</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a94619c6eebdb52c7416a3263518d8256</anchor>
      <arglist>(MeshAlg::Geometry &amp;geometry) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getObjectSpaceFaceNormals</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ae07fbf929fc0786b46b1c0cb5400776d</anchor>
      <arglist>(Array&lt; Vector3 &gt; &amp;faceNormals, bool normalize=true) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceFaceNormals</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a581a5ff63c52f6214817ef3e2b9decd8</anchor>
      <arglist>(Array&lt; Vector3 &gt; &amp;faceNormals, bool normalize=true) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector2 &gt; &amp;</type>
      <name>texCoords</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a10c825a582ff13371930f36f33c83c56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTexCoords</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a9a3365b6087239c46dbab98e802ad165</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>objectSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a912413bed7978f5b4584b3fe9a2b0c16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a0eec627974518211955124b7a511c161</anchor>
      <arglist>(Sphere &amp;s) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>worldSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a7c99db31ca45f53477e36a621e275655</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box</type>
      <name>objectSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ab0714bda8d51310f415a31d0830d5867</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>abecd332ec4f30d602962ee8c80ae4e04</anchor>
      <arglist>(Box &amp;box) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box</type>
      <name>worldSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a4c16223881689a07164c7d6214707705</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numBrokenEdges</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a46d948098f96bd94cc68d23325cb3699</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderNonShadowed</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ab059c79d8a1ac088a93e9e9472a25983</anchor>
      <arglist>(RenderDevice *rd, const LightingRef &amp;lighting) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderShadowedLightPass</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a0514771a9119afc6647b539a6b962313</anchor>
      <arglist>(RenderDevice *rd, const GLight &amp;light) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderShadowMappedLightPass</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ac895f4ed805952b3aee7ec4fb3cf6fd4</anchor>
      <arglist>(RenderDevice *rd, const GLight &amp;light, const Matrix4 &amp;lightMVP, const TextureRef &amp;shadowMap) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>operator new</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a35183814774edbb919e175c84f10cf3e</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>operator delete</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a8fb96e1fb42dfd33c412dc6fc4cd2f37</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sort</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>acc196a8a5c363f0f1ceeb4a850ab59ef</anchor>
      <arglist>(const Array&lt; PosedModelRef &gt; &amp;inModels, const Vector3 &amp;wsLookVector, Array&lt; PosedModelRef &gt; &amp;opaque, Array&lt; PosedModelRef &gt; &amp;transparent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sort</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>aa35c3908d8de7219b53315d9bfe1b316</anchor>
      <arglist>(const Array&lt; PosedModelRef &gt; &amp;inModels, const Vector3 &amp;wsLookVector, Array&lt; PosedModelRef &gt; &amp;opaque)</arglist>
    </member>
    <member kind="variable">
      <type>MD2ModelRef</type>
      <name>model</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a5f72cc80ce9834f41f5a374a47ac81a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CoordinateFrame</type>
      <name>cframe</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a3e3c89de6458f2904f70cb5da35f327a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pose</type>
      <name>pose</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a264ada8d7363683f2af81a0efcc21b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useMaterial</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a9a391401e375377b5724cad66206a7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GMaterial</type>
      <name>material</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>af4fe5dffa6d8b36b3bce35d461c838e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MeshAlg::Geometry</type>
      <name>geometry</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>a8b5a25abff0a601840e53620483ae7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Vector3 &gt;</type>
      <name>faceNormals</name>
      <anchorfile>classG3D_1_1MD2Model_1_1PosedMD2Model.html</anchorfile>
      <anchor>adad4e0a357a54bc83a81b7ed75a05d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>defaultRender</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a990f1b83e8f7364620dae88f8bf08e2d</anchor>
      <arglist>(RenderDevice *rd) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::PosedModel</name>
    <filename>classG3D_1_1PosedModel.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PosedModel</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a6788b94197440c25665a5cf593813924</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a09f05c33ea828178df86e1c68560273a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransparency</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a0aad3f5817990672a33688fec64a4d9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getCoordinateFrame</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a71d252392696572bc5af8b9aca74f9db</anchor>
      <arglist>(CoordinateFrame &amp;c) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame</type>
      <name>coordinateFrame</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a8d52fea014cd6ec21ad4ac3678fa5118</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const MeshAlg::Geometry &amp;</type>
      <name>objectSpaceGeometry</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a4f3663c0ed606f1670d156729c07de8c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceGeometry</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a94619c6eebdb52c7416a3263518d8256</anchor>
      <arglist>(MeshAlg::Geometry &amp;geometry) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getObjectSpaceFaceNormals</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ae07fbf929fc0786b46b1c0cb5400776d</anchor>
      <arglist>(Array&lt; Vector3 &gt; &amp;faceNormals, bool normalize=true) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceFaceNormals</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a581a5ff63c52f6214817ef3e2b9decd8</anchor>
      <arglist>(Array&lt; Vector3 &gt; &amp;faceNormals, bool normalize=true) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>objectSpaceFaceNormals</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>adcc43e86ebd4065f978ea5df3bb94f55</anchor>
      <arglist>(bool normalize=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Array&lt; MeshAlg::Face &gt; &amp;</type>
      <name>faces</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a34128704d87a7f7ad74a11f0e3220ae4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Array&lt; MeshAlg::Edge &gt; &amp;</type>
      <name>edges</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a68c15977a285ee15a983fd12ec34b635</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Array&lt; MeshAlg::Vertex &gt; &amp;</type>
      <name>vertices</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a6bf31bfead8b1a933c0e776ee2b860fd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector2 &gt; &amp;</type>
      <name>texCoords</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a10c825a582ff13371930f36f33c83c56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTexCoords</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a9a3365b6087239c46dbab98e802ad165</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Array&lt; MeshAlg::Face &gt; &amp;</type>
      <name>weldedFaces</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a0ab1ecd12b87813e12f477b0d9f5b8eb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Array&lt; MeshAlg::Edge &gt; &amp;</type>
      <name>weldedEdges</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>add6c5d30178c34b4f07026a66984d997</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Array&lt; MeshAlg::Vertex &gt; &amp;</type>
      <name>weldedVertices</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a35985b5c39855593197fc638b0b31d7c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>triangleIndices</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ab31d2365a692282f097e9a031d26ee0e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getObjectSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a6b377c95eb689826c681889299b3fcd2</anchor>
      <arglist>(Sphere &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>objectSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a912413bed7978f5b4584b3fe9a2b0c16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a0eec627974518211955124b7a511c161</anchor>
      <arglist>(Sphere &amp;s) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>worldSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a7c99db31ca45f53477e36a621e275655</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getObjectSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>aa0ce616ba7e90a8b0ba9609bdf4fd6f4</anchor>
      <arglist>(Box &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box</type>
      <name>objectSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ab0714bda8d51310f415a31d0830d5867</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>abecd332ec4f30d602962ee8c80ae4e04</anchor>
      <arglist>(Box &amp;box) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box</type>
      <name>worldSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a4c16223881689a07164c7d6214707705</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a5a8824f62fd3cf2105be1a830ffb8e1d</anchor>
      <arglist>(class RenderDevice *renderDevice) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numBoundaryEdges</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a62def1fc7d866d6c588401e7193864d6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numWeldedBoundaryEdges</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a442c20e4bcdad4ef8faab9a99c4cfaca</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numBrokenEdges</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a46d948098f96bd94cc68d23325cb3699</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderNonShadowed</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ab059c79d8a1ac088a93e9e9472a25983</anchor>
      <arglist>(RenderDevice *rd, const LightingRef &amp;lighting) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderShadowedLightPass</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a0514771a9119afc6647b539a6b962313</anchor>
      <arglist>(RenderDevice *rd, const GLight &amp;light) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderShadowMappedLightPass</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ac895f4ed805952b3aee7ec4fb3cf6fd4</anchor>
      <arglist>(RenderDevice *rd, const GLight &amp;light, const Matrix4 &amp;lightMVP, const TextureRef &amp;shadowMap) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sort</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>acc196a8a5c363f0f1ceeb4a850ab59ef</anchor>
      <arglist>(const Array&lt; PosedModelRef &gt; &amp;inModels, const Vector3 &amp;wsLookVector, Array&lt; PosedModelRef &gt; &amp;opaque, Array&lt; PosedModelRef &gt; &amp;transparent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sort</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>aa35c3908d8de7219b53315d9bfe1b316</anchor>
      <arglist>(const Array&lt; PosedModelRef &gt; &amp;inModels, const Vector3 &amp;wsLookVector, Array&lt; PosedModelRef &gt; &amp;opaque)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PosedModel</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a65567b99b9e3039bcb8efcca40a359cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>defaultRender</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a990f1b83e8f7364620dae88f8bf08e2d</anchor>
      <arglist>(RenderDevice *rd) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::PosedModel2D</name>
    <filename>classG3D_1_1PosedModel2D.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1PosedModel2D.html</anchorfile>
      <anchor>a65fdc8f060b8d81e01e5d78cbd6b1e88</anchor>
      <arglist>(RenderDevice *rd) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Rect2D</type>
      <name>bounds</name>
      <anchorfile>classG3D_1_1PosedModel2D.html</anchorfile>
      <anchor>a7a1dbb0013f31b6876344b01bfc7dada</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>depth</name>
      <anchorfile>classG3D_1_1PosedModel2D.html</anchorfile>
      <anchor>aa7139fb6ae07d1447fd9baf93e515473</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sort</name>
      <anchorfile>classG3D_1_1PosedModel2D.html</anchorfile>
      <anchor>a60648b776c35e833bde817fc7acef2a8</anchor>
      <arglist>(Array&lt; PosedModel2DRef &gt; &amp;array)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::PosedModelWrapper</name>
    <filename>classG3D_1_1PosedModelWrapper.html</filename>
    <base>G3D::PosedModel</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PosedModelWrapper</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a98cbb8a8fcce9ccabededeb2b24736f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a1b1f64f793b531b6aa418bdcc79a7895</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCoordinateFrame</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a1c42878098f5150cd9748febdec773dd</anchor>
      <arglist>(CoordinateFrame &amp;c) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame</type>
      <name>coordinateFrame</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>ad28576178c47cae39f788c292d875e2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MeshAlg::Geometry &amp;</type>
      <name>objectSpaceGeometry</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>aee923234af83465a98262c52a58d148a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceGeometry</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>af50c2f82c3632bba28a72f38addd0333</anchor>
      <arglist>(MeshAlg::Geometry &amp;geometry) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Face &gt; &amp;</type>
      <name>faces</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>af5582ad7b668c719c75d3388548abefe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Edge &gt; &amp;</type>
      <name>edges</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a1ebc2ef91dee4d69a8389c87bb0ec24b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTexCoords</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a9289ceb6c10984ee24939011d55e6dcb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector2 &gt; &amp;</type>
      <name>texCoords</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>ad7d41f57b1def62082ac8819d89ef05f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Vertex &gt; &amp;</type>
      <name>vertices</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>ae869deb5ac2458747309ca9ed71b4708</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Face &gt; &amp;</type>
      <name>weldedFaces</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>aa9a8f82428aff72e26bed4c62edf807f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Edge &gt; &amp;</type>
      <name>weldedEdges</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a8d8fe91745e5bc5ac9af6e2cfd5c20a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; MeshAlg::Vertex &gt; &amp;</type>
      <name>weldedVertices</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a7d4e419f17b0a55be4974d22ce721eef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getObjectSpaceFaceNormals</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a18ad39756cf0e071abb0d2d50e80f5a1</anchor>
      <arglist>(Array&lt; Vector3 &gt; &amp;faceNormals, bool normalize=true) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceFaceNormals</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a2dafa9bbda10a3d1c8b908f5c552135c</anchor>
      <arglist>(Array&lt; Vector3 &gt; &amp;faceNormals, bool normalize=true) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>objectSpaceFaceNormals</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a78880b09360feeccc2d5724cf19b7e1b</anchor>
      <arglist>(bool normalize=true) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>triangleIndices</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a66acd8b0db1259167ea1beef8f851547</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getObjectSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a7605864ed49f658781f0478652b34cde</anchor>
      <arglist>(Sphere &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>objectSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a4bec68fb764a0012d3e0417c0971cb9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a2ba00765cbf1adf0405a763a6e534465</anchor>
      <arglist>(Sphere &amp;s) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>worldSpaceBoundingSphere</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a97bdc824e7afab8259c4146496dca5fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getObjectSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a7fb256846a26ae5f669f0345cc4e35ea</anchor>
      <arglist>(Box &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box</type>
      <name>objectSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>aa5f7e5a07d05d4ec6a6d817421d9768d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getWorldSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a94c6c931d35340fd1f993522cdbb7808</anchor>
      <arglist>(Box &amp;box) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box</type>
      <name>worldSpaceBoundingBox</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>ab8cbe9768df5ac3f661b9be927a6e7be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a35777af1beb5c033ad80728627540bfa</anchor>
      <arglist>(class RenderDevice *renderDevice) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numBoundaryEdges</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>aa54d99046f247bbc748549095978d944</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numWeldedBoundaryEdges</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>ae422ec858605d8fadfc55291aaad6909</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransparency</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a0aad3f5817990672a33688fec64a4d9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numBrokenEdges</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a46d948098f96bd94cc68d23325cb3699</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderNonShadowed</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ab059c79d8a1ac088a93e9e9472a25983</anchor>
      <arglist>(RenderDevice *rd, const LightingRef &amp;lighting) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderShadowedLightPass</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a0514771a9119afc6647b539a6b962313</anchor>
      <arglist>(RenderDevice *rd, const GLight &amp;light) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderShadowMappedLightPass</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>ac895f4ed805952b3aee7ec4fb3cf6fd4</anchor>
      <arglist>(RenderDevice *rd, const GLight &amp;light, const Matrix4 &amp;lightMVP, const TextureRef &amp;shadowMap) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sort</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>acc196a8a5c363f0f1ceeb4a850ab59ef</anchor>
      <arglist>(const Array&lt; PosedModelRef &gt; &amp;inModels, const Vector3 &amp;wsLookVector, Array&lt; PosedModelRef &gt; &amp;opaque, Array&lt; PosedModelRef &gt; &amp;transparent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sort</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>aa35c3908d8de7219b53315d9bfe1b316</anchor>
      <arglist>(const Array&lt; PosedModelRef &gt; &amp;inModels, const Vector3 &amp;wsLookVector, Array&lt; PosedModelRef &gt; &amp;opaque)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PosedModelWrapper</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a0219b4ad9271c7d8ced01da3b58957db</anchor>
      <arglist>(PosedModelRef _model)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>defaultRender</name>
      <anchorfile>classG3D_1_1PosedModel.html</anchorfile>
      <anchor>a990f1b83e8f7364620dae88f8bf08e2d</anchor>
      <arglist>(RenderDevice *rd) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PosedModelRef</type>
      <name>model</name>
      <anchorfile>classG3D_1_1PosedModelWrapper.html</anchorfile>
      <anchor>a483cb6c67b77452a7cb18e8819f493f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Texture::PreProcess</name>
    <filename>classG3D_1_1Texture_1_1PreProcess.html</filename>
    <member kind="function">
      <type></type>
      <name>PreProcess</name>
      <anchorfile>classG3D_1_1Texture_1_1PreProcess.html</anchorfile>
      <anchor>af21a27754607220c8a5606b82f55e0c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PreProcess &amp;</type>
      <name>defaults</name>
      <anchorfile>classG3D_1_1Texture_1_1PreProcess.html</anchorfile>
      <anchor>adab5bf207cc59981fe4f36f076927714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>brighten</name>
      <anchorfile>classG3D_1_1Texture_1_1PreProcess.html</anchorfile>
      <anchor>a48bd8856415ee2f7aa5b65343253263e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>scaleFactor</name>
      <anchorfile>classG3D_1_1Texture_1_1PreProcess.html</anchorfile>
      <anchor>a7f0fe194c52b5b64511af6c06ce3efb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MD2Model::Primitive</name>
    <filename>classG3D_1_1MD2Model_1_1Primitive.html</filename>
    <class kind="class">G3D::MD2Model::Primitive::PVertex</class>
    <member kind="variable">
      <type>RenderDevice::Primitive</type>
      <name>type</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Primitive.html</anchorfile>
      <anchor>ae83acdf12e4dfeb545193ddece13bc88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; PVertex &gt;</type>
      <name>pvertexArray</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Primitive.html</anchorfile>
      <anchor>a03daf4a70f507e94c5f26ca5b1bfa604</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MD2Model::Primitive::PVertex</name>
    <filename>classG3D_1_1MD2Model_1_1Primitive_1_1PVertex.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Primitive_1_1PVertex.html</anchorfile>
      <anchor>a5696c974189600307444f71af1d30f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector2</type>
      <name>texCoord</name>
      <anchorfile>classG3D_1_1MD2Model_1_1Primitive_1_1PVertex.html</anchorfile>
      <anchor>a26d60c19b95f6442d0bb01bcaad5689b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Quat</name>
    <filename>classG3D_1_1Quat.html</filename>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3f44a4899d9eb9fb349a587295a13b7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8717455910f3ba29a76f3c148e9941bc</anchor>
      <arglist>(const Matrix3 &amp;rot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab1ead95b289c0cd74edcdcee7080e8ed</anchor>
      <arglist>(float _x, float _y, float _z, float _w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Quat</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2b4df068a2f48af933ab30c5c205d985</anchor>
      <arglist>(const Vector3 &amp;v, float _w=0)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>real</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a51692dc93d2c96109c14974ff98a93fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>real</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>acab390fb989a57b141873c11db7baf7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyEq</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3f40287732a84279f4c7ae44029b22cc</anchor>
      <arglist>(const Quat &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sameRotation</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac142adb3801219ffa8a832470182ddfe</anchor>
      <arglist>(const Quat &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a33952c8420fc9fb41bd12050d51d2f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Vector3 &amp;</type>
      <name>imag</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af84def670c8ea2ec00cb74dd19ded91d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3 &amp;</type>
      <name>imag</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af176b274f87559cece0bf7f6959ad2f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toAxisAngleRotation</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a60e7639fa485f7d4be4f3521e0854521</anchor>
      <arglist>(Vector3 &amp;axis, double &amp;angle) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toAxisAngleRotation</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad55a273e9d54650a9b5da13ab594b8b9</anchor>
      <arglist>(Vector3 &amp;axis, float &amp;angle) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>toRotationMatrix</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adf5ec5ef14fae29d5cb6a3034723294e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toRotationMatrix</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad34c0938a36ba3c05352f488d73c3546</anchor>
      <arglist>(Matrix3 &amp;rot) const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>slerp</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a315def5f6264dd93c0fe9c00b3db17b2</anchor>
      <arglist>(const Quat &amp;other, float alpha, float threshold=0.05f) const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>nlerp</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac0d6f4d5c0cb4d6d225f2569f02a2dd1</anchor>
      <arglist>(const Quat &amp;other, float alpha) const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>conj</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af25a2ecad92d759f43d0817a0db84495</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>sum</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab0ff472c38c17539eda02c681da188d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>average</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5f19d05adf4bb4147abf6d6c2726472d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a407459965fa58f603d76ff68ee507b06</anchor>
      <arglist>(float s) const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afaa2e1837b01d9f874c3b1d4c27e2fe3</anchor>
      <arglist>(float s) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a75ebb89e6ed456398e614774a7df58b7</anchor>
      <arglist>(const Quat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>inverse</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9f1f84517463a2cfbf8a3b87b164b296</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a88281ff34e45b6cd8660ee707fdef8fc</anchor>
      <arglist>(const Quat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>operator+</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2bd9a721efad247c93cc458cf2ff41af</anchor>
      <arglist>(const Quat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9613845a80a5985a007ce313ba74c7ab</anchor>
      <arglist>(const Quat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a77341daa0525279afb92bc01e40d2a42</anchor>
      <arglist>(const Quat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUnit</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2fac597715019a8aa91a8bd84e146594</anchor>
      <arglist>(float tolerance=1e-5) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>magnitude</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aedbaa52977c14b025e7beaf14ffa9f0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>log</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a35945447cef10a9516485f2aaff3909d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>exp</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad99a0db67e070c83aa2237bb887d8ea8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>pow</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9cc3f36f73d48a399a5ada5cb089851b</anchor>
      <arglist>(float x) const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>unitize</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aaf78e23c419587a970d321cb58082f2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>toUnit</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab8f25ddd5bb422ecaa58a67c9320399f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>norm</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adcf6dcfb14f4b8f6d035ca3264e43246</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a68931dab1fa9634d6868df43dfde063a</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afdd42c6deb226c350444b0a5c9b4d6d7</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6a1cb6aa06e4a193695e24daf9f330b0</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a521a7e6aed9c63028e486c482b641ee1</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a1af4f3dd2dd6591711fa927e4c88738c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8b5d89c74488e1e5192fb65405aa633f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a117b633fbdc71bc1c5918234173d0e50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>wx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8e7698e496b96da7222fd408538d4a08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2de458cf750cb1ccac7674591b210326</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad5befcbc8d6440f23a35e6eafde1cebf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9235898c90e4d35ac6ae1d295cc27e63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>wy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a131f012555003fc6000a405e7a1bdeb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab40673160842451df0d31c02641d8bcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a378a4cfaf0c6002bd20615971eec4825</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aca3c2313a0e41f99d51a90a1e455bb51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>wz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a7b08c876f440132ee9ed8367e9caa360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a74619d9ca4c5fa7e5adf4f655611ec80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a42d09579b38e5b787c9d462295114e8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad980b2e88de001b48237558c527bd8b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>ww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a40eb56c6ff1b69e9c56e21b8623d270a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6ab2580fe36a5f64f26e844004b05ab1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aadb532b57db3209e49ef80d1d0a7dbfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af3c1571479713f2baae1382180afaa3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aaedb28f1d189dad12905641c3eafa71b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a62116ae77bc79e860cf0e14da6750e3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aac27fc454b73b827e54da27569bc267b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3b5e7de6eaffa05957d806be62bc21d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6889633007278478ffe4a3567d845aef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae8a90ebc8673a1c46cf6d866e6b96235</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>abb2fd0e2c9a6666663c92836e12f4bd0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa480da6f87cddf843680c079d5bcbcd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9a29a2fee2264bede956e18698f3f4cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>abb97114ae7b36165a73b22cc06a15b9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>ywx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a749b5e8454d91e6b71a39334b29badb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac17c2366c7a996648f60ccb7fc6a6950</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab9ef6c44ee6a619dd461abe46cc97c3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ada8496b0c1defca52d6d11b05d00cfd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac418a774ad166c410866e0071e6ca30d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9b6616bf820a49e562d9867ef2083166</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a047e90838a4d001ee9f3f2ed64debc9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad30059b3ccdcc6bf090bb04fd53819a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0585272a38995e3aafd98d17e6f02d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac4e63802f6dacd853fdc1e1c6894ca96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aaf6471599b7e24998851986c625bcf34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aad127ef8251881d20617975066fe24ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a097b8b3623c4792ba20711662058c6aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a7af8357dc7321c7130cac241cd3baa68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aef5cf316f7f08c08b5d24b5e0c964f5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9b04ecf0b505ca3effa699bbc4d7b10d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>ywy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9ff2c31e57c1e10b2749d107c18a6b1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa4a2450cd6e48a578d2db7b4436ac5e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0fab9d35411a57ae09eeec26cf2284b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa0413219be3e92d9b82ebcd7cae8340b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a1f62b2f5c1b5756aa360e23d57ae6b07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af1ed4d712d5138069387c60e7265ae04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae15242e6d40b299d2a00d2d8d78330a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa5f1fac5bd62396d93f27c1585ec336f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a40d2e5dc7f7c636cc03706017fad70a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afa7602a625127fa6f0cde3052d609eb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8ad9385b598af4aa8e0b4eace685753f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5846cdb490fcae5103c09d56ce830558</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae1ef369981767c2a463ebcf43256d044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adc92f74f43c3b8890e2d1443cf6f3fa9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0e093809907a9684af3e31f35ad4bbd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4c8083d3b2b1e1479f2b6c92568f15ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>ywz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a60c92d54deea16778a6e947a916e5c9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad1e2c691ef5eaecce50665fed5459229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a69ff8ae5c44ce98bca44492b9db84a72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4bbb89f9fd7620bb75655741b1c20ba8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa300cbf994bf61b09fe92b57df14a3dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4c39c706734383f570e8eee38c2d2824</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad5ed0418d5ac1070e1cecf1fd3bae328</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ada2d5d74d0f0b1ae9847a347d577a106</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aea995fea998cf60291c1715e18af1441</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3bc8ec4c113187fb442a8fff95b5a5ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a1e2f2ad3c34d55ecaf08e3b8698eefd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af385407ccd68e17da706d1a48174b4b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8e3569196de8cb25a1b2d0232abed772</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a61c536bde27f30571e5ccb08ffd62bec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8f942998d11b168e105cd6487e35e257</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>acac3dbd263ae350abb15eb1fc447e1b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a132c4985f1c141bdd86954bb09590223</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>abe6b86a26a1127679abb2643aaea179e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>www</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af864958bf7074dc731f6d22ddb36a156</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a251df6d640b9e8a52e94c6f643babdd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a64b214f9a2e571c2ff29bdb1cc232c1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aaf4c33fcbf8862b5bde60976666e57d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a45f783e937790ed170c454106cf74e6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3e33cd7d507ae9765cc6a7d41d924b0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2d9c8b36ac14f008e56c26e3e9a238e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0365048e6826eb0e1815037042ce0b52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4c4cd965a564c4ede95d045708a3b149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3231f7d6a5e089978322e65209513708</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5b9f5331bd6f9f98d675fd1f5045c217</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afa91ab36bab7e58907fe8818440b56ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa404787789cfc96bc1b2df4c5b0f2f7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4e0d58c1bf835acaec3cc21e03f6d860</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4af638081b244c87d3d33c8b5ec486a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a89051f7c2c73ffb60b7d6a0073de9f47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwxx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aff74be7ba5cb44b947d9d91bc3bcf455</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8f4c670e1ae47d9b90b6b4ac7c5176ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac6074930104fc8012a55e9bf223fa792</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a833f8d70524734072e3be6299aa0de54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a71909d7a68291ab532ae2937753f9cfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae2dfe1e6820870f5e2e276767327e3c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adcea22ec3d784e3fb5099d5b07577e48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a83c58ca9c7c8f32038fb3439c455008c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a24173b8262e07db868d8f78a816f0791</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9e4bbe04ae2299c4b48699034a0a4403</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a349e2b921122d63feb6210c4a86d9d2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3465a117cabf7cdcf6d2e94b7b731663</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4d8701f7b22f8209be9bd5d810366584</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a005f63e4475e20a8c9f5ea92c1335090</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad9fa6846b9aa7494c7df7fecd02e9685</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aff4814fa27e4e044d5efb57eea53d9c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwyx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a97d7af90a374d7bdcfb6c13b70297978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adbb0a17a40122d7def548550ac16faef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a015a057821dbde5fad22f88eed428d83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6be5b5181aee37f8c345f72be450b41e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a39fbb97c8f501fa8b589aaeb376f910f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad497c6f4c1403507fb002e300c9c467b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9678738485064020004bf9e9341c2e3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aee66c3fe227fee75cd548c7d768a461b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab5e93f95c3faeb0f341a1d1e8c87fcdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adbd49edc6241f8a89b78abdee9d03fbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab34312b7a26b550f20b4aa2f217431d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a925e90a930a6688330eb7dee42ef9db7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae8dab5752b2f67cd6d942aa9408bd10d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa4ce934707e81b57955473489877a70b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac4f7877578e7da7419241c973408b541</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a543e26fc0854a9d059401c091625f4cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwzx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a16ab8dd492a911b3eeeb39835fdb781e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af39ec507015d4b43df53a28d26f5026f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2b21719e709eceaafedfa4add6aa1302</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2a63dce8deefced1791964a8337bd44c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aee48f9628965bd00208651eee6b48cc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xywx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af7f1b39ae7762f7306b08f4e57cc5895</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yywx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aede3ae28e2b1410ae9cf8b4889ed9bd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zywx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4c33f68910466c6456b0ea737f9f137a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wywx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>abf75015f2045df30e414ae714300a2c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa3eb5973350d5e05ed189a1029a438c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0ba56fff9b55077d7cf59a662123f74e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adee8b8bc3739a0400bf18bacc55de7f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4ec202c1d46453eb556b76a2f19043df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a21cc1caf6fc1cfde82a74690f4842e92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aab496f9926541f02b5fdb75c5eb8605d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae581d8324e7b25371cd56cad823b8930</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwwx</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a50b96d20b7ab1d669f9e4f9c95830ad7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0988f025f00b63362a0d770791ae0e65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab45e43c5a69627b7fb3d53fef6e352aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5bb6ed43b97b4a51e9056c5a7ce5dcd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a1732e5561c988d85d03f52e9cf5cd22e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a98f4d0384ebf26da4c798e6d8174c324</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad47e54596cad80703871fbbb27e568b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8ef24a3d6abac747c1512c59d2f46c27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a79e59b49930fab6c4173df56dcda250d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aac173f6a36193fd2957abb653aa52243</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a82365296471edb6bba3e8a353d223b71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aca9a439792e51444d1fd20d47ee488e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac4d9688dc363a325b9f0abd2b451f006</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac19ba8584198df2d28944e3c2233b2a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6d009a082679d5d75c8ac9b3da3ba7a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a735f6eb798556c8a996a0a7c6eebd690</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwxy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab6db113ba76e0cebbfdddaf499033d9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad16d242fe18dfc4800c81fad63ce1d96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a645de0fc6da89b048a3c05e3ce8935ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a50c0cd782c2ac0a13c850b052fc6a2b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a30a82db2ab3bf7d7d2793be1e795af0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a942b89555c78535348b3a4b5e797b60e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a072908662e6d355000ee049c9171f0e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aef3d2aed6ba78ac351085b8f1c1ba9dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0ca8660f5c5a449cd9a65c8d519ca600</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a806f72108af7967af041edb0b8be8023</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad639ca7413f7c139921c245698609cee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a59f619312042646aeb89a582e22d3c8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a7bb2049725340aaff3f2abe2f2bde201</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3c90f8ea224695add5fd4483d69e032d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a033e13c479b2f57e9ec09675db91e3f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad2f61c3e82a61796c5c635be25476a6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwyy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0bfb8a21c5ec231c63ba29316f79b7b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6641f52ca3fcbc74ddabf8cfbd170690</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a1f62d9608e5715965d4dca5a972d7e83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a15ee7d774dff9a49cbff0d3210ddad69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aaaf4ebc9fbb62e3df3078c954cbf329a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac4077ed0d24b02412b0e2b1b1928e1d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae432179f4e0d690a824e1d3a75a12bef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5b8fec1739a33e44ed14c796411fd334</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a80c8e92f994ea596b68631c686cda1cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a7f9c8e092eadcbd345e16f7b7799cfee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a83ba805bea6bcac9fdd2299fd27f8182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad7a08f648b0baa75554b1ab023e7af56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aaca393728005ba4fc1b6955a75b189b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0ec059663775f02d7888ef0a186be383</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4fe80bb78ef9431d02c65401f4dd742d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a99b8738a2aa72187c5d08f80afc057f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwzy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8eaf12eabf810f2ef65a23fc3130dc1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0d557db99637abdda257e65f9ece03c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a879b232279f09ec8aa911d0f2a83e2da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4bc6836d552ed9b59eb0c423a342f1df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6c7ff31847298c08d6216a340692634d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xywy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a67f41f459edb63519653e62f0c7bcf2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yywy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a62226bf2393dad147cfe153a20e8c80b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zywy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aad4f264b8de93b0b9fd34db1885ad17d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wywy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afacbe2e2ee88c7ffc04b2ce530a02430</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac1c0c5a07a363bcd01497ef9977179cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a654b75af485ad6aa5577e3bfcc9df478</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9bd3cf97e1afd72a9378b036c0b6370c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4f591cd34ab4c09db745007103cadc7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae4e692d840a3ee1ade1643a5830794b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac5ec61f9d7923b05dda339f25f7d0d45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a23c73d15a9a4a4b40a02c741df6a0655</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwwy</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a88ff9cb9d9713338c04ee3504a8dfb39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a7d83ac318c59cbb2411ebc0392272719</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a15f8cb9577de85af9d5bec6cfbc229bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3582d1bcd1870b913828ec95cbb566b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a053a2d50dad4453364fa34dceed47a71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aff7052a007ccf6d12384ef2ee749aaa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a86deaf19908f5e3958b7b1d2faaa7eee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3191ca80ba34c2425d5114cf755ae19b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a24a1ac8da936da14f8e962993795647e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aeda15efef7082cef9fcf58bd810937bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a92ad679e6210a11be87308ddf03b55e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6e8a3afc5c9d3ff251b17ae9bce60e49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2df6f1631ac845cd5049acf5dd59026f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afe48a7bf17513a2eb6e832948d6e0a1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6219812ef8ed64874db92ff835c6b175</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aadc8563ee99d50e02b76411fa1f271bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwxz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae392e4432d1c4d7fc5757d10a32984f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a04241123e63663e5473755d601f5c1b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac485054b6e1c5e186db0cb922cd56cd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a241ff9bf38c802355dcc451a28fe2e09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aedeb369890b9be73983bd05ffd98af39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a92acfe113178c20767d0d659010e1215</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af629e7846da1eef6dadb43e3e1e732ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a98dc2fb0b0c201950988969dcedacf93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a661a1ef9b66fdcd1f0a30b6e83453c5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac14b87b5e06e1c3584c09a0db4143f56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2a08c1b414cc2789c654547e470409e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad5872e3928e0999baa5b77e12dcd9c9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a72558ac4c4946c7903f8dbf3da5d396c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a1524c5a01ce320fb9be367e9e4b30685</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ada1e69d56210bc8e09e22250f87b1121</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad6f6c2dee07d0fee51724d7c0cdcfc7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwyz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a68f21fc34a2a4face69530d0482058fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a22986913d3f7fe85a349e0d73cbfea66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>abddbe465d383b7f575fa086a587e4cf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab9f52f92ec932c871d00a642ad906c7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aec72184f9d78570ff2840fada46bcfaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2cf4568a6db574f7951b3f105c6e9913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa533389d06e808aa9b6f558d31225d95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afff346d5001bb0e698eeddd6a862a8e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa647cecbda879afa7f8d71b52897714f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9dda4af52fd7539acd998047d11b98d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3514c59343b4e7f8b835f22c4914ba24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adf732b93b855c9d15d34711a9c57be65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aea9b58647cf9551d8e02d1eb4172e7df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adc1d3df62703438875a20a0f8c2aca88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5c4612f792c7c9807410218ddc01c803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>af18ca121514bbfc6d649fcdbeff746f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwzz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a89ba2fc763685d57da16159e737632e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a39dbd20a2762fd9f3d9cf37d883e5280</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9ee454948416751af3dc2da0720ee9b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a1386fbd97f8bbc89dcc5c3e0f8a5b51e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5e14f0248bbe2fc7d01b65e1ab08a43e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xywz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a789192841ad11d54bd71a99ac5d194d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yywz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a56f242880884db4a4b23cc1c4ee07f3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zywz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a204da6a656b3fff46e8f21d46a0ebd9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wywz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a37c11d1035a5fc63f93264064b8e8b69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afb902cf048e6352a56b31283ce139133</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad350df055497c04ecd1f6a0b6500a40b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a7a3057e22274d50d554ad6aab1a10516</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa8fcbfb374508e8e4e469b15210ff1df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a402360a91dc50832533f2b18d654dc1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a468fe71cb408df4733c6493ed322ac90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6611e4256661ad3f5de248e0d1c294aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwwz</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae566b33f9cc7e779452eae04da41d391</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab6318986f9d81db7c586fbd46cb86429</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae549f1c59bb3fc0f428ce88552f8b70d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aba3caa034546ba6cf5691662bad8b6b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a702283398000fa2f839f1b21d99b0841</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2a7d0d47ecfc5b060c45df6729a8fed1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5598ec6400f9d9a4fe79e4a9460eeec2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a155d98f09ef07288e4f42fcb40fe8f07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9e663019fc3973a1f8fdc5b4949f6cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a08830fd2544c2c57ad1f2fc8d5ae09f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4405360cc3d60211890ac225cc0cae5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aff69577d161e00ff952dfd2910d2bb4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a44b5a18c9f28b26104c010291bb3dfff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8ff88debf627952d4854a016f89aec71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad66df0af40900d86e0031ce286e3db42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a1b9c6c77dad3e42394b9d25d6238edb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwxw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a63558580a6ad2918e2d05b282dc743a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0a423da232b4ff3edb6b5b8cf993cfbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3fdd23734fa83cf89d5ccfde385935cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2891f9225b1db81267e136215240d47d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6eb176edc3e042f1262ca7f09250fe8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a13df03638225a630e19a56c69a9e5480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a46b0f6b3d1182ff93e026e8e3dca7327</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae8bf868beab91013c09e066461dcd8f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5649a4003a2007d832bdc3427303e0c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ac18d5da1031591f3cd273f238d969204</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a825227cc9a22ef9e043cec1e6a8ac856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a3cc6c2d792fa611fecef6bcc9af8c36f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4e65189776a6360940c575b6ed57273d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a7772bc30807d9cf0a10db15ecc873880</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a61ea4a758e69a929fb1fe26d1fd3cfc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0ea39b4ecf90942ae77e75fff4eae437</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwyw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4447b72007be3a351783d810cbe08b8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0672b6bcbb0557f42bdbaaf714278650</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a878e2b5906393baf49046a911478dc25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a1a4403f303a452beeb1bffe2822ddc6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a92b2a31dd94411ab6de71ffd70776e30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afa4f1fe3df1e759d706e1b4f6d3f8487</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a540b0f87158f8ce431bc2b3b30a0354e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa976abef282ffb3dfef58d04e3c1825a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ade46c910f52a3cf5a7b8a7ecb8ff1632</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a880fb732830da4c6f02b09ae08563dbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4c1fb71cd9d1f8f38b51384978c911b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ad9e86b4d7931e7fcc0e997dd26a94b9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ab8f2f170e07627bb453f77e348c52389</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a9067ced2b2bf311b6746d20d3006a472</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2390f7791824687bf7feda76d8ef06ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a179d8f749b57c0f7dab85e7ceb104189</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwzw</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a41fc48fb47aed0df11f4d7b34986f1a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8589c5d4c460cb69c8a95f7fc5f7b70e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8eea492056012c57da859090ef0e95c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a15d35ad281134f2e316da4a966fc6b7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8493df3cde58da801f1d83ac29f126c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a19950ba722bc01f669985926351f14aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>acebb1569fce5bae92e8d4a3403a51c22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a2bc4ed06453735b145da113f7f3e758d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aa56df473111260d535f5910153dc114e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a70d62b3401c96d91b903a45916f0b8db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a862f1d8924df5ae44aa5d1d9d96ab2e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae033890a1d4ff1ee8bccc3e1608383c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>afd925050e692276aa0941669ebf2b2bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>adf6c7fa5f358217dd865bacced6fdeae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0cce462f581d24bf77cae3b4671c9ad7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>ae7d0cd7cdd67552e2e3e865a2f9f2259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwww</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a6f787b8191c618cf56bde5b8fd5a3aa9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>fromAxisAngleRotation</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a8c3eb99ffd5994a1662ad4949773998a</anchor>
      <arglist>(const Vector3 &amp;axis, float angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Quat</type>
      <name>unitRandom</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a0947d5d022945e62e84bb83e64dc3b83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a378e8613aa54dec6e707c1f74aa41957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>aead562ce9e503f9b06204b198f78cbcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5c99c76b8c89268b0eac196bbabd193c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a5fb13986a577a62676b939e54a29640f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend Quat</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Quat.html</anchorfile>
      <anchor>a4789fdf8c945880b50876a36ce12e54e</anchor>
      <arglist>(float s, const Quat &amp;q)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Queue</name>
    <filename>classG3D_1_1Queue.html</filename>
    <templarg>class T</templarg>
    <member kind="function">
      <type></type>
      <name>Queue</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a6cbc702337e43ae5ca73a9896c74286c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Queue</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>aae65d537677ca0e2f8c70a36473e545b</anchor>
      <arglist>(const Queue &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Queue</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a1acde02d4cbf621630755176aabc6514</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushFront</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a02d422e0b4305bf206ba37c6ecb005ce</anchor>
      <arglist>(const T &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushBack</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a0021bbe73821cc9bdc3351ab309383ff</anchor>
      <arglist>(const T &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enqueue</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>ac009bf2f73affb3099e33c073fe491fa</anchor>
      <arglist>(const T &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>popBack</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a07820825a1b6f4f8d05da8db7792663c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>popFront</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a15a6f47bedf048fdad9f50fcba3e45a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>dequeue</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a65231e4882aa2db876c21914efd8d979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a7c5292cc4b1e55cf085eaf0903bc9e64</anchor>
      <arglist>(bool freeStorage=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fastClear</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>ad44b3ab16278c7ff67ea2b69b8efa5a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Queue &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>aee24d455161112164d019f84ed80f2d3</anchor>
      <arglist>(const Queue &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a5c3c4833eda6f31a37854f608afd3e28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>ac7d6ca090f921e516a8367534de2426a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a8ee1c27c6fe64e7ff997c4886f013158</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>ad2aed7395c480a8cc35071fd757821aa</anchor>
      <arglist>(int n) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>a05235ab8d3263140991a388318cab634</anchor>
      <arglist>(const T &amp;e) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAll</name>
      <anchorfile>classG3D_1_1Queue.html</anchorfile>
      <anchor>af13c86c30da9cacfadfb9e94c83ffccf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Ray</name>
    <filename>classG3D_1_1Ray.html</filename>
    <member kind="function">
      <type></type>
      <name>Ray</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a4dd8ff8d5291cec9a4492ae7b7098190</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ray</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a98b43bbed86a917d62f1b10dd8c2d61f</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a0a8e4e3f43d64236accbd24f344243f6</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>abd19350464bb6552ee1975180fb174c7</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Ray</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>ab191e43cacdb90d7c6c640c14c19403d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>unit</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>afda9bbaea60d3c37d2bd388ee210411e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>closestPoint</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a7ef1ca6157d3162e66d86bc2296ccb14</anchor>
      <arglist>(const Vector3 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>distance</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>af043a7c1ad093d5cce0f69cefe0e0df9</anchor>
      <arglist>(const Vector3 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>intersection</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a99bad836f95d109108aac17f6bd451fc</anchor>
      <arglist>(const class Plane &amp;plane) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a98e1423cb2ab4382c448208d5c2a0f4e</anchor>
      <arglist>(const class Sphere &amp;sphere) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a4a7d84f5806c72f7585af2c3a8bd73ff</anchor>
      <arglist>(const class Plane &amp;plane) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a00fd2cc3ccc83077c501dced72522484</anchor>
      <arglist>(const class Box &amp;box) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>ad246b2a9260f26e210c9ae9dfb59eab0</anchor>
      <arglist>(const class AABox &amp;box) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>afece04947f6b9eb0179165c3f4dd134f</anchor>
      <arglist>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, const Vector3 &amp;edge01, const Vector3 &amp;edge02, double &amp;w0, double &amp;w1, double &amp;w2) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a10ed25ee94c4848f0303711022c12866</anchor>
      <arglist>(const Vector3 &amp;vert0, const Vector3 &amp;vert1, const Vector3 &amp;vert2, const Vector3 &amp;edge01, const Vector3 &amp;edge02) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a78be8207e56d9ebf2703b49207b78022</anchor>
      <arglist>(const Vector3 &amp;vert0, const Vector3 &amp;vert1, const Vector3 &amp;vert2) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>aa00feaa95b66cfc09244c97af3066e8c</anchor>
      <arglist>(const Vector3 &amp;vert0, const Vector3 &amp;vert1, const Vector3 &amp;vert2, double &amp;w0, double &amp;w1, double &amp;w2) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>ab3f468821111e91fb51274574a9108d2</anchor>
      <arglist>(const Triangle &amp;triangle) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>intersectionTime</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>ae1e04c8c887682156b0fdba3ef80a0df</anchor>
      <arglist>(const Triangle &amp;triangle, double &amp;w0, double &amp;w1, double &amp;w2) const</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>refract</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a1ca6c387bc137e20ed82e688e48aa815</anchor>
      <arglist>(const Vector3 &amp;newOrigin, const Vector3 &amp;normal, float iInside, float iOutside) const</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>reflect</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>ac6d40da3e8b690a7a31220bfed9ef0d7</anchor>
      <arglist>(const Vector3 &amp;newOrigin, const Vector3 &amp;normal) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ray</type>
      <name>fromOriginAndDirection</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>ae48d75e81461f3af0d62e34da17d556c</anchor>
      <arglist>(const Vector3 &amp;point, const Vector3 &amp;direction)</arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>origin</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>aabe70b92b46e7049706c39d2bade972b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>direction</name>
      <anchorfile>classG3D_1_1Ray.html</anchorfile>
      <anchor>a225c9484038eb194fbba5240091da2e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AABSPTree::RayIntersectionIterator</name>
    <filename>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>RayIntersectionIterator</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a0f09fb4a7b00cbc319f41b7add8c3fae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>ab4e8ddffe1187dd0e145b5823a5c669e</anchor>
      <arglist>(const RayIntersectionIterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a9456edc888ef5fa7099e352209614775</anchor>
      <arglist>(const RayIntersectionIterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markBreakNode</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a8781da9adf3ee08aa9f694c5485e1643</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearBreakNode</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a41aeb4c2b8c333c93e33527e021e6376</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RayIntersectionIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a27307f557b7ccddc4ab53ba00499b41e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a89f6ff7c39ca33eba459bebf157584b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T const *</type>
      <name>operator-&gt;</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a6d228ecc6d30fb2f1f38c1a30ec5f2fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T*</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>ab61ca566eef30bfccc03b72f6e4f9814</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minDistance</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a2550329eec5b1cec1d9fa656df5adac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maxDistance</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>af3db9376925ed944a16577cb00a7f766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>debugCounter</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a4faf2405fc23b4145b870dcfe059e487</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AABSPTree&lt; T &gt;</name>
      <anchorfile>classG3D_1_1AABSPTree_1_1RayIntersectionIterator.html</anchorfile>
      <anchor>a3c07e9d3aa234b6a7a7ced34ae1dcfb3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::RayShape</name>
    <filename>classG3D_1_1RayShape.html</filename>
    <base>G3D::Shape</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RayShape</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a4a3dd3b492776a87374603648023fc6a</anchor>
      <arglist>(const G3D::Ray &amp;r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a72f1698166238366a03849c0da196f08</anchor>
      <arglist>(RenderDevice *rd, const CoordinateFrame &amp;cframe, Color4 solidColor=Color4(.5,.5, 0,.5), Color4 wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>ad43de4eccd4a22032e23fb37d64f3a9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a5dd57876c8a07879a7e556ee86b4dbff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a8b77fafcdf2d4600b242091478825b6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a2c03f01597d04c82d418c91b33cee4de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a949639aa9e3f9aa69f7c95ccc1b5f6d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>afa8186555cf431c8f9d7de9ab68bf2d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>BoundingSphere</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a700e13d9c68532a003293aed0b0a94ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AABox</type>
      <name>BoundingAABox</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a2403c6de18dee66e1ef454c38d4d3b4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a0fc9afbafd02c4afbba5e1e30fcad6df</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1RayShape.html</anchorfile>
      <anchor>a0ca8c9008adb15fc46ac0e27a1e4ce1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3d43a4cfb48ee5fad4c62a4e563d8f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a8c83969ebefbc0ea6b08c675a4a6da72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>af24833903a0d3e336c05d3f763b077f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ddd2389f3223bcf50c2066e7c877767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cc634a9611ef8f902cd59101b53a471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>ab71af0f244ad7c155a8d3ae9b06786ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3dcd66fc09e3e7542a258cc364a08f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a470ee3f279a66cf7f24a33b3d7882142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>aaa54c9f8e2996ed83cf914dd091f6bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6079582403e91245db8e8c84935d7851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a0c6d6e09678f9fafa99f39c7ad783a48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a717a33c14c235862869010700e1a5c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a875d0e9c54adbe065257157c88a007f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a00d4cb802e7781729454a9f2687e7714</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AABox</type>
      <name>boundingAABox</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ec36af3cb42da07cd27272f8936665f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>typeToString</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a5d042e391bc27f781099b673ac9d8388</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Rect2D</name>
    <filename>classG3D_1_1Rect2D.html</filename>
    <member kind="function">
      <type></type>
      <name>Rect2D</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>ad70937fff1a9b624ab1e22bb7c78c832</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rect2D</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>ae3e436a37491e0a73a856d29efce5be9</anchor>
      <arglist>(const Vector2 &amp;wh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rect2D</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a9cabf37116475d83d97c6951e1ef874c</anchor>
      <arglist>(const Rect2D &amp;a, const Rect2D &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>width</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a2c1404f1155b871d90665e6c41183ad2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>height</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>af450afee5813781e6a6ef305c878bd74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>x0</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a0d826656fa6f48044c102e341152faed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>x1</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>aa8bbc63e5006caa09607ca21ba295691</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>y0</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>aea07e130bf8ea624e47e875cfbc85524</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>y1</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a230b15a1d3993fe5a7256aa08f36c1b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>x0y0</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a71f6306f7ea5d44ee6d28b72e96f17aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>x1y0</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>ab2f134449b4da0bf6cc11dae924ff0da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>x0y1</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a4976317df8f0113c92a3583e2dfd3d60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>x1y1</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a70cef52927d0742c0e4aa94c5d4d79ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>wh</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>aa50eb2daec87d015ae7041b329215b42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>center</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>af2e25eebea4082ec4e3e666d9e92718b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>acf225ae037ea329c63a299f9fc2f2566</anchor>
      <arglist>(const Vector2 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a193fd02b8fe3993a784edd8e64db9ccc</anchor>
      <arglist>(const Rect2D &amp;r) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a1688f9cf2fc9f2ee9195401fb75456a4</anchor>
      <arglist>(const Rect2D &amp;r) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersectsOrTouches</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>aed9fae7ef36df24c616507ff81ffdece</anchor>
      <arglist>(const Rect2D &amp;r) const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a1ad10b5f31fe10dd022965c70fa50076</anchor>
      <arglist>(float s) const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>ae8e0fe7b9e7548e1e76c9b60e0afef5b</anchor>
      <arglist>(float s) const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>operator+</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a0370d575cf7a4dcc779320a0dd41ed9b</anchor>
      <arglist>(const Vector2 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>aa471acd2e2d4a90280b8ab08be147f1c</anchor>
      <arglist>(const Vector2 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a6433d90e374c1eb1c5f5a483e5108bc8</anchor>
      <arglist>(const Rect2D &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>afc44dd6152abaf47a6736d52de1025a6</anchor>
      <arglist>(const Rect2D &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>corner</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>abf198dc993fa1e0b4b872f68bb508559</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>border</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>acb947a892c1c7e8902f171c4759ff5a5</anchor>
      <arglist>(float delta) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clip</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a75b3e08e09fddc6a2344f3a61cb44d6b</anchor>
      <arglist>(const Array&lt; T &gt; &amp;inPoly, Array&lt; T &gt; &amp;outPoly) const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>largestCenteredSubRect</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a6502a82af3d52d797ce601eb27fff15a</anchor>
      <arglist>(float ww, float hh) const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>intersect</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a1dddbe91e7117a8aa074b166cb5f7340</anchor>
      <arglist>(const Rect2D &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a0d905ab24460f4bf6deabb0dbe96aaef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rect2D</type>
      <name>xyxy</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>aa713b10b94c8eba76553c3be3e9a12c9</anchor>
      <arglist>(float x0, float y0, float x1, float y1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rect2D</type>
      <name>xyxy</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a9abb7cd02c1379c8d1f5f3b765cb6b40</anchor>
      <arglist>(const Vector2 &amp;v0, const Vector2 &amp;v1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rect2D</type>
      <name>xywh</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>a0536adbd113044ccb1cf3ad81660cbb0</anchor>
      <arglist>(float x, float y, float w, float h)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Rect2D</type>
      <name>xywh</name>
      <anchorfile>classG3D_1_1Rect2D.html</anchorfile>
      <anchor>af4ad8974599d1ded77b0100127abb8aa</anchor>
      <arglist>(const Vector2 &amp;v, const Vector2 &amp;w)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::ReferenceCountedObject</name>
    <filename>classG3D_1_1ReferenceCountedObject.html</filename>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReferenceCountedObject</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ad85af403210f045db53eea3ee66702ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReferenceCountedObject</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a69f94e62b3449ab6a9c2dc1728f2a7e1</anchor>
      <arglist>(const ReferenceCountedObject &amp;notUsed)</arglist>
    </member>
    <member kind="function">
      <type>ReferenceCountedObject &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ab5885c411e178945e48331294f120949</anchor>
      <arglist>(const ReferenceCountedObject &amp;other)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ReferenceCountedObject</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>aa703b1bf8f8760373726261a494705ce</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::ReferenceCountedPointer</name>
    <filename>classG3D_1_1ReferenceCountedPointer.html</filename>
    <templarg>class T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>element_type</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a9d115dfaf7bceacd65a4d4044e702ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>ad27bae2cc2ee083f637d2f3af9ccd140</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>acf1a3a83e11dfdd06f1fb69b430fbaf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a3d24572a171c35c907935305b8227a3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>aa3e837ef203059442d725de2a294168d</anchor>
      <arglist>(const ReferenceCountedPointer&lt; S &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>ReferenceCountedPointer&lt; S &gt;</type>
      <name>downcast</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a495828a6d61dd4fc7382265646e069c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>affd883066ec6f6041725af2fc694bbe9</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a9acff89d3e859096ea63ef019aeaf84b</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a91172cd9b5cc4817c9c353483cc56f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ReferenceCountedPointer&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a962b7515149d616854d2dfb1f21bc223</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>ReferenceCountedPointer&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>ae297b6404222ea96975f16ddeea8dcbd</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a566325c613f3139aded674ed14d46626</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>ae0ccd195b95a6c8efbf11024fda0b420</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>ae099ff3eb5cc6eb73af30ac73175606d</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a4ed117404f73c31e0bee7faa61afbd2f</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>afcd65075f7809c1a8ae281c05305a11c</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>afbfdd9647c1bd9ed7c3e37d3f4f45460</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>ad77c269a4bccc47ca7c169a2f8dd749c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a2619445ec33bec8f19448700360e8006</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a20a666352a80e66d64e09ea0eab0b632</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>notNull</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>a60b95b226662e038de3100f615888899</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isLastReference</name>
      <anchorfile>classG3D_1_1ReferenceCountedPointer.html</anchorfile>
      <anchor>aa07090ff86971a5e171076bf59f5dbcc</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::ReliableConduit</name>
    <filename>classG3D_1_1ReliableConduit.html</filename>
    <base>G3D::Conduit</base>
    <member kind="function">
      <type></type>
      <name>~ReliableConduit</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>af5300cad0af5d7c2ab5ec83243b6075c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>send</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>a6ef182415212b7e3b5f72c629bef1414</anchor>
      <arglist>(const NetMessage *m)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>messageWaiting</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>a9bebd70c59b20bcefb695bf6ce08d844</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>ad3f2e5273d9d421e104c25dc4c91d792</anchor>
      <arglist>(uint32 type, const T &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>ac1b79eecc2485cddaa40d9dc6aa06fdd</anchor>
      <arglist>(uint32 type)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>send</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>adad5bdd2d38e686fdefe7e0bd225ea00</anchor>
      <arglist>(const NetMessage &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>send</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>a34fc54486ed64195219ef4a4af8b0be4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32</type>
      <name>waitingMessageType</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>a48c38bafa95704c3f8fb6a3752df329b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool G3D_DEPRECATED</type>
      <name>receive</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>aa56e8f68f27b79812ce74123cb49a5f3</anchor>
      <arglist>(NetMessage *m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>a4a2ab9688b26bbdc518532f8b96100a9</anchor>
      <arglist>(T &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>a35301cc018b5b1fd7355c37218f9ca53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NetAddress</type>
      <name>address</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>af45d2d5725a8ed3b6a9498d850b0f04c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>bytesSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a328316292e1dbd421e3e657d2545b805</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>messagesSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a96e32f7d7fec28d51e7d9f9994a2dc8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>bytesReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>aef5491086698c4bf2d04282da1da6049</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>messagesReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a4a09a791f121f76c7a24602960228732</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a1c08f10278eef82f96e4eb6357bb9cff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>multisend</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>ae02e53acbb893cf3d5fd6b850724397f</anchor>
      <arglist>(const Array&lt; ReliableConduitRef &gt; &amp;array, const NetMessage *m)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>multisend</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>ac79a915c42b9fbb3257ed930b3e22eae</anchor>
      <arglist>(const Array&lt; ReliableConduitRef &gt; &amp;array, const NetMessage &amp;m)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>multisend</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>a567c7333b9c78fc26fac0ca17e42be36</anchor>
      <arglist>(const Array&lt; ReliableConduitRef &gt; &amp;array, uint32 type, const T &amp;m)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>multisend</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>ad9eb77aa4b8dfcd36a8d885aa4938655</anchor>
      <arglist>(const Array&lt; ReliableConduitRef &gt; &amp;array)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>mSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a9f096e72804ae607f5a0dcdc6644569b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>mReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a2b8002b8175f5c95a346508faf8a6062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>bSent</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a0dd3e8c6d2514f002553c02425723713</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>bReceived</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a15f17e452df4fc74958fb0b341c77e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>class NetworkDevice *</type>
      <name>nd</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>ae065b5dea5f3d3873667d3e4e72a491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SOCKET</type>
      <name>sock</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>a9baa87aeb3777a03b8c1c8ae21f9b945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BinaryOutput</type>
      <name>binaryOutput</name>
      <anchorfile>classG3D_1_1Conduit.html</anchorfile>
      <anchor>af4557f45feff508904ae1b55f76a0248</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NetworkDevice</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>aeecf97b085c6118a394e2b64b7367027</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NetListener</name>
      <anchorfile>classG3D_1_1ReliableConduit.html</anchorfile>
      <anchor>aa297c1e87aebfbe384d672af97105f7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Renderbuffer</name>
    <filename>classG3D_1_1Renderbuffer.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function">
      <type></type>
      <name>~Renderbuffer</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>ad9685b0283268b726578ab58f5999aae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>openGLID</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>a35d88a8aa58215e1a4f9bba2aba3c00f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const TextureFormat *</type>
      <name>format</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>a11135e0f482245cddbc6dd4ce14d7999</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>a34a5be4540b7c1ef1adfae76c417ca0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>width</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>afea350feb63dc1c264c6331d0e4c3fc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>height</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>aa52a86eb9fad4e801c20130f36b37895</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>vector2Bounds</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>a7bba118982fb8d432d77cb3b84534697</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>rect2DBounds</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>a616ec12b5fc20700b0f7c23e31702c42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RenderbufferRef</type>
      <name>fromGLRenderbuffer</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>a00950f58579603c4286dd935897ef6ff</anchor>
      <arglist>(const std::string &amp;name, const GLuint imageID, const G3D::TextureFormat *format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RenderbufferRef</type>
      <name>createEmpty</name>
      <anchorfile>classG3D_1_1Renderbuffer.html</anchorfile>
      <anchor>af9eca1dbcf0831e355222f0b13f882c2</anchor>
      <arglist>(const std::string &amp;name, const class TextureFormat *format, const int width, const int height)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::RenderDevice</name>
    <filename>classG3D_1_1RenderDevice.html</filename>
    <class kind="class">G3D::RenderDevice::DebugSettings</class>
    <class kind="class">G3D::RenderDevice::StatusInfo</class>
    <member kind="enumeration">
      <type></type>
      <name>Primitive</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINES</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a7def9004886c9baf3f195265c73f15a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINE_STRIP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a8908afbab307e1f630b1168a1d838c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLES</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a89489502b597b1df4ff3eb57b592de40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLE_STRIP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a693287e7a70d6ed747f86cbdfcd46906</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLE_FAN</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29adf9887b73fb32a4ff3577e49f5963165</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUADS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29ac83e75e3b12ce701bb51ea72577d28d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUAD_STRIP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a59a0456816fdbdfa9a6c4ad4247f1b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29aa6d35196b9544e79809d5687d5f6e67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenderMode</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92d50038182eb179c73376edd636d293</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RENDER_SOLID</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92d50038182eb179c73376edd636d293a1d1f1aaf51d39b5721a51cc78a4fa9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RENDER_WIREFRAME</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92d50038182eb179c73376edd636d293a2b62a3a74ab65a894b6b58f9c9e7204a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RENDER_POINTS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92d50038182eb179c73376edd636d293a7c437a17e801f4d887cac4181a09793e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RENDER_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92d50038182eb179c73376edd636d293ad563dca763a5636eb34fc6fd2382c8ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_LIGHTS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adc63c0c9c7af941ffabef5f07e0f718eae5ae24945ba99dc232bb587df15bbd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DepthTest</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_GREATER</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0acaa3893762967be0857d8d653cc97ed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_LESS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a9e9c714db970e2249bf991a0915e10d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_GEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a1935a70a4927e624afe5d6b9cfb7dcf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_LEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0aac7c9d5e6d81ed2ab4f6d1d384b73d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_NOTEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a739890fc11b6a85648b57150581e96e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_EQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a192eca7a66ef71309f3369c73b0cb060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_ALWAYS_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a8c056a8e2379ac3e7540ee5e0019ba87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_NEVER_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a8684fa73a90bf6ac1448cedf32bee4f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0aee9053bb7e52aead90ebcb61514acd02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AlphaTest</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_GREATER</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7faf8c97ea666acfd804c48741328e36df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_LESS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa3c9eb67b04296f7c169596c35e4a48fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_GEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fac2a2bd32a719719224594c8493ae1393</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_LEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa3722373509cecd5b11375f3034d45c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_NOTEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7faaf9436a4e2ee87fc6d8a9338767fe97c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_EQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa5396672c3f5f1f3f1cdfbdbba6917950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_ALWAYS_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa416fcec1f1f0bc9ac8de0d0dc10f822f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_NEVER_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa668ab17183e49f5aa9539f096b243fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7faf1d41d0f33361cc9f394bb9befbf7553</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StencilTest</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_GREATER</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910adfee20872073c9ad883f70c453be0d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_LESS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a40eadddc53ca66345d25bc8c07602e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_GEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a6abf4e968a6838f937be603d6816723d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_LEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910ac25326ce4dd2a583cd89c00f610b9275</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_NOTEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910ac9f0c244da91349b0cf4b7392417776c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_EQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910ae8509442da749db1d8bef2f14a8655e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_ALWAYS_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a91be33c162a7fd8d8b73955fafdeb2a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_NEVER_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a046e25d0b9a46ce3ae87bd9af66af06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a454137332feb86b978602d6579b5d5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendFunc</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_SRC_ALPHA</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca4f3f3f1ef39b48f7d4e4bb8642fd4e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_ONE_MINUS_SRC_ALPHA</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4cae4eda7c66970e19399b9c77508c31b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_ONE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4cac9e31f161d2501a97e302fb812a291d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_ZERO</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4cafd5a81b8a1e833ba1295e7c0bd229200</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_SRC_COLOR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca8ce5af3b1214b53283c9910bec1da332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_DST_COLOR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca35ec39c64d4a332c2fcc7568660ec3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_ONE_MINUS_SRC_COLOR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca205222149106a16636789079142d4d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca86a1ff0fb03681fca632a606957c5e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendEq</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_MIN</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fabc52c4b51120aa79bf9bcc6785e38c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_MAX</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fae9c87411e0aaed79a942a27c08292708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_ADD</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fa7d0995a2e48d67050a99a3efcadc7e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_SUBTRACT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fab53deb0c2de1f860c3687ae49b98c184</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_REVERSE_SUBTRACT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fa3dbec25d60e5256610d0e47094002c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fa3822b5e4155c2cc5ecc2ff269f39fe74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StencilOp</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_INCR_WRAP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8da65022b716057f8e1350338f7a6ef0d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_DECR_WRAP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8dabef1855711376bca0b1565ce537664d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_KEEP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8dab74d9fb5edab5bf6cbdf5b3406938161</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_INCR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8daf1e836541deb60a1eddbc0ecba97dbaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_DECR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8da1dd8d84d650ce5c207e2eeb894221eb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_REPLACE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8dae7d1f974c40b7c119cec723b15f79d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_ZERO</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8dab45fe72ae56af99c7b3044814cf991ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_INVERT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8da764e6d14ea13dca25ba9f3ff4eaf3c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCILOP_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8daaed5978bde107d364ccf310db89fc1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CullFace</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6abac39d9bba7be2022167346ebf313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CULL_FRONT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6abac39d9bba7be2022167346ebf313a9e3ea9002c2ff49ca13ff63d752de928</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CULL_BACK</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6abac39d9bba7be2022167346ebf313aa8a20f6b885a033d3ee9c237b384ecf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CULL_NONE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6abac39d9bba7be2022167346ebf313a92f576dcff691e8395c88bb7aa0624b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CULL_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6abac39d9bba7be2022167346ebf313a79b531cf6c6ccedce3290e356c84043a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShadeMode</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>acac98d92f533351b5563b81b5252e877</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADE_FLAT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>acac98d92f533351b5563b81b5252e877a494226b570810ca0a6de759dbb878d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADE_SMOOTH</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>acac98d92f533351b5563b81b5252e877a13beaaf21fa4a9e390fc048ec9d1f13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADE_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>acac98d92f533351b5563b81b5252e877a7abe38bad43cb1abf0e083637cef90b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CombineMode</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_REPLACE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca4dda79b83b988e96eb791147a6c965f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_BLEND</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca640916dc3ba85e3dda2525be2c74ded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_INTERPOLATE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3caa6d27130e9d04b797f625ba90e7231a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_ADD</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca93be73a63132b11fd9e21bd11a0a504f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_MODULATE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3caee52182ead20d81196771f423e63031e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_ADD_SIGNED</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca832f9f6250f64e7651f2bc6eac2248d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_SUBTRACT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3caa1b95e4aaba0041589a159b620ad7820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_DOT3_RGB</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca37167eac704dd9b02f55d4584f173812</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_DOT3_RGBA</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca3bb069c6054995cb4bb58419bf71858b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3cae7f90dcd76123dc494045182bee5dbc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_NONE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a41a1664a92035eb6b7c05389c2357ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FRONT_LEFT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a7b0faff8917a3e981db7a18789aa8eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FRONT_RIGHT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ae6d25898e67b1245eafaae21d8e815c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_BACK_LEFT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a0be8b0a40c3cb0e90f01cf747628ba66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_BACK_RIGHT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50aa962cb61a82acc8640e9491a3f3b53ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FRONT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a157edcbd2000b34adc81b91acdcbcd17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_BACK</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a7d6e37b64e98c5cca6328680ffe230cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_LEFT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ac6a7f62b4a39599a8462ee9e706e36f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_RIGHT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a74fd439487253d5bf73b2d3d25217fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FRONT_AND_BACK</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50acf335d3c6e06c0e692b25fd4f2162a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a6b8d8885acddfa141a3b3a87a6b95007</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR0</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a443347df1b674504f73adc515896688e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR1</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a3cb00974dab4816bac280ca0e0a49238</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR2</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ad9774ad4042a813da5dcf24c9ac237e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR3</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ad00d24ff93220494daeb549bfc2b8f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR4</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ac839f6d18f46b78acfa4fd20cd0b49f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR5</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50aa8eaa07eac0cea4bca21b7d6bbaf485b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR6</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a3749e239506381efdc99bd87bd6b3e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR7</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a83baba2fa979127e695be862d6f9b292</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR8</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50aab7829594b1d0fece7a770cb67ad6d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR9</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a973e1187f2cdb994844478345a9ccd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR10</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a2843c6938dd017abd032981d7c1bd118</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR11</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ab9b5c9926dbe8e1b45325416c67208cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR12</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a0bb086d196863c17bd497828888b5ea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR13</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a0d64e79ec3e7959484232ab9b3db2995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR14</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ad04b4008c078caf0e6b7a61473f43321</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR15</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ae9edbf13d187e7756ca25b11f817eb35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINES</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a7def9004886c9baf3f195265c73f15a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINE_STRIP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a8908afbab307e1f630b1168a1d838c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLES</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a89489502b597b1df4ff3eb57b592de40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLE_STRIP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a693287e7a70d6ed747f86cbdfcd46906</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIANGLE_FAN</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29adf9887b73fb32a4ff3577e49f5963165</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUADS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29ac83e75e3b12ce701bb51ea72577d28d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUAD_STRIP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29a59a0456816fdbdfa9a6c4ad4247f1b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3b5146eac8094ab1a512f68b9ac89e29aa6d35196b9544e79809d5687d5f6e67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RENDER_SOLID</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92d50038182eb179c73376edd636d293a1d1f1aaf51d39b5721a51cc78a4fa9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RENDER_WIREFRAME</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92d50038182eb179c73376edd636d293a2b62a3a74ab65a894b6b58f9c9e7204a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RENDER_POINTS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92d50038182eb179c73376edd636d293a7c437a17e801f4d887cac4181a09793e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RENDER_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92d50038182eb179c73376edd636d293ad563dca763a5636eb34fc6fd2382c8ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_LIGHTS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adc63c0c9c7af941ffabef5f07e0f718eae5ae24945ba99dc232bb587df15bbd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_GREATER</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0acaa3893762967be0857d8d653cc97ed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_LESS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a9e9c714db970e2249bf991a0915e10d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_GEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a1935a70a4927e624afe5d6b9cfb7dcf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_LEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0aac7c9d5e6d81ed2ab4f6d1d384b73d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_NOTEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a739890fc11b6a85648b57150581e96e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_EQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a192eca7a66ef71309f3369c73b0cb060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_ALWAYS_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a8c056a8e2379ac3e7540ee5e0019ba87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_NEVER_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0a8684fa73a90bf6ac1448cedf32bee4f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7751f776d8f62f2ccf570a7c01d953b0aee9053bb7e52aead90ebcb61514acd02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_GREATER</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7faf8c97ea666acfd804c48741328e36df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_LESS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa3c9eb67b04296f7c169596c35e4a48fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_GEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fac2a2bd32a719719224594c8493ae1393</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_LEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa3722373509cecd5b11375f3034d45c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_NOTEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7faaf9436a4e2ee87fc6d8a9338767fe97c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_EQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa5396672c3f5f1f3f1cdfbdbba6917950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_ALWAYS_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa416fcec1f1f0bc9ac8de0d0dc10f822f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_NEVER_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7fa668ab17183e49f5aa9539f096b243fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALPHA_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adcb53cda4ad56c6522aa6abf8a438b7faf1d41d0f33361cc9f394bb9befbf7553</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_GREATER</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910adfee20872073c9ad883f70c453be0d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_LESS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a40eadddc53ca66345d25bc8c07602e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_GEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a6abf4e968a6838f937be603d6816723d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_LEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910ac25326ce4dd2a583cd89c00f610b9275</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_NOTEQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910ac9f0c244da91349b0cf4b7392417776c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_EQUAL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910ae8509442da749db1d8bef2f14a8655e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_ALWAYS_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a91be33c162a7fd8d8b73955fafdeb2a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_NEVER_PASS</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a046e25d0b9a46ce3ae87bd9af66af06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a327672339e3e16d050ceba2479b15910a454137332feb86b978602d6579b5d5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_SRC_ALPHA</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca4f3f3f1ef39b48f7d4e4bb8642fd4e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_ONE_MINUS_SRC_ALPHA</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4cae4eda7c66970e19399b9c77508c31b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_ONE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4cac9e31f161d2501a97e302fb812a291d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_ZERO</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4cafd5a81b8a1e833ba1295e7c0bd229200</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_SRC_COLOR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca8ce5af3b1214b53283c9910bec1da332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_DST_COLOR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca35ec39c64d4a332c2fcc7568660ec3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_ONE_MINUS_SRC_COLOR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca205222149106a16636789079142d4d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLEND_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad44ce53d652d6d61b3f80450be777a4ca86a1ff0fb03681fca632a606957c5e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_MIN</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fabc52c4b51120aa79bf9bcc6785e38c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_MAX</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fae9c87411e0aaed79a942a27c08292708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_ADD</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fa7d0995a2e48d67050a99a3efcadc7e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_SUBTRACT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fab53deb0c2de1f860c3687ae49b98c184</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_REVERSE_SUBTRACT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fa3dbec25d60e5256610d0e47094002c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLENDEQ_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5dd185af3f0c4a3da58f2b214cc8104fa3822b5e4155c2cc5ecc2ff269f39fe74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_INCR_WRAP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8da65022b716057f8e1350338f7a6ef0d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_DECR_WRAP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8dabef1855711376bca0b1565ce537664d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_KEEP</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8dab74d9fb5edab5bf6cbdf5b3406938161</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_INCR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8daf1e836541deb60a1eddbc0ecba97dbaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_DECR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8da1dd8d84d650ce5c207e2eeb894221eb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_REPLACE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8dae7d1f974c40b7c119cec723b15f79d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_ZERO</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8dab45fe72ae56af99c7b3044814cf991ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCIL_INVERT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8da764e6d14ea13dca25ba9f3ff4eaf3c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STENCILOP_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa5244886595c51bd484b186f270dfa8daaed5978bde107d364ccf310db89fc1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CULL_FRONT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6abac39d9bba7be2022167346ebf313a9e3ea9002c2ff49ca13ff63d752de928</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CULL_BACK</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6abac39d9bba7be2022167346ebf313aa8a20f6b885a033d3ee9c237b384ecf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CULL_NONE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6abac39d9bba7be2022167346ebf313a92f576dcff691e8395c88bb7aa0624b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CULL_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6abac39d9bba7be2022167346ebf313a79b531cf6c6ccedce3290e356c84043a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADE_FLAT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>acac98d92f533351b5563b81b5252e877a494226b570810ca0a6de759dbb878d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADE_SMOOTH</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>acac98d92f533351b5563b81b5252e877a13beaaf21fa4a9e390fc048ec9d1f13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADE_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>acac98d92f533351b5563b81b5252e877a7abe38bad43cb1abf0e083637cef90b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_REPLACE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca4dda79b83b988e96eb791147a6c965f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_BLEND</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca640916dc3ba85e3dda2525be2c74ded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_INTERPOLATE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3caa6d27130e9d04b797f625ba90e7231a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_ADD</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca93be73a63132b11fd9e21bd11a0a504f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_MODULATE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3caee52182ead20d81196771f423e63031e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_ADD_SIGNED</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca832f9f6250f64e7651f2bc6eac2248d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_SUBTRACT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3caa1b95e4aaba0041589a159b620ad7820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_DOT3_RGB</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca37167eac704dd9b02f55d4584f173812</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_DOT3_RGBA</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3ca3bb069c6054995cb4bb58419bf71858b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEX_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a834c77b9618c1af62d3e58d4ccdb3b3cae7f90dcd76123dc494045182bee5dbc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_NONE</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a41a1664a92035eb6b7c05389c2357ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FRONT_LEFT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a7b0faff8917a3e981db7a18789aa8eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FRONT_RIGHT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ae6d25898e67b1245eafaae21d8e815c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_BACK_LEFT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a0be8b0a40c3cb0e90f01cf747628ba66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_BACK_RIGHT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50aa962cb61a82acc8640e9491a3f3b53ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FRONT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a157edcbd2000b34adc81b91acdcbcd17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_BACK</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a7d6e37b64e98c5cca6328680ffe230cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_LEFT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ac6a7f62b4a39599a8462ee9e706e36f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_RIGHT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a74fd439487253d5bf73b2d3d25217fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FRONT_AND_BACK</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50acf335d3c6e06c0e692b25fd4f2162a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_CURRENT</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a6b8d8885acddfa141a3b3a87a6b95007</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR0</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a443347df1b674504f73adc515896688e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR1</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a3cb00974dab4816bac280ca0e0a49238</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR2</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ad9774ad4042a813da5dcf24c9ac237e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR3</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ad00d24ff93220494daeb549bfc2b8f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR4</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ac839f6d18f46b78acfa4fd20cd0b49f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR5</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50aa8eaa07eac0cea4bca21b7d6bbaf485b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR6</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a3749e239506381efdc99bd87bd6b3e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR7</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a83baba2fa979127e695be862d6f9b292</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR8</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50aab7829594b1d0fece7a770cb67ad6d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR9</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a973e1187f2cdb994844478345a9ccd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR10</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a2843c6938dd017abd032981d7c1bd118</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR11</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ab9b5c9926dbe8e1b45325416c67208cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR12</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a0bb086d196863c17bd497828888b5ea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR13</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50a0d64e79ec3e7959484232ab9b3db2995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR14</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ad04b4008c078caf0e6b7a61473f43321</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COLOR15</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a50269f65edcc91aab0e8e4fda03f2a50ae9edbf13d187e7756ca25b11f817eb35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>majStateChange</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae9775c0d98ef340a992f8927bb2b6174</anchor>
      <arglist>(int inc=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minStateChange</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a31da299bc58600362afcbdac97fa514c</anchor>
      <arglist>(int inc=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>majGLStateChange</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adda08e3b2eb891280a1377a08c97170d</anchor>
      <arglist>(int inc=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>minGLStateChange</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5ded03ceacdd13a2350df595206396da</anchor>
      <arglist>(int inc=1)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>debugNumMajorOpenGLStateChanges</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a0d84148be6a66931f8ec04fd4cc2410f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>debugNumMinorOpenGLStateChanges</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7e76e1f41848116a23f7b00f4bd4da9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>debugNumMajorStateChanges</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae153d342a3ef0223aaf1c3ed99408fd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>debugNumMinorStateChanges</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a774d68f4899110cc8a16071dc9f21039</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>debugNumPushStateCalls</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ab9f75a407ccfca39e842fa18cde0fb31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderDevice</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa4553da1ec584032e07d9ebb0cc75ce6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderDevice</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adc48d743bbbfbcbba6d8a12a5d32fd1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describeSystem</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a1cb1b9017e0f7ae86234ed92533557e3</anchor>
      <arglist>(TextOutput &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describeSystem</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a211d66dac4226292f4b989d58b27118a</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushState</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a1aac63b993b7e4ef141cb1b4d77aadb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetState</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ade1fc263eb69f9a846544090f47640eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popState</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a04b133010177e2adc3e526c95d5a15aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adf5775d74f9e6380a527238d898b84ae</anchor>
      <arglist>(bool clearColor, bool clearDepth, bool clearStencil)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a65703dc1aae19a980fb7394dcc2d916f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginFrame</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a319fbd663e4f5fd566b23a45b9ffff27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endFrame</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a1c7384415c19ac7734d58ec3affa8941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>swapBuffersAutomatically</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae36d30c374f66c0444690327e849af1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSwapBuffersAutomatically</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3ce18bffddc5c8e22963e6fe1d3a0077</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFrameRate</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad571872f3ec7f0d4e502cb1b30604322</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTriangleRate</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a199a9af8d12a56baa8d4b5c54bc84e42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTrianglesPerFrame</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92bbdf14b6cf6e547a9cbe3f0ff40ba5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTriangleCount</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ac7e0c6f648cb94fbbc58c10cd37cf89c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDepthTest</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af4c6ab01569da97912147e37b2a6f5b4</anchor>
      <arglist>(DepthTest test)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStencilTest</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>afdc28746612db3d00450000ab65c2eba</anchor>
      <arglist>(StencilTest test)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderMode</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a57dc26df99ee622c885914bbe8e14b34</anchor>
      <arglist>(RenderMode mode)</arglist>
    </member>
    <member kind="function">
      <type>RenderMode</type>
      <name>renderMode</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a92dcdbe4ac9030d36f440ba0aa6c4a81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStencilConstant</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ac08a5e859db042b2320313c65fb1fc6b</anchor>
      <arglist>(int reference)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlphaTest</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a9528eee52888f6bff18ac0aca26c1321</anchor>
      <arglist>(AlphaTest test, double reference)</arglist>
    </member>
    <member kind="function">
      <type>AlphaTest</type>
      <name>alphaTest</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ac587c09760ba26cadcbf586ede22dcd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>alphaTestReference</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a323872e77c418395df4a1e6f2932bef2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDrawBuffer</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a1f0cff35be9e365d07e1ac6940af8c05</anchor>
      <arglist>(Buffer drawBuffer)</arglist>
    </member>
    <member kind="function">
      <type>Buffer</type>
      <name>drawBuffer</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a401d2540e762a7a876ec6eac561ae4ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDepthRange</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af5aea37682b54bca62bccb9ce041295e</anchor>
      <arglist>(double low, double high)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableColorWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a182d2854fd4e6a6b662a354225891084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableColorWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa6480579ccef8334accbc05082ced639</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a8432bdd441679245bd2358fc9cd71e1a</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>colorWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a21d86547698e2e35b46f92ac719445ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableAlphaWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a905fa6e776f76299a980c041b17437da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableAlphaWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a630ba1d3058bf847bb62e9f8b76e8977</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlphaWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a38d80b8050f99fb6ab8a1d4414f05f1f</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableDepthWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a8784cc7c48b4fcd25f1e7d952391d243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableDepthWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a134fa32df3b199176a3d56a0502fbd6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDepthWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a9d996a8109b36a22c1ef5f50b34c3e66</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>depthWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a70bd4b851ef11019132739dc97a089ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>alphaWrite</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3649b0fa3d92cddfc46e44dce5bce374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShadeMode</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a65493b21405d2605676f592cc232de05</anchor>
      <arglist>(ShadeMode s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStencilOp</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a9b787ed2e80f8741f2724a822e48810d</anchor>
      <arglist>(StencilOp fail, StencilOp zfail, StencilOp zpass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStencilOp</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aefd8beb849f00f2bbfd964987e1e40a4</anchor>
      <arglist>(StencilOp frontStencilFail, StencilOp frontZFail, StencilOp frontZPass, StencilOp backStencilFail, StencilOp backZFail, StencilOp backZPass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBlendFunc</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae6c526079b17bce026ab8211c1ff1730</anchor>
      <arglist>(BlendFunc src, BlendFunc dst, BlendEq eq=BLENDEQ_ADD)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableClip2D</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae827948e53ea9741a4724ccc19a724b6</anchor>
      <arglist>(const Rect2D &amp;clip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableClip2D</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af3fa95ab3825a9873a666969b1919454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineWidth</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>afadc63b5960b3c93aa3bf44b14f0ece7</anchor>
      <arglist>(double width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPointSize</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a2086633f9a5ab39143994d348ce1cbac</anchor>
      <arglist>(double diameter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjectToWorldMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a04ec36a3d0e8be3c7cc72f63cc8a726b</anchor>
      <arglist>(const CoordinateFrame &amp;cFrame)</arglist>
    </member>
    <member kind="function">
      <type>const CoordinateFrame &amp;</type>
      <name>getObjectToWorldMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a2ca215b0b0492231c6841f387802ea5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCameraToWorldMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a792c5faf7a21068e2c859b4e3992d909</anchor>
      <arglist>(const CoordinateFrame &amp;cFrame)</arglist>
    </member>
    <member kind="function">
      <type>const CoordinateFrame &amp;</type>
      <name>getCameraToWorldMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a45fd0298b402a48d4a4811127a295b13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>getProjectionMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a23c9ac8bc7c39406b1840b1f1aa6d3be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CoordinateFrame</type>
      <name>getModelViewMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a6d3ead0233bf467cc276b381fe482536</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>getModelViewProjectionMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adde436df35ce256738bd01597c136d3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProjectionMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7236e3db3e3636bef21d0db05f75b904</anchor>
      <arglist>(const Matrix4 &amp;P)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextureMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adc25d20e4671d4099e87c234a4affe4e</anchor>
      <arglist>(uint textureUnit, const float *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextureMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a195d8e3a441a4260b65a3b2ca726f7b1</anchor>
      <arglist>(uint textureUnit, const double *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextureMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a610d55bf2bf9e7c5df2b02224a6ceb02</anchor>
      <arglist>(uint textureUnit, const Matrix4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextureMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a97e422b5e5b959cc5a4b3fea83366549</anchor>
      <arglist>(uint textureUnit, const CoordinateFrame &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextureLODBias</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a08360a0b991b485f7bbe95ed53a104c7</anchor>
      <arglist>(uint unit, float bias)</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>getTextureMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>abc2d8e97ce74dff95d298b30114edee4</anchor>
      <arglist>(uint textureUnit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextureCombineMode</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ab8d34670b23f8bdefb1b1447968b42cc</anchor>
      <arglist>(uint textureUnit, const CombineMode texCombine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTextureUnit</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a962bf5c30df9f26a5a8a4de8462da3e0</anchor>
      <arglist>(uint textureUnit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPolygonOffset</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae91dfd8feea73cef0207f138a50ee525</anchor>
      <arglist>(double offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a67fa9fe768f29199488b8c32d769449c</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ac0e435dabdd46490825799db41cdba6f</anchor>
      <arglist>(const Color3 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormal</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af507854684ebcb52ad9282d91463d8c5</anchor>
      <arglist>(const Vector3 &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexCoord</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>afc16756a1f7219bf83bc9f22910cc3c1</anchor>
      <arglist>(uint textureUnit, const Vector4 &amp;texCoord)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexCoord</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a4b847ef771ef664b5fb86d4748993681</anchor>
      <arglist>(uint textureUnit, const Vector3 &amp;texCoord)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexCoord</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a9f763ea49b83f6075edd7bd90e13c38c</anchor>
      <arglist>(uint textureUnit, const Vector3int16 &amp;texCoord)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexCoord</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ab0b44bfeeda1d629fdb4d27c6d1bf5c4</anchor>
      <arglist>(uint textureUnit, const Vector2 &amp;texCoord)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexCoord</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>afc158558abae4664b423f4eabf89f347</anchor>
      <arglist>(uint textureUnit, const Vector2int16 &amp;texCoord)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexCoord</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a70dd91c9b88e83b6411cc3113b3a7c68</anchor>
      <arglist>(uint textureUnit, double texCoord)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCullFace</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a98e15e7cf02d2ec6e70d377acce2ca34</anchor>
      <arglist>(CullFace f)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBrightScale</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a38a6ba01dec130d2fab286277ebc6c08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewport</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa53dee1f938639335a806617b90c280a</anchor>
      <arglist>(const Rect2D &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>getViewport</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a3ce91d98044b424715b2413b1148f8c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendVertex</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a1e84bd5af562c804c57cb6fcf4605a38</anchor>
      <arglist>(const Vector2 &amp;vertex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendVertex</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7d7ba4c03aa71a9161471133927565e4</anchor>
      <arglist>(const Vector3 &amp;vertex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendVertex</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a429cbae9958254109d40e66c337d2c8d</anchor>
      <arglist>(const Vector4 &amp;vertex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProjectionAndCameraMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a40e02c7dee197daaa5ccd003a90b891e</anchor>
      <arglist>(const class GCamera &amp;camera)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginPrimitive</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad7bd8006f5be330c0abdd5c267e7bce0</anchor>
      <arglist>(Primitive p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endPrimitive</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a027d1cc4d647d5e847183595653290f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginIndexedPrimitives</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a4e0776294ee405d0eca7eb3ca248ccb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endIndexedPrimitives</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af9cd711f542217ba982ec6263d3d56f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexArray</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af69ac34a9e93c274ccd8ef36f4e8959b</anchor>
      <arglist>(const class VAR &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalArray</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad71ec96d9e4f0d86843c1374a807bb30</anchor>
      <arglist>(const class VAR &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorArray</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa967c6378666a197c6507340058ac47b</anchor>
      <arglist>(const class VAR &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexCoordArray</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a41d08fb8caffcdb762450328cfea0cdd</anchor>
      <arglist>(unsigned int unit, const class VAR &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>GWindow *</type>
      <name>window</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a760aa5b0c5849afb4e6f646634a47522</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexAttribArray</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a0ae4274614b5c8320bca00b8d3c04298</anchor>
      <arglist>(unsigned int attribNum, const class VAR &amp;v, bool normalize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendIndices</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af5005d99ba3472654f99d9f2804200d3</anchor>
      <arglist>(RenderDevice::Primitive primitive, int numIndices, const T *index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendSequentialIndices</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a76c93e029692fd44b054157056b8e490</anchor>
      <arglist>(RenderDevice::Primitive primitive, int numVertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendIndices</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a79885ba48363bb90e891f2bc427fe486</anchor>
      <arglist>(RenderDevice::Primitive primitive, const Array&lt; T &gt; &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStencilClearValue</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7e0144e041d5927d61d304f14c57289a</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDepthClearValue</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae92f6caf29f418bbd4d3a0ee206faa7f</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorClearValue</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a65606a0da8d628766b03ca39e10f3471</anchor>
      <arglist>(const Color4 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexture</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a51b7bd4079180dcf949655ac31acdcf9</anchor>
      <arglist>(uint textureUnit, TextureRef texture)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>numTextures</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a84438ec4ad89f9bfea32a2b1e1d52e27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>numTextureUnits</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af5598d5164dc952c5eb31a75736f5865</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>numTextureCoords</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad73374d648584f5d6bf227e7780800b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexAndPixelShader</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa718b5cf7ab262fabe1ec58740b78516</anchor>
      <arglist>(const VertexAndPixelShaderRef &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexAndPixelShader</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adb03148a312ed017e27b35a8401fa079</anchor>
      <arglist>(const VertexAndPixelShaderRef &amp;s, const VertexAndPixelShader::ArgList &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjectShader</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae7644ce7ca7dd2fbe2a201d8b9dbfce8</anchor>
      <arglist>(const ObjectShaderRef &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShader</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a0eb7383640e8de61cecff3d5c33b0b44</anchor>
      <arglist>(const ShaderRef &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexProgram</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adc108ae5f44090cd1f963984f9e36cd7</anchor>
      <arglist>(const VertexProgramRef &amp;vp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexProgram</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ab1edf7bf3ecbdfdf16a6d93e648f3c13</anchor>
      <arglist>(const VertexProgramRef &amp;vp, const GPUProgram::ArgList &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPixelProgram</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a920becdf220ab77de7326ab4090a85da</anchor>
      <arglist>(const PixelProgramRef &amp;pp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPixelProgram</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a612acafaa76cbb49b1d99f7fdd2a6438</anchor>
      <arglist>(const PixelProgramRef &amp;pp, const GPUProgram::ArgList &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDepthBufferValue</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a477f1863c28f34db535943adc53fa6ec</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCardDescription</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a813457158b2ebe143291755579f11481</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableTwoSidedLighting</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad622139577e3966e6d506ffa6d4ac3b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableTwoSidedLighting</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a44bbf61e5dcdac34cc14b37e7863070f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beforePrimitive</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a4f2d5a0a52a6eb86f335dd1411f0c78f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>afterPrimitive</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a4d93cb404f17503bf36929585b6502a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsOpenGLExtension</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ade4af46baca89837e67e5710f3f1b64d</anchor>
      <arglist>(const std::string &amp;extension) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsTextureFormat</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a428b75a3ac5ba6f2d0beff0b4f7cc9f9</anchor>
      <arglist>(const TextureFormat *fmt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsTwoSidedStencil</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae50b69f168185c77b3fce0b01370f504</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsTextureRectangle</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a16c786dfdc9cfd2bdc8dca3eaac790ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsVertexProgram</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a541094d21a61d7c5853b97d2d225aae3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsVertexProgramNV2</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aaf1669c54690e3decbd06f56e2571dc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsPixelProgram</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a82ea47808b6d04f247e1c635591c0d17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsVertexBufferObject</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a9b4b5c6670922eefbaf61135f6f9780a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLightSaturation</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a40a5e7f2c5b582a172b4345d1aa0f51b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFramebuffer</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5749ea56b79e5b752ff9b00ee57541c7</anchor>
      <arglist>(const FramebufferRef &amp;fbo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>currentFramebufferComplete</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a48c70ef4a879bd7ba658b04ebd193df5</anchor>
      <arglist>(std::string &amp;whyIncomplete=dummyString) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push2D</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>acca0f5da3d04278e36b31a424f0f0161</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push2D</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad130c8d09a294b0e5707e4e4daed56f2</anchor>
      <arglist>(const FramebufferRef &amp;fb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push2D</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a685fdb36574afc740a26cc5c86c5bb1f</anchor>
      <arglist>(const Rect2D &amp;viewport)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop2D</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a2ea271cacaf2a26d4f364b3082f99b5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a06e1c20feaa1a084cff66b5da3648169</anchor>
      <arglist>(const GWindow::Settings &amp;settings=GWindow::Settings(), class Log *log=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a6c33fd0bbefe9f676ff97c03e4cf4606</anchor>
      <arglist>(GWindow *window, class Log *log=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad8b056afeed70c49767bf375b89f03eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Color4 &amp;</type>
      <name>color</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af3eb44aa3c30a8e2612a41faefccd507</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ShadeMode</type>
      <name>shadeMode</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad72a274e6aef614af9054a03939a162d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a680d13f23c9f48c61caf0e6a69397338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCaption</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>afdd074ebb73c5cc4685e80dba496f46d</anchor>
      <arglist>(const std::string &amp;caption)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>screenshot</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5c0523a082116f9f6ffa39bf74107d39</anchor>
      <arglist>(const std::string &amp;filepath) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyResize</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a56a20e8c51d829b9c52dfaa9612305bf</anchor>
      <arglist>(int w, int h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>screenshotPic</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aea214aaccf40b1f0144bc28f10827d23</anchor>
      <arglist>(GImage &amp;dest, bool useBackBuffer=false, bool getAlpha=false) const</arglist>
    </member>
    <member kind="function">
      <type>int G3D_DEPRECATED</type>
      <name>getWidth</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aba533cdbd227e1d5b642c3cd5ff8522b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a0e2f4aff508df56d23615eb9c161bdd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int G3D_DEPRECATED</type>
      <name>getHeight</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa0555ce957b4399779ab938d46afdd5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a38001202925c1cb91714036651e66120</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStencilBitDepth</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>afeaf03baf0acce8250ac2e8baec23899</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getZBufferBitDepth</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a6531a0dc0986d983b2a1b417768957f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLight</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adbba7fbb95590beb5817e8a168bbf45e</anchor>
      <arglist>(int num, const GLight &amp;light)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLight</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aa0746be8bea6a7d31bda1df45e0426fd</anchor>
      <arglist>(int num, void *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpecularCoefficient</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ac0bfbf347bca0f41c631aa49b62d540a</anchor>
      <arglist>(float s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpecularCoefficient</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a1fe0082b8376d3fefe488dc7fc411d7c</anchor>
      <arglist>(const Color3 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShininess</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ac894d51566c6eb556dd8f8be4f29d700</anchor>
      <arglist>(float s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAmbientLightColor</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>adbbc801588d69bdddf8f2f6750540b68</anchor>
      <arglist>(const Color3 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAmbientLightColor</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a48b3d1ac3972f543d37679a2e0e63cb3</anchor>
      <arglist>(const Color4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableLighting</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aff174abb7e7fbbc007731f04998a660a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableLighting</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a9bdd0d272711130e5d42ddbe0490a3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>project</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a6ecc830538b96760ae5f6baf922f092a</anchor>
      <arglist>(const Vector4 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>project</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aea26dff609bd6f2fa44108c917e17a54</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>MilestoneRef</type>
      <name>createMilestone</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5433cd0831ff6cb075aa228055eb285a</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMilestone</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>af05fda6bfbf2fc9bd34a347cd15ca1ed</anchor>
      <arglist>(const MilestoneRef &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitForMilestone</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ae82cc49849b8b6b9df9546fb66e841a2</anchor>
      <arglist>(const MilestoneRef &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureShadowMap</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>aadf44d77d19f9c3acb471048ec40474c</anchor>
      <arglist>(uint textureUnit, const Matrix4 &amp;lightMVP, const TextureRef &amp;shadowMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureReflectionMap</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a7b130ce4e6e471b8069290cda3334305</anchor>
      <arglist>(uint textureUnit, TextureRef reflectionTexture)</arglist>
    </member>
    <member kind="variable">
      <type>GLenum</type>
      <name>BufferToGL</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a5f4132ddbd1367ae11ff575494833fe7</anchor>
      <arglist>[MAX_BUFFER_SIZE]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static RenderDevice *</type>
      <name>lastRenderDeviceCreated</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a69f199cabb778d613ac5b90734746283</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>VAR</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a38bca19a2321fa916e95724e809440c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>VARArea</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ab932b234576148b99815ee39ac858d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Milestone</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>a46660b0fce0a2ed0d5b3a8da64f35cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>UserInput</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>abea689aa736c9c26de392af244f1bff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>VertexAndPixelShader</name>
      <anchorfile>classG3D_1_1RenderDevice.html</anchorfile>
      <anchor>ad4fe11af76bf78bcfe35662c4fdef729</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::SDLWindow</name>
    <filename>classG3D_1_1SDLWindow.html</filename>
    <base>G3D::GWindow</base>
    <member kind="function">
      <type></type>
      <name>SDLWindow</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a4c69853d15662e21ceda218d197124bf</anchor>
      <arglist>(const GWindowSettings &amp;settings)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SDLWindow</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ab62c873fec1d0e17582e4b40a1e91cac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSettings</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>add079f8ae5c9eef1043e0a17bc66e688</anchor>
      <arglist>(GWindowSettings &amp;settings) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>width</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a723ca1664551904a74faad7e12746a50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>height</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ae39ac279634d08863248f7cd59331cd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Rect2D</type>
      <name>dimensions</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>af3f72c4b4a9ec618fb3b13700177f3f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDimensions</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a7ca82be50edb5f52c5e70c197cd9d29a</anchor>
      <arglist>(const Rect2D &amp;dims)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPosition</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ae1605fb9b0c0b0c86460213b0be6de49</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasFocus</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a686c767bfd9d8d7d7bf6a1c39bfb504c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getAPIVersion</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a38c31787002f687d8e7550c39339038c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getAPIName</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a3df73f11db22cda8164cd2ce8664babb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGammaRamp</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ae91fe400dd6216ca5bc80a3e1b48f54e</anchor>
      <arglist>(const Array&lt; uint16 &gt; &amp;gammaRamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCaption</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ae26b64f3448fab3867445d35ac01cf83</anchor>
      <arglist>(const std::string &amp;caption)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>caption</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ac24105673e902fa2ca8adc00e5012db7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIcon</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a7a6833463c6a5c3adc73ba72fd200754</anchor>
      <arglist>(const GImage &amp;image)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>swapGLBuffers</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a6c363f2221af7aebf00a2b602f0b23db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyResize</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a7d14e0a3421ed0e15617c221059d6d56</anchor>
      <arglist>(int w, int h)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numJoysticks</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ae05f80e0c1d07a236d3b0cee151944fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGameControllerConnected</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a303a8616213034929807e7585e3d8d0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>joystickName</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>aa88a662f3b213e117d3f1924ae51fc57</anchor>
      <arglist>(unsigned int sticknum)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getJoystickState</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a8b7056ccfe1d49882de5e23572020f61</anchor>
      <arglist>(unsigned int stickNum, Array&lt; float &gt; &amp;axis, Array&lt; bool &gt; &amp;button)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRelativeMousePosition</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>af41fc3780f5111d8d37bdc3c4060ae5e</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRelativeMousePosition</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a682a575084edf3ede95297a274f67906</anchor>
      <arglist>(const Vector2 &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRelativeMouseState</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a1fdcb85f28572e771b3432b57da5677a</anchor>
      <arglist>(Vector2 &amp;p, uint8 &amp;mouseButtons) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRelativeMouseState</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a0d0521261ba27515cdf925d80a80c7e4</anchor>
      <arglist>(int &amp;x, int &amp;y, uint8 &amp;mouseButtons) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRelativeMouseState</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a826dd46fd32413fea752265c97985237</anchor>
      <arglist>(double &amp;x, double &amp;y, uint8 &amp;mouseButtons) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMouseVisible</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>acd1289200b41824d62359c783662e7c3</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>mouseVisible</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ae1f6bd8781f1d13c051e6dc4d0f6d919</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInputCapture</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a687fa7ea3f6d6d33fc53f58f8e02c0af</anchor>
      <arglist>(bool c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>inputCapture</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ac10d0a33401adcae7ffa33b81628fca5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pollEvent</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>abf37b8a85afa2b02a00ad441c4c51e65</anchor>
      <arglist>(GEvent &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>::SDL_Joystick *</type>
      <name>getSDL_Joystick</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>ae249fc9a0abca2f9d07a8b21e6e3721c</anchor>
      <arglist>(unsigned int num) const</arglist>
    </member>
    <member kind="function">
      <type>::SDL_GameController *</type>
      <name>getSDL_GameController</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a618f50725659b1838917d679e50c4863</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSDL_GameController</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a2df455f5a12d904812a0ddb3ec2e98f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIcon</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a3acca1ae4a2229598acf9e487564fc76</anchor>
      <arglist>(const std::string &amp;imageFilename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a461fa558ddd4856222eef0b2e6dca9ad</anchor>
      <arglist>(int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>inputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aec1ed6e975a7a66ee45c35d03cea64ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incInputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a44113d8eae80225a33426b6a038dfe7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>decInputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ad72281f9b81788defd9665b98869abb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>aafb69879429e9a253cb36faf86f17894</anchor>
      <arglist>(int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ab5072008a18e3c6c288051673d4b82b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incMouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ae9747c54476ae68ebadb694057a7c53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>decMouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a75e7c0283047b7ebf9914ae5aafd086e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requiresMainLoop</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a263694c59a956fae648201e32cc96a4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushLoopBody</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a318b21aaea7414afab5535e8177399e1</anchor>
      <arglist>(void(*body)(void *), void *arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushLoopBody</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>ab47b512193c9bfb0f05a2e3b190c05a7</anchor>
      <arglist>(GApplet *applet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>popLoopBody</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a455a55a3408475f7030f15f62fe4fa87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runMainLoop</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a49d3799f95230f3c410afb26f2b182d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RenderDevice *</type>
      <name>renderDevice</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a346c291152ce92d966134f113680238b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeCurrent</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a9368ee3b4d32100d9159b901c9157760</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const GWindow *</type>
      <name>current</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a9d90890f8cdd458354c2129b672fe399</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>reallyMakeCurrent</name>
      <anchorfile>classG3D_1_1SDLWindow.html</anchorfile>
      <anchor>a5869873c32d542ddcbc00998173895c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>notDone</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a713a7a98ded4f43499ee45e1361c0863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>executeLoopBody</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a4e6f4f05277907be7d579e0fa1339699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void G3D_DEPRECATED</type>
      <name>loadExtensions</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a225a99702e992e0924e2655e5d02bd60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_inputCaptureCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a6dcaebc805b0dad018c0b9f1855c9ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_mouseHideCount</name>
      <anchorfile>classG3D_1_1GWindow.html</anchorfile>
      <anchor>a8d571497041c0be6902e5b8814907f4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Set</name>
    <filename>classG3D_1_1Set.html</filename>
    <templarg>class T</templarg>
    <class kind="class">G3D::Set::Iterator</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Set</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>a8447c9ddee866b5c3c5d7eb6efb97149</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>a5b89ee56932d04ac267c0e07959ff7f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>a95020175bfce55219e0585b91adab0ba</anchor>
      <arglist>(const T &amp;member) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>a00382422938f79f3cfb0a73e8b142abe</anchor>
      <arglist>(const T &amp;member)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>afb6fec1d30b0059866bcfd77a6d1d25e</anchor>
      <arglist>(const T &amp;member)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; T &gt;</type>
      <name>getMembers</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>aef64fde54103f13c11ade7637f30a695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMembers</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>a51d0a40c448ab220929dd11fcdb017e0</anchor>
      <arglist>(Array&lt; T &gt; &amp;keyArray) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>a2266963220d6fc52223bffe7c80b49cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAll</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>ac29c879c6a1d7aaf26a2e5bce2b0220f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>begin</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>a90d9cc1fdb32ce0867e3dc9e003b32cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Iterator</type>
      <name>end</name>
      <anchorfile>classG3D_1_1Set.html</anchorfile>
      <anchor>a2fa75089ccc6d4ad7deabfb1d684af45</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GApp::Settings</name>
    <filename>classG3D_1_1GApp_1_1Settings.html</filename>
    <member kind="function">
      <type></type>
      <name>Settings</name>
      <anchorfile>classG3D_1_1GApp_1_1Settings.html</anchorfile>
      <anchor>aee22f65842cd6f4ce75ff4398e73b8dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>GWindow::Settings</type>
      <name>window</name>
      <anchorfile>classG3D_1_1GApp_1_1Settings.html</anchorfile>
      <anchor>a30d85a2d3958f4c1a8bbf5a726aab500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dataDir</name>
      <anchorfile>classG3D_1_1GApp_1_1Settings.html</anchorfile>
      <anchor>abc69d19ed096cc68682d87989188a94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>debugFontName</name>
      <anchorfile>classG3D_1_1GApp_1_1Settings.html</anchorfile>
      <anchor>a40075c87395dfe5a3470a64e7da6541f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logFilename</name>
      <anchorfile>classG3D_1_1GApp_1_1Settings.html</anchorfile>
      <anchor>ad19a06704aa802383ec8b97068899205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>writeLicenseFile</name>
      <anchorfile>classG3D_1_1GApp_1_1Settings.html</anchorfile>
      <anchor>ad5f1c5e790598742a550c24da04a13cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useNetwork</name>
      <anchorfile>classG3D_1_1GApp_1_1Settings.html</anchorfile>
      <anchor>ab789c03747ae59501100fdeb6988f4e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::GWindow::Settings</name>
    <filename>classG3D_1_1GWindow_1_1Settings.html</filename>
    <member kind="function">
      <type></type>
      <name>Settings</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>ae3d95d7a8d6d67835c46e1d71fab19aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>width</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a1e5f024381547e45fdf3337581d181fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>af4a036d864434723688e8c127cc63d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a67e9eaa4fdbbad0e518a93a878b4956c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a8747d1fb5cc811da8c41d3dd8d0edd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>center</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>ada66a37156aacc66dfb7fce25cc9219d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rgbBits</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a9e72710fead14cf8d3d49c272872187a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>alphaBits</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a8cb810bcd7847869317370ed4dd9e7f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>depthBits</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a1f91f139f0f2b61944d58d96a03d7bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stencilBits</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a5b71742fa97367e53551fd22701aaf8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fsaaSamples</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a4f52aa7f0180ce3f6a67f40e09c7ef2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hardware</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a768dad87ef92c3c7746285525041818f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fullScreen</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a52ccce35ebc519909388cafc72452117</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>asychronous</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>affbd5361dffb3d933e67269cbc21e7dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>stereo</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>ac43c57518e0cd45e2e0fc3d499dd1808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lightSaturation</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a77758185cb4d1edc1e5cec3b66dc7e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>refreshRate</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a2b1c2db3ab7dbc1aa692e4b1fbe7fd02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>resizable</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a30441b145ecdd5a753f22c43204aad7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>framed</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>ab3ce0d7c791f04c04d5dbdef402f7913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a758a5160ee8799c8b4de47c3f2c3c496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>defaultIconFilename</name>
      <anchorfile>classG3D_1_1GWindow_1_1Settings.html</anchorfile>
      <anchor>a45cd1e6ad0b89d015e75c59730a013f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextInput::Settings</name>
    <filename>classG3D_1_1TextInput_1_1Settings.html</filename>
    <member kind="function">
      <type></type>
      <name>Settings</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>a96fc63a534acc27aaf6f7aeae95f7a1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>cComments</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>ae1776481da9f9c593c991be87544c98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>cppComments</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>a34b9d8f7be0f1a4c08b88333a63f5a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>escapeSequencesInStrings</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>a6c29ecd8c85fda8ddcc0c695dacb0c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>otherCommentCharacter</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>ae8f36ac4680125c5dc6db1b611aaf0b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>otherCommentCharacter2</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>a729a3b33ebbba6b34c9daafccfadb236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>signedNumbers</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>a2375228e0789532459cf0214eda0e62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>singleQuotedStrings</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>ad04be23b98d53ac28381cd38ca13b8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sourceFileName</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>ad1b7f3c1fb6b112cf3a70531c92dc3eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>startingLineNumberOffset</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>a5067cbbda5a56d2f87b458f949039852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>msvcSpecials</name>
      <anchorfile>classG3D_1_1TextInput_1_1Settings.html</anchorfile>
      <anchor>a8ed2f87ab44971ffc60a634789e25c2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Texture::Settings</name>
    <filename>classG3D_1_1Texture_1_1Settings.html</filename>
    <member kind="function">
      <type></type>
      <name>Settings</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>a28a5bfd58e24390412b1668b2cb08d0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>hashCode</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>a017617269e654c2dcc63022eef4fa0b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Settings &amp;</type>
      <name>defaults</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>a553604e4ac39b4ffb5b01036da274fd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Settings &amp;</type>
      <name>video</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>a46b8ae30b5c8bd50f38da8d4bb4da08a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Settings &amp;</type>
      <name>shadow</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>ab4e7ea5ec7d49ffd20f8784f95c56423</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>InterpolateMode</type>
      <name>interpolateMode</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>a5e9c3548202793aae6e31b031f66ab50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WrapMode</type>
      <name>wrapMode</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>a694332b1967453e82df5166858c9163c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DepthReadMode</type>
      <name>depthReadMode</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>aa96f57ae710abe515da026c7347a3098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>maxAnisotropy</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>ae3bee74539b9d19fea5380b62157632a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoMipMap</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>aeb89ed05eeff5636eec7072a0e6f90da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxMipMap</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>a5275b2e7a95082e7230e4934bc0d1cf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minMipMap</name>
      <anchorfile>classG3D_1_1Texture_1_1Settings.html</anchorfile>
      <anchor>a058a5cbdc340fbb4fee98bfd0f89641f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Shader</name>
    <filename>classG3D_1_1Shader.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function">
      <type>bool</type>
      <name>hasArgument</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>ad20ddf5f33643b45fefcfe8bb726b37f</anchor>
      <arglist>(const std::string &amp;argname) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPreserveState</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a0f2f5537c1bc31171f4454653c3eec98</anchor>
      <arglist>(bool s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>preserveState</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a6a38d10a2a2107a440fefeb21ba0b19c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a6acdb8a1588fab451d7527089a86b45d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beforePrimitive</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a47ba7e5615c1a4013996db5497cede5d</anchor>
      <arglist>(class RenderDevice *renderDevice)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>afterPrimitive</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>aa0bd818d38fb84075db735efc6b73098</anchor>
      <arglist>(class RenderDevice *renderDevice)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>messages</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>aab93fbb1f28c180659d9da9a6f79e837</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ShaderRef</type>
      <name>fromFiles</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a970d14f83905a8bee862ae348c578529</anchor>
      <arglist>(const std::string &amp;vertexFile, const std::string &amp;pixelFile, UseG3DUniforms u=DEFINE_G3D_UNIFORMS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ShaderRef</type>
      <name>fromStrings</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a4e25f07c15f7b8c0e7063ff90e612a14</anchor>
      <arglist>(const std::string &amp;vertexCode, const std::string &amp;pixelCode, UseG3DUniforms u=DEFINE_G3D_UNIFORMS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ShaderRef</type>
      <name>fromStrings</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>ac3562eb1848017bf5a799eae13bbee18</anchor>
      <arglist>(const std::string &amp;vertexName, const std::string &amp;vertexCode, const std::string &amp;pixelName, const std::string &amp;pixelCode, UseG3DUniforms u=DEFINE_G3D_UNIFORMS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>supportsVertexShaders</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>ae0f2dd0e6dba6ceef5212373e902de32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>supportsPixelShaders</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>ade5c9875ee57ae794520a446dda1e111</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>VertexAndPixelShader::ArgList</type>
      <name>args</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a14de56147284e9fdf46caabc326e85f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Shader</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a2eb1e22c7ad0b013d4650a71267ad3db</anchor>
      <arglist>(VertexAndPixelShaderRef v, UseG3DUniforms u)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Shader</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a9191c88f0f1533d837968a5216ab8cc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VertexAndPixelShaderRef</type>
      <name>_vertexAndPixelShader</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>ab85f4c4aa60e61abb909564ea58fb598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UseG3DUniforms</type>
      <name>_useUniforms</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>afe1dde58f74d727fb6a91e01dd24b727</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_preserveState</name>
      <anchorfile>classG3D_1_1Shader.html</anchorfile>
      <anchor>a7d068728c3c5db7b2ef404e15ca3695b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Shape</name>
    <filename>classG3D_1_1Shape.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a2991ba10964e54c1a6241601d72fde33</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a747643189bb596197db004fb9ae3cbb1</anchor>
      <arglist>(class RenderDevice *rd, const CoordinateFrame &amp;cframe, Color4 solidColor=Color4(.5,.5, 0,.5), Color4 wireColor=Color3::black())=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3d43a4cfb48ee5fad4c62a4e563d8f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>af24833903a0d3e336c05d3f763b077f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a8c83969ebefbc0ea6b08c675a4a6da72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cdc30906056508d91c8fbc8012c6e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a62c8b5504a00b0e83384b506ecefa036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ddd2389f3223bcf50c2066e7c877767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cc634a9611ef8f902cd59101b53a471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>ab71af0f244ad7c155a8d3ae9b06786ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3dcd66fc09e3e7542a258cc364a08f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a470ee3f279a66cf7f24a33b3d7882142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>aaa54c9f8e2996ed83cf914dd091f6bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6079582403e91245db8e8c84935d7851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a0c6d6e09678f9fafa99f39c7ad783a48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a717a33c14c235862869010700e1a5c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a875d0e9c54adbe065257157c88a007f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a07394930c6f367c1676ff63688ae1022</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7a7cca93a643d1d932b148f24c383448</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>ab958da090a19f85a3590c0719b879180</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a00d4cb802e7781729454a9f2687e7714</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AABox</type>
      <name>boundingAABox</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ec36af3cb42da07cd27272f8936665f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>aa679006aa3ef4d43545308dc1533bfb5</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a52e98bf4296b52c150f034d39951a7a4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3ec912e5a94993c026ccfbdd7e7ba543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>typeToString</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a5d042e391bc27f781099b673ac9d8388</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Sky</name>
    <filename>classG3D_1_1Sky.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Sky</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>a5ccb8c94270a057c96f0b45f095eaff2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>a7465cd4c63cfd1b124efc41691b619a9</anchor>
      <arglist>(RenderDevice *renderDevice, const class LightingParameters &amp;lighting)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>a6dfb3a529be3470a4fdafb26cded8a15</anchor>
      <arglist>(const class LightingParameters &amp;lighting)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderLensFlare</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>acaee330f984c862efc02017a9810dfce</anchor>
      <arglist>(RenderDevice *renderDevice, const class LightingParameters &amp;lighting)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderLensFlare</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>a8edf6529eca2055cd73447d032af1daa</anchor>
      <arglist>(const class LightingParameters &amp;lighting)</arglist>
    </member>
    <member kind="function">
      <type>TextureRef</type>
      <name>getEnvironmentMap</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>a4657912fa6dc2063e158c8a6d5442cb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SkyRef</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>a65b63812e1d7b59976773fa955495064</anchor>
      <arglist>(class RenderDevice *renderDevice, const std::string &amp;directory, const std::string &amp;filename=&quot;plainsky/null_plainsky512_*.jpg&quot;, bool drawCelestialBodies=true, double quality=1.0, int scaleDownFactor=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SkyRef</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>aadd21c123b68eaf0afc6308543e190f6</anchor>
      <arglist>(class RenderDevice *renderDevice, const std::string &amp;directory, const std::string filename[6], bool drawCelestialBodies=true, double quality=1.0, int scaleDownFactor=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SkyRef G3D_DEPRECATED</type>
      <name>create</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>ab0485b407324aba1664789aa663471a5</anchor>
      <arglist>(class RenderDevice *renderDevice, const std::string &amp;directory, const std::string &amp;filename=&quot;plainsky/null_plainsky512_*.jpg&quot;, bool drawCelestialBodies=true, double quality=1.0, int scaleDownFactor=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SkyRef G3D_DEPRECATED</type>
      <name>create</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>ac80d7547601997080e57bd99cdcb9e4d</anchor>
      <arglist>(class RenderDevice *renderDevice, const std::string &amp;directory, const std::string filename[6], bool drawCelestialBodies=true, double quality=1.0, int scaleDownFactor=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SkyRef</type>
      <name>fromCubeMap</name>
      <anchorfile>classG3D_1_1Sky.html</anchorfile>
      <anchor>a5022b1553974344d90e93b3b64495ca5</anchor>
      <arglist>(RenderDevice *rd, TextureRef _cubeMap, const std::string &amp;directory, bool _drawCelestialBodies=true, double quality=1.0)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Sphere</name>
    <filename>classG3D_1_1Sphere.html</filename>
    <member kind="function">
      <type></type>
      <name>Sphere</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>aa88dd8776178c487695b19ddb6f9a0f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sphere</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a02714b5187485fe7ff7dc1cc03979e92</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a7fccb3a521f1b421d9d8052b8867aa83</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>af10d36d53eca55e1772e37d6dd9d825d</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sphere</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>ad5eacc750530efa4dec4af319f106018</anchor>
      <arglist>(const Vector3 &amp;center, float radius)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Sphere</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>adac15d48161f3fe83d3f9f882ff0aedb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a07f1370e91357860880dd425d4ea92c5</anchor>
      <arglist>(const Sphere &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a8fdda4a9c6d5dbf4690620fb80a5273b</anchor>
      <arglist>(const Sphere &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a7f0d50468e57b98ffce2d83123575a32</anchor>
      <arglist>(const Vector3 &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a9bf2b9b85beb103ef8778f210ba8a7eb</anchor>
      <arglist>(const class Plane *plane, int numPlanes, int32 &amp;cullingPlaneIndex, const uint32 testMask, uint32 &amp;childMask) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a475129dc5a8240770cf7c69a13498380</anchor>
      <arglist>(const class Plane *plane, int numPlanes, int32 &amp;cullingPlaneIndex=dummy, const uint32 testMask=-1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a799a165a4998df9f0c31f251adb61567</anchor>
      <arglist>(const Array&lt; Plane &gt; &amp;plane, int32 &amp;cullingPlaneIndex, const uint32 testMask, uint32 &amp;childMask) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>culledBy</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a4106268b7e79a4928dc0b4de9f15daf9</anchor>
      <arglist>(const Array&lt; Plane &gt; &amp;plane, int32 &amp;cullingPlaneIndex=dummy, const uint32 testMask=-1) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a2898c6bf595760f3c110fff6bdd7735c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>acbba9aaa745471f284b95961ac763ccd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>surfaceArea</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a806f70e98efabff85e5661a9ebdd8185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a47b014caf50375033ec0b8bcd2c549c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomSurfacePoint</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>aeb6d6d960affb25a99f96ca6cd3f973f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>a2d39eabf7bf538a5bb0a3349baa5a15e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>ad6393cebaa705762bb2e0e907c65b504</anchor>
      <arglist>(class AABox &amp;out) const</arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>abb32f673070d45a0b5a098a9ba67530b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>radius</name>
      <anchorfile>classG3D_1_1Sphere.html</anchorfile>
      <anchor>ac775b73049539cd480359f0f6a9b75e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::SphereShape</name>
    <filename>classG3D_1_1SphereShape.html</filename>
    <base>G3D::Shape</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba9f1c06f4552d34089fcde0ca1099bdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba696d7e4b5a38bfdf50b122567566766f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baec16f324616f857865f293da89fac5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7ba2900f51d7fd57c7dd38e28f85dbd4a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab54ffa277f3c5bcbf27794fe25b82c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RAY</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bacbd71e0763756a82bc87e2e31025e497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPSULE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bad9101a3eb39e7d3f5c1ec1f69e841862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLANE</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7baa068e8e39078c9ca34945ac63456a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXES</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a7620e94679a22fee807eeb9e17622d7bab8adc5e1b0b464bee8a36bf08bd4e332</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SphereShape</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>aad5e9eeece8c4ef54fc5da410b4f654a</anchor>
      <arglist>(const G3D::Sphere &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SphereShape</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>a9e40ede2d59f4906825992ec15e13eec</anchor>
      <arglist>(const Vector3 &amp;center, float radius)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SphereShape</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>a8f92e06199a458f1fbe4fe3d770c2af2</anchor>
      <arglist>(float radius)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>ab6e0b3f589ccfab564c84a1f3c4c1d83</anchor>
      <arglist>(RenderDevice *rd, const CoordinateFrame &amp;cframe, Color4 solidColor=Color4(.5,.5, 0,.5), Color4 wireColor=Color3::black())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>af4c414c9da409153444ec2a0975683f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>af64225c6f812245e097d7048d231c516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Sphere &amp;</type>
      <name>sphere</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>a17eaf3f8d6cfe4d11bc790627ade09fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRandomSurfacePoint</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>abab6c86e065c91179decea079b9cf932</anchor>
      <arglist>(Vector3 &amp;P, Vector3 &amp;N=Vector3::dummy) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>randomInteriorPoint</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>a2f7275bc0a34676b3034f55d3e4f0c29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>area</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>a807e0b486bfdb5defc99b1d800cf4ca5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>volume</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>a75400d855176e6e951befe48b15ec290</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>a16c290d8cd2f5180b80d9a3682847463</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sphere</type>
      <name>boundingSphere</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>a8e7ce215a0ceb7c265f86acfbc9267f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AABox</type>
      <name>boundingAABox</name>
      <anchorfile>classG3D_1_1SphereShape.html</anchorfile>
      <anchor>a532427772c0956b3a3866897e2274824</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a3d43a4cfb48ee5fad4c62a4e563d8f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Box &amp;</type>
      <name>box</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a8c83969ebefbc0ea6b08c675a4a6da72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame &amp;</type>
      <name>axes</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>af24833903a0d3e336c05d3f763b077f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cdc30906056508d91c8fbc8012c6e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Ray &amp;</type>
      <name>ray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a62c8b5504a00b0e83384b506ecefa036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6ddd2389f3223bcf50c2066e7c877767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Cylinder &amp;</type>
      <name>cylinder</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a4cc634a9611ef8f902cd59101b53a471</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a470ee3f279a66cf7f24a33b3d7882142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Capsule &amp;</type>
      <name>capsule</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>aaa54c9f8e2996ed83cf914dd091f6bf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a6079582403e91245db8e8c84935d7851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a0c6d6e09678f9fafa99f39c7ad783a48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; int &gt; &amp;</type>
      <name>indexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a717a33c14c235862869010700e1a5c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Array&lt; Vector3 &gt; &amp;</type>
      <name>vertexArray</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a875d0e9c54adbe065257157c88a007f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>typeToString</name>
      <anchorfile>classG3D_1_1Shape.html</anchorfile>
      <anchor>a5d042e391bc27f781099b673ac9d8388</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::RenderDevice::StatusInfo</name>
    <filename>classG3D_1_1RenderDevice_1_1StatusInfo.html</filename>
    <member kind="variable">
      <type>uint32</type>
      <name>minorStateChangeCount</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>a7ce7440a12ae1f8c7e39c34a46c6a76a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>minorOpenGLStateChangeCount</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>a8ab25cdf9476ab20ab46a8147e499cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>majorStateChangeCount</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>aafefb0ef27d0c6e317382ffea33cee57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>majorOpenGLStateChangeCount</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>a72719d0d6375533e2d6e916ecf880603</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>pushStateCount</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>a35e002e383dfa33ca58dcae43bd513b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>primitiveCount</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>a090b298023dae930b2af6930cf39629b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>triangleCount</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>a6d5ee8f3a0d1541d846f66d50cea584e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RealTime</type>
      <name>swapbuffersTime</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>ae1ab0603c1f7fb290b61fbadc322fa59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>frameRate</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>a6dfe49df6cc1995d5b58d7d433eee977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>smoothFrameRate</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>ae32f54d4e0b59eb68590437356d22423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>triangleRate</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1StatusInfo.html</anchorfile>
      <anchor>a0d28d90042420a1ca0bd22b31d2e70ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::RenderDevice::RenderState::Stencil</name>
    <filename>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>ad8cc36e24e9c766a9921aed8d5622343</anchor>
      <arglist>(const Stencil &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>a203525af52e5495997fb0bf082581a7a</anchor>
      <arglist>(const Stencil &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>StencilTest</type>
      <name>stencilTest</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>aeb4dd944af1f9f7f16be4194db5dd859</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stencilReference</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>a09b7e1be81671eec76c684100a223a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stencilClear</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>a87b987db0cf918678885e7a32320c03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StencilOp</type>
      <name>frontStencilFail</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>af85ce74130133d8402584f5321d87773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StencilOp</type>
      <name>frontStencilZFail</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>a5ecf378074e1a524f5bafa725a8d35e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StencilOp</type>
      <name>frontStencilZPass</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>a3838601eb2303f1c46a52d8f0a7eea37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StencilOp</type>
      <name>backStencilFail</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>ada8d01d448b6cf52cc58bef1d7c1f636</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StencilOp</type>
      <name>backStencilZFail</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>a84ce78c3ce78b9b0ec93e21da1595012</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StencilOp</type>
      <name>backStencilZPass</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1Stencil.html</anchorfile>
      <anchor>a21481e43ff4f3d07894dc2054ad5ecc6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Stopwatch</name>
    <filename>classG3D_1_1Stopwatch.html</filename>
    <member kind="function">
      <type></type>
      <name>Stopwatch</name>
      <anchorfile>classG3D_1_1Stopwatch.html</anchorfile>
      <anchor>ace9965cecbc37d6b7528688967521da2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>FPS</name>
      <anchorfile>classG3D_1_1Stopwatch.html</anchorfile>
      <anchor>a41e879019b88c9f785f03d7c4b17eb7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RealTime</type>
      <name>elapsedTime</name>
      <anchorfile>classG3D_1_1Stopwatch.html</anchorfile>
      <anchor>aab86bbcf5f5ab66d69f2b366827bcac0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RealTime</type>
      <name>smoothElapsedTime</name>
      <anchorfile>classG3D_1_1Stopwatch.html</anchorfile>
      <anchor>aaf64f4f0810329155f81c90012660ff2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>smoothFPS</name>
      <anchorfile>classG3D_1_1Stopwatch.html</anchorfile>
      <anchor>a122e74a1ab836ff05a92c8f448d95e0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>elapsedCycles</name>
      <anchorfile>classG3D_1_1Stopwatch.html</anchorfile>
      <anchor>a79429e28dacf45a4c589ede616850707</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tick</name>
      <anchorfile>classG3D_1_1Stopwatch.html</anchorfile>
      <anchor>a041f2e2c58fd074becc5f38777041fbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tock</name>
      <anchorfile>classG3D_1_1Stopwatch.html</anchorfile>
      <anchor>a0df9fd9fca65da0ef4821df1be2d9cd2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::System</name>
    <filename>classG3D_1_1System.html</filename>
    <member kind="typedef">
      <type>bool(*</type>
      <name>OutOfMemoryCallback</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a2b2dbe9b1c672b595dd91ce232995d54</anchor>
      <arglist>)(size_t size, bool recoverable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a0b7851e106f4a338c14f63c3089bd486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasMMX</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>ab3cb790096bd78d2a32ade469a7d434c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasCPUID</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a5466a61ccd8bdebe2ec5ec21773e3c5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasSSE</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a1f7bda448acf7cc28ee93536f6847a2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasSSE2</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a688af8b2e43bddabebbc176dcc436843</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasSSE3</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a7ff0df5164d610b297773ac7dddcceab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>has3DNow</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>ac5326d1782bcb02ea5146fbf5b8079c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasRDTSC</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>aef9a2c6d343a446c284233339f4138c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>cpuVendor</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>ab84aca951ba762f66032505afc5fe203</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>operatingSystem</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a961460ce166a963f8cd04c4d35e3468e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>cpuArchitecture</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a35a691ed863fbb86f53dcf339657b6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static G3DEndian</type>
      <name>machineEndian</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a5869998ead9e9074f2b82fe810ce7c17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>alignedMalloc</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a99206dc11f1f8a278809e79c77147815</anchor>
      <arglist>(size_t bytes, size_t alignment)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>malloc</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>ab6d95c7b408d1d936713c2524035b1cb</anchor>
      <arglist>(size_t bytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>calloc</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a8c48b9f860e17b9dc09a9be04d91bccc</anchor>
      <arglist>(size_t n, size_t x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>realloc</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a790194f769abd96b800ee019bfdd9d0f</anchor>
      <arglist>(void *block, size_t bytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>mallocPerformance</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a477ed04a33796cf1c71d6daa19328352</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resetMallocPerformanceCounters</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a37ce389a30bf07faa9b3d463dec77dad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>mallocStatus</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>afbb14f0b9a7c096bee092a34971ace3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>free</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a3c091f0bae47dc17371b0621a20fb4c2</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>alignedFree</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>ab76853b8c8bded369b4268f4c78c23d5</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>memcpy</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>aaa3b0e596ea07299c9b2ead7c81ea71b</anchor>
      <arglist>(void *dst, const void *src, size_t numBytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>memset</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>afb378250e0288644ef83a83a1c4026ef</anchor>
      <arglist>(void *dst, uint8 value, size_t numBytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>currentProgramFilename</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a0efa16a99920870516d1103a980e7a9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>version</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>ab96fae0404730283cfeab1d8a6f2a7a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>build</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>aa37fcb0e551abbd6f17f56d53b9422cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sleep</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a748ccc9150793412d6721dfce3900418</anchor>
      <arglist>(RealTime t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>consoleClearScreen</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>abfd1adfcc8549bd086660766bd7022f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>consoleKeyPressed</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a958919b8270e492bbd345fb1826cc029</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>consoleReadKey</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a52bdd6ca6e3f478bfaaaac7655114700</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RealTime</type>
      <name>getTick</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a9e2f376a85791f5fc20eab356d60f373</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RealTime</type>
      <name>getLocalTime</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a466f7fbf1d785175de7d7ed4fabdbf1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RealTime</type>
      <name>time</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>acc67b3c1cb126362a011087171dba0a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OutOfMemoryCallback</type>
      <name>outOfMemoryCallback</name>
      <anchorfile>classG3D_1_1System.html</anchorfile>
      <anchor>a6de96170db938cae2835d0bd0935e7f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Table</name>
    <filename>classG3D_1_1Table.html</filename>
    <templarg>class Key</templarg>
    <templarg>class Value</templarg>
    <class kind="class">G3D::Table::Entry</class>
    <class kind="class">G3D::Table::Iterator</class>
    <member kind="function">
      <type></type>
      <name>Table</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a06b83e71aa906d416a1b519de4bbe674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Table</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a288000c6c2061921bb055b286e84841d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Table</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a7154d4a41cb51499748519c35c33681c</anchor>
      <arglist>(const Table&lt; Key, Value &gt; &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>Table &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a18317272bdcad86e05bebb00e1f68f5b</anchor>
      <arglist>(const Table&lt; Key, Value &gt; &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>debugGetDeepestBucketSize</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a656cf6d18e62a8af546d3ef5cec83596</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>debugGetLoad</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a84d50c47b8cf73c706eded3346b31858</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>debugGetNumBuckets</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a574353caf712d459dc973d3712ea8188</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>begin</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>acd8b66fbc911eb9de7d56ffa348ff9e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Iterator</type>
      <name>end</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a37cb959badf7d680d913d85ef542aace</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a48e3104d18c12450f57e101f80a354e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a9857d22503c4188f6d34fb39c110702a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a417bb4ec628ab186089f8744c1dba371</anchor>
      <arglist>(const Key &amp;key, const Value &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>ac96d04555ba91a13e06b90d675e57d68</anchor>
      <arglist>(const Key &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>Value &amp;</type>
      <name>get</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a513e41dee691681ae236ea8ab1bbc6c6</anchor>
      <arglist>(const Key &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a12d217ec65c5bd9664eaa4060e2ec6cb</anchor>
      <arglist>(const Key &amp;key, Value &amp;val) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsKey</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>ace24330e0708ef7ee961db13833418f3</anchor>
      <arglist>(const Key &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>Value &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>afd03de6174dd4336345915b6848d24ca</anchor>
      <arglist>(const Key &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Key &gt;</type>
      <name>getKeys</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>aefb6039f035d446c4488ce57d153dc30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getKeys</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>a8b1741661fc1c6bf8a39c6a62f96811a</anchor>
      <arglist>(Array&lt; Key &gt; &amp;keyArray) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteKeys</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>ae5af9cfbaef76c854cc58bd841d1d690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteValues</name>
      <anchorfile>classG3D_1_1Table.html</anchorfile>
      <anchor>adb2ee856565bf54bd1935ae915571999</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextInput</name>
    <filename>classG3D_1_1TextInput.html</filename>
    <class kind="class">G3D::TextInput::BadMSVCSpecial</class>
    <class kind="class">G3D::TextInput::Settings</class>
    <class kind="class">G3D::TextInput::TokenException</class>
    <class kind="class">G3D::TextInput::WrongString</class>
    <class kind="class">G3D::TextInput::WrongSymbol</class>
    <class kind="class">G3D::TextInput::WrongTokenType</class>
    <member kind="enumeration">
      <type></type>
      <name>FS</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a158e8d91a8721835ac74437af5b24789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FROM_STRING</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a158e8d91a8721835ac74437af5b24789a9fb5c4fefbeb133ad11c078d08daf357</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Settings</type>
      <name>Options</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a83cda9a99db5ba5a7bf0b71419437545</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FROM_STRING</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a158e8d91a8721835ac74437af5b24789a9fb5c4fefbeb133ad11c078d08daf357</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextInput</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a54b9dee7a49c35be549a80caaae91fbc</anchor>
      <arglist>(const std::string &amp;filename, const Settings &amp;settings=Settings())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextInput</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a298339a24cbe8cb5766bd1af639d5df6</anchor>
      <arglist>(FS fs, const std::string &amp;str, const Settings &amp;settings=Settings())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMore</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a5ba99e003482d55007e72066b6abd5fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Token</type>
      <name>read</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>af89ab89b0d835c68cee5c2d17fc4cf51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>readNumber</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a8d951271115d8b604428a5daa2ffd3ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Token</type>
      <name>readStringToken</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a2ea73c20a83188206a45f6b2fb023c0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readString</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a7e2bcf0a8bc70866aab62891d8cc6f49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readString</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a65e09d7c460c7375dab6dcc631aafa4d</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Token</type>
      <name>readSymbolToken</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a3c5c891a154163390bb5f9fa1ef5c56e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readSymbol</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a9ac2938eea2427381887ca97381bdfe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readSymbol</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a8310acadce4b0083961b7a9eb6205b68</anchor>
      <arglist>(const std::string &amp;symbol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readSymbols</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>af119d3bce80050e550918217fa366ea5</anchor>
      <arglist>(const std::string &amp;s1, const std::string &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readSymbols</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a7c37abde9a96bdbaed05103feed4dba9</anchor>
      <arglist>(const std::string &amp;s1, const std::string &amp;s2, const std::string &amp;s3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readSymbols</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>ab42bc4bca94e4007ef82c45cde79587b</anchor>
      <arglist>(const std::string &amp;s1, const std::string &amp;s2, const std::string &amp;s3, const std::string &amp;s4)</arglist>
    </member>
    <member kind="function">
      <type>Token</type>
      <name>peek</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a6bc42b6a69b91ae54e8443547810941e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>peekLineNumber</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>ae3d7489c8143b51642298d58ac47a1a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>peekCharacterNumber</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a4f7bb83377c7729a88b0fbb86161e184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>ac221c608ad4f467d01d25ef21eda64b5</anchor>
      <arglist>(const Token &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>filename</name>
      <anchorfile>classG3D_1_1TextInput.html</anchorfile>
      <anchor>a6272313f403b4c62f5db9c98c447b896</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextOutput</name>
    <filename>classG3D_1_1TextOutput.html</filename>
    <class kind="class">G3D::TextOutput::Options</class>
    <member kind="function">
      <type></type>
      <name>TextOutput</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>a1486a5525c2a18f923023687ed842960</anchor>
      <arglist>(const std::string &amp;filename, const Options &amp;options=Options())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextOutput</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>a0822383b0c36868be2bbef89239aba64</anchor>
      <arglist>(const Options &amp;options=Options())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commit</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>ad41fdfa8ca091a5461c0121635ab6299</anchor>
      <arglist>(bool flush=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commitString</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>ab1307ab7fd6abfcadd654c396a4727b9</anchor>
      <arglist>(std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushIndent</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>a169439c0caa955d18d14573bf4149fc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popIndent</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>a24e58bf7b95c6136dddb5cc0f52eb16a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>commitString</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>afa901d1f77b940e34d07025f7d75cb33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeString</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>aaab81e14c0b4e3171b9bf1449ce11b22</anchor>
      <arglist>(const std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeNumber</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>a510259ac4dd14eade2cae89ab2e45df3</anchor>
      <arglist>(double n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeNumber</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>adf166ee6de8e3c42b30a252c26bf1304</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeNewline</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>a50b5ab395bdc1fa46d5c6c0e828b2d24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeNewlines</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>ac6e359b7ed8a5790e8b10fee7b4be8b6</anchor>
      <arglist>(int numLines)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeSymbol</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>aa6fd18f7e12e90393af5303a89cdbad5</anchor>
      <arglist>(const std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeSymbols</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>aa94006488745a21235e8c1b7e3300eeb</anchor>
      <arglist>(const std::string &amp;a, const std::string &amp;b=&quot;&quot;, const std::string &amp;c=&quot;&quot;, const std::string &amp;d=&quot;&quot;, const std::string &amp;e=&quot;&quot;, const std::string &amp;f=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void __cdecl</type>
      <name>printf</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>a7d4e50665fb724aa47034dc8abffd2f6</anchor>
      <arglist>(const char *fmt,...) G3D_CHECK_PRINTF_METHOD_ARGS</arglist>
    </member>
    <member kind="function">
      <type>void __cdecl</type>
      <name>printf</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>af744be4f155ff17f52079dbfcfcf0eb9</anchor>
      <arglist>(const std::string fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void __cdecl</type>
      <name>vprintf</name>
      <anchorfile>classG3D_1_1TextOutput.html</anchorfile>
      <anchor>ac621a1d6438c230e0429521fec9a650d</anchor>
      <arglist>(const char *fmt, va_list argPtr) G3D_CHECK_VPRINTF_METHOD_ARGS</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Texture</name>
    <filename>classG3D_1_1Texture.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <class kind="class">G3D::Texture::PreProcess</class>
    <class kind="class">G3D::Texture::Settings</class>
    <member kind="enumeration">
      <type></type>
      <name>Dimension</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_2D</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580ea2a80c0eff75ba9cc1403c0e7c65e7fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_2D_RECT</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580ea305e0b78fa7961a379f27953901ce991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_CUBE_MAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580eaa8f47fdf34537b08f826ec0d44dbe851</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_2D_NPOT</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580eafe903c0bbce03d1410605eacf00639a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_CUBE_MAP_NPOT</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580eab71d8bde75148abb6430af79435efa7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WrapMode</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a599a5a9f2bb01a6c46dfbf0c1e404b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILE</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a599a5a9f2bb01a6c46dfbf0c1e404b14aa335745efbf0a64e380495e3b5dad6eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLAMP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a599a5a9f2bb01a6c46dfbf0c1e404b14a9b5da0e2e46c6059f434fedd90e9f471</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSPARENT_BORDER</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a599a5a9f2bb01a6c46dfbf0c1e404b14acfdfd42561e0594cdb8b198a3c0be408</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InterpolateMode</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRILINEAR_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aafa15212fa4fd213e3038c8048c3397c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BILINEAR_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aafd9bee8024d56e6bd96e99789d99f2c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEAREST_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aaf5894d7aabb8d042a972152962e893f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BILINEAR_NO_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aa96bea959125c991517f1bab1a8e190d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEAREST_NO_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aa85d5d8fea12d4c5bf30c276a0ce57e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_INTERPOLATION</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aa9df4a57e56c5870ca060964be3ef0013</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DepthReadMode</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>af6784cf76cdacc0fe5ead7df642abd3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_NORMAL</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>af6784cf76cdacc0fe5ead7df642abd3ea2efe35bf67e41357d928866ec4b2b60c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_LEQUAL</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>af6784cf76cdacc0fe5ead7df642abd3ea738326e5b184232e721c0c58c3f718a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_GEQUAL</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>af6784cf76cdacc0fe5ead7df642abd3ea4ab4fb3c1ef4a183c7eaba235d57e663</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CubeFace</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_POS_X</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877ae30d6979e53dcbb77b382d9855cae357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_NEG_X</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877ac6105f5461270f25115c8967b141482b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_POS_Y</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877a4bdcda03c86a30493b8b40d33700eb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_NEG_Y</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877aea7bec0e7509bc2c95fcae75ab638d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_POS_Z</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877a0a811a0496d8432839984a340d35b706</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_NEG_Z</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877a5e3b1ef6fe7ab52d0459e4d324386513</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Settings</type>
      <name>Parameters</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a81ec83a45ea4ed7314d787414d7fa91b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_2D</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580ea2a80c0eff75ba9cc1403c0e7c65e7fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_2D_RECT</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580ea305e0b78fa7961a379f27953901ce991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_CUBE_MAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580eaa8f47fdf34537b08f826ec0d44dbe851</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_2D_NPOT</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580eafe903c0bbce03d1410605eacf00639a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIM_CUBE_MAP_NPOT</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a93d88bc5f85d5526c4ba3d15ac86580eab71d8bde75148abb6430af79435efa7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILE</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a599a5a9f2bb01a6c46dfbf0c1e404b14aa335745efbf0a64e380495e3b5dad6eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLAMP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a599a5a9f2bb01a6c46dfbf0c1e404b14a9b5da0e2e46c6059f434fedd90e9f471</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSPARENT_BORDER</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a599a5a9f2bb01a6c46dfbf0c1e404b14acfdfd42561e0594cdb8b198a3c0be408</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRILINEAR_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aafa15212fa4fd213e3038c8048c3397c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BILINEAR_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aafd9bee8024d56e6bd96e99789d99f2c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEAREST_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aaf5894d7aabb8d042a972152962e893f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BILINEAR_NO_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aa96bea959125c991517f1bab1a8e190d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEAREST_NO_MIPMAP</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aa85d5d8fea12d4c5bf30c276a0ce57e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_INTERPOLATION</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa51eae2185769745b9f08366d1ffaf5aa9df4a57e56c5870ca060964be3ef0013</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_NORMAL</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>af6784cf76cdacc0fe5ead7df642abd3ea2efe35bf67e41357d928866ec4b2b60c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_LEQUAL</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>af6784cf76cdacc0fe5ead7df642abd3ea738326e5b184232e721c0c58c3f718a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPTH_GEQUAL</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>af6784cf76cdacc0fe5ead7df642abd3ea4ab4fb3c1ef4a183c7eaba235d57e663</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_POS_X</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877ae30d6979e53dcbb77b382d9855cae357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_NEG_X</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877ac6105f5461270f25115c8967b141482b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_POS_Y</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877a4bdcda03c86a30493b8b40d33700eb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_NEG_Y</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877aea7bec0e7509bc2c95fcae75ab638d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_POS_Z</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877a0a811a0496d8432839984a340d35b706</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUBE_NEG_Z</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa0f42108f20c8c7e29c4c011d0dd1877a5e3b1ef6fe7ab52d0459e4d324386513</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TextureRef</type>
      <name>alphaOnlyVersion</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a39950aad47bd95f22a894e6c1d3823f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFromScreen</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a4ea95d9d16cb51ba3729040cdd7a2bc1</anchor>
      <arglist>(const Rect2D &amp;rect, bool useBackBuffer=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFromScreen</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a13aad96eec81ae9145fd2b1578d4bf32</anchor>
      <arglist>(const Rect2D &amp;rect, CubeFace face, bool useBackBuffer=true)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sizeInMemory</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a4fece53b84baf82db9814140c2c0f0b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>opaque</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a5498920cd2a50e43ae0fcd1787ddf934</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DepthReadMode G3D_DEPRECATED</type>
      <name>depthReadMode</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>ac5abcb6f8fec428c4545c44ef4ca8201</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float G3D_DEPRECATED</type>
      <name>maxAnisotropy</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a6a8da5d1385cf6aaa6a3d55cd9a91216</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int G3D_DEPRECATED</type>
      <name>getOpenGLID</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a796179f0945c4ac31b26ea32597aacae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getImage</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a50f4985af05a4be42d3094762bd57ed5</anchor>
      <arglist>(GImage &amp;dst, const TextureFormat *outFormat=TextureFormat::AUTO) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>openGLID</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>ac5d6b8a405fa062fc8dd94501f9ddb48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const int G3D_DEPRECATED</type>
      <name>getTexelWidth</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a062bcee7dd1fb5e5c6c3d6814e62c52a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const int G3D_DEPRECATED</type>
      <name>getTexelHeight</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a3e786bc426a05dcf3048f0e70846607a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const int G3D_DEPRECATED</type>
      <name>getTexelDepth</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aec6e14ed7c17e1a5fb4e62a9a769a878</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const int</type>
      <name>texelWidth</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a4ec4782ff6d9f9cd4680737495978429</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const int</type>
      <name>texelHeight</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a54bcd93153819c6443a5dda5929fd82a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>vector2Bounds</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a9df5c66067791db1916238ef0c5c677c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Rect2D</type>
      <name>rect2DBounds</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>abc37281766bc18f35bd7799634e63181</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const int</type>
      <name>texelDepth</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>ac4f639514855f89110dcc6d6e9965fef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a0173d552ad9e70465b64ff0af55f5214</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>InterpolateMode G3D_DEPRECATED</type>
      <name>getInterpolateMode</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>addbfdad612da802723a574c86ce7f835</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WrapMode</type>
      <name>getWrapMode</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>ac16eed7e248942c1e0d6dc6ddff4b0db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WrapMode G3D_DEPRECATED</type>
      <name>wrapMode</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a338ab1013d29cd4a504ef182516a2bca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const TextureFormat *</type>
      <name>getFormat</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a642f2eaffcd7dc2eb92dea680e0f6555</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Dimension G3D_DEPRECATED</type>
      <name>getDimension</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a1f263537e7342b7d2ce31bd53f1e344e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Texture</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>ac47739b91c4939bf3d1425db79267171</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getOpenGLTextureTarget</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>acae36d5b7e986a01e8c0d73b0b1cf365</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Settings &amp;</type>
      <name>parameters</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa4f12b68cc1e57642d148be6a371cbfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Settings &amp;</type>
      <name>settings</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a3171d6df720a74548ad4f66cf81bef0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoMipMap</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a3ba79d3523d0a5e3bdf96dcbca1d0737</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateMipMaps</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a4c39e0ccf12b4d1d4e4858da856bf4fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>splitFilenameAtWildCard</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a970e533ea5839442e4e6990fb2545fb3</anchor>
      <arglist>(const std::string &amp;filename, std::string &amp;filenameBeforeWildCard, std::string &amp;filenameAfterWildCard)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>newGLTextureID</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aa5f8dff0bf30536502cc3ca756d0aa42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef G3D_DEPRECATED</type>
      <name>createEmpty</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a1fedf3755fa7bfc4732a988a945fdd19</anchor>
      <arglist>(int width, int height, const std::string &amp;name=&quot;Texture&quot;, const class TextureFormat *desiredFormat=TextureFormat::RGBA8, WrapMode wrap=TILE, InterpolateMode interpolate=TRILINEAR_MIPMAP, Dimension dimension=DIM_2D, DepthReadMode depthRead=DEPTH_NORMAL, float maxAnisotropy=2.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef</type>
      <name>createEmpty</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a727179cf71c8cbe9514b6cffc3c01f78</anchor>
      <arglist>(const std::string &amp;name, int width, int height, const class TextureFormat *desiredFormat=TextureFormat::RGBA8, Dimension dimension=DIM_2D, const Parameters &amp;param=Parameters::defaults())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef</type>
      <name>fromGLTexture</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a0dadf571f007fc2c7016eb4f1aa50d87</anchor>
      <arglist>(const std::string &amp;name, GLuint textureID, const class TextureFormat *textureFormat, WrapMode wrap=TILE, InterpolateMode interpolate=TRILINEAR_MIPMAP, Dimension dimension=DIM_2D, DepthReadMode depthRead=DEPTH_NORMAL, float maxAnisotropy=2.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef G3D_DEPRECATED</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a8c439d56b01e5a5cea926f0ce1cb84e3</anchor>
      <arglist>(const std::string &amp;filename, const class TextureFormat *desiredFormat, WrapMode wrap, InterpolateMode interpolate=TRILINEAR_MIPMAP, Dimension dimension=DIM_2D, double brighten=1.0, DepthReadMode depthRead=DEPTH_NORMAL, float maxAnisotropy=2.0f, float resizeFactor=1.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aac0d96265ce9060e7938dfc51506b416</anchor>
      <arglist>(const std::string &amp;filename, const class TextureFormat *desiredFormat=TextureFormat::AUTO, Dimension dimension=DIM_2D, const Parameters &amp;param=Parameters::defaults(), const PreProcess &amp;process=PreProcess())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a99eb44589efa6c25a77151a2d78d6be9</anchor>
      <arglist>(const std::string filename[6], const class TextureFormat *desiredFormat=TextureFormat::AUTO, WrapMode wrap=TILE, InterpolateMode interpolate=TRILINEAR_MIPMAP, Dimension dimension=DIM_2D, double brighten=1.0, DepthReadMode depthRead=DEPTH_NORMAL, float maxAnisotropy=2.0, float resizeFactor=1.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef</type>
      <name>fromTwoFiles</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a9b0900373e0d163cbfd13efe47b1f46a</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;alphaFilename, const class TextureFormat *desiredFormat=TextureFormat::RGBA8, WrapMode wrap=TILE, InterpolateMode interpolate=TRILINEAR_MIPMAP, Dimension dimension=DIM_2D, DepthReadMode depthRead=DEPTH_NORMAL, float maxAnisotropy=2.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef</type>
      <name>fromMemory</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aff1f75b462ae353193ff10f619439a92</anchor>
      <arglist>(const std::string &amp;name, const Array&lt; Array&lt; const void * &gt; &gt; &amp;bytes, const TextureFormat *bytesFormat, int width, int height, int depth, const TextureFormat *desiredFormat=TextureFormat::AUTO, WrapMode wrap=TILE, InterpolateMode interpolate=TRILINEAR_MIPMAP, Dimension dimension=DIM_2D, DepthReadMode depthRead=DEPTH_NORMAL, float maxAnisotropy=2.0, float resizeFactor=1.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef</type>
      <name>fromMemory</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>ae98c9c7639eb2c6f4d214b94b0f14bce</anchor>
      <arglist>(const std::string &amp;name, const uint8 **bytes, const class TextureFormat *bytesFormat, int width, int height, int depth, const class TextureFormat *desiredFormat=TextureFormat::AUTO, WrapMode wrap=TILE, InterpolateMode interpolate=TRILINEAR_MIPMAP, Dimension dimension=DIM_2D, DepthReadMode depthRead=DEPTH_NORMAL, float maxAnisotropy=2.0, float resizeFactor=1.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef G3D_DEPRECATED</type>
      <name>fromMemory</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>acc0ab5d63c0be82d50331432333ed565</anchor>
      <arglist>(const std::string &amp;name, const uint8 *bytes, const class TextureFormat *bytesFormat, int width, int height, const class TextureFormat *desiredFormat, WrapMode wrap, InterpolateMode interpolate=TRILINEAR_MIPMAP, Dimension dimension=DIM_2D, DepthReadMode depthRead=DEPTH_NORMAL, float maxAnisotropy=2.0, float resizeFactor=1.0f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef</type>
      <name>fromMemory</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>aadd81e1a68104118c3210337d3ceeb63</anchor>
      <arglist>(const std::string &amp;name, const uint8 *bytes, const class TextureFormat *bytesFormat, int width, int height, const class TextureFormat *desiredFormat=TextureFormat::AUTO, Dimension dimension=DIM_2D, const Parameters &amp;param=Parameters::defaults())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef G3D_DEPRECATED</type>
      <name>fromGImage</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a90e6b16c4b29dab1df2e4a9118c99845</anchor>
      <arglist>(const std::string &amp;name, const GImage &amp;image, const class TextureFormat *desiredFormat, WrapMode wrap, InterpolateMode interpolate=TRILINEAR_MIPMAP, Dimension dimension=DIM_2D, DepthReadMode depthRead=DEPTH_NORMAL, float maxAnisotropy=2.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextureRef</type>
      <name>fromGImage</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a48851a5a97db0abb51a7384364caca3a</anchor>
      <arglist>(const std::string &amp;name, const GImage &amp;image, const class TextureFormat *desiredFormat=TextureFormat::AUTO, Dimension dimension=DIM_2D, const Parameters &amp;param=Parameters::defaults())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getCameraRotation</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a4b5890026a383e207218bc2ac604ff05</anchor>
      <arglist>(CubeFace face, Matrix3 &amp;outMatrix)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>sizeOfAllTexturesInMemory</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a031f8f719466d4dc9b95a1abd29998b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>invertY</name>
      <anchorfile>classG3D_1_1Texture.html</anchorfile>
      <anchor>a45a98aea5f85f6ff28e71701cdb4b3be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextureFormat</name>
    <filename>classG3D_1_1TextureFormat.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_L8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba2fc7ebf5db4d740fea22d8e31b256790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_L16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bae55bb648c59353e5d459bbc89e28cc14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_L16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba34222053d84c792cbafff01e41ca3638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_L32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba9a6b4e50d1bd2421fcd6db2fb68f6079</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_A8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba19df520aba0689b0c3a637fd75e3e8fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_A16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bafa30a19088b06abebfecc2e0aefb1fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_A16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba301539d06f8e97fbcbbd4efe8b38eb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_A32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba4db9acd66a46e4988b01a9f8350e5a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA4</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bab54efb1f6997d1954eeea94a32c42c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba79b52080566d39f0f7d97da67bc2c3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baaf5248aba65d429e55b2843d4f7194af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba2431cac36b8ce8de10b163d9ec27fccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baf2b5f8f03d2361e2f96895c70af74993</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB5</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba9c343ee6f73e69e17a69b073894a2f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB5A1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba0c4af5ff59c4c8a84a52bad8376c239b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bacbd0cc2176a4c5d2f71d915724584274</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baac4ddecdde77d16fc34d5b36e39774b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba8a106ebba1e77e481cde7c2bbe9b694c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bad47a5487bb254ee80ad2a76718848762</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_ARGB8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba390b7c854b4554a35b885de280715865</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BGR8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba57868f040f60bb27f0c5523cbc86dcff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba024f0765b463dec6fa7ce25dc3186c2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba83be482d8cec838fae2ca751e7de83a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba8d97511755ea212ce52e3ca7635883f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baef6cd1dfe09cbac8d50be8e96fd70256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_RGGB8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba03ca6b16ad2d4cdee31196cd58a0ec1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_GRBG8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba6a16c80944423b4a87c4dc9b0fca6e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_GBRG8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba6c46c40b5be9ef600e78cfc273b3103e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_BGGR8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba750c4dfa8bb5613a2a349aa82a855e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_RGGB32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba9b12d4e4bc62839ce69434a20634a637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_GRBG32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bab3ba806ce7cd89ab9f4a56c699d1e155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_GBRG32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baff395abb34ec4e269c395e08ef8ba060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_BGGR32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baa6e59f914dc6681f11bfd3d90c9cd866</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_HSV8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba103b9745e6e4af58871713b8e7760e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_HSV32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba84189e96aca279f9153db3d50bc45a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_YUV8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba9953940a182eea29460ac1737be84f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_YUV32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba395fd1ca546349cf9a465ac3dc63ddb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB_DXT1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bad22e4b25524a846e9d99cf8e8603397b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA_DXT1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba847ff236692b362982d493b6885b0403</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA_DXT3</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baf7f8fff20547d2d44061c3e5ff4814ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA_DXT5</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba85b0b5a5fe65d422189aee35e052602d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_DEPTH16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba7cb53d04feebefcb4aa35e8a14a8ad8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_DEPTH24</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baf0e3ec2473d2834cb260fc9a8d4dffb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_DEPTH32</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba053d5f21f74b5de9f6d877d9c0da84a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_STENCIL1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba097ccd2701ca44344fe35be934a46d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_STENCIL4</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba11144f9bcb9bd4603148103aabad7db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_STENCIL8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baff7dfd18e66e8a333c9e5ef3549440e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_STENCIL16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba41d693bb5db4b756b7958475e495eed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ColorSpace</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0496959ca19565e4401447567ef9871a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SPACE_NONE</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0496959ca19565e4401447567ef9871aa8807996810a5ac39e78ea7a96f1ddc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SPACE_RGB</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0496959ca19565e4401447567ef9871aa6ea8c956cdb1cff6895f8bcb09aaeeba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SPACE_HSV</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0496959ca19565e4401447567ef9871aafa6fe620d3119d095a39f17d2d139c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SPACE_YUV</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0496959ca19565e4401447567ef9871aa857ded64104ddbd17c8f57c4f0912ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BayerPattern</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_NONE</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45aa5e8364ed618917aa1889662e3996a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_RGGB</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45a8b1e1f71f1626ca50e88c90316ebecf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_GRBG</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45a6a3d9bfded8188de71ddd39527fe4122</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_GBRG</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45a4ebb00bd579171a5ac159c90ba3a2bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_BGGR</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45a2e9add2a4c902a975fc5bcd880cbbb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAME_AS_SCREEN</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ad231d8d8befcc39db1c91bb9dc98f93cafa6b0b8867c36cf5a4991d092ca67ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_L8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba2fc7ebf5db4d740fea22d8e31b256790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_L16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bae55bb648c59353e5d459bbc89e28cc14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_L16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba34222053d84c792cbafff01e41ca3638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_L32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba9a6b4e50d1bd2421fcd6db2fb68f6079</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_A8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba19df520aba0689b0c3a637fd75e3e8fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_A16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bafa30a19088b06abebfecc2e0aefb1fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_A16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba301539d06f8e97fbcbbd4efe8b38eb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_A32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba4db9acd66a46e4988b01a9f8350e5a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA4</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bab54efb1f6997d1954eeea94a32c42c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba79b52080566d39f0f7d97da67bc2c3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baaf5248aba65d429e55b2843d4f7194af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba2431cac36b8ce8de10b163d9ec27fccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_LA32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baf2b5f8f03d2361e2f96895c70af74993</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB5</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba9c343ee6f73e69e17a69b073894a2f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB5A1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba0c4af5ff59c4c8a84a52bad8376c239b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bacbd0cc2176a4c5d2f71d915724584274</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baac4ddecdde77d16fc34d5b36e39774b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba8a106ebba1e77e481cde7c2bbe9b694c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bad47a5487bb254ee80ad2a76718848762</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_ARGB8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba390b7c854b4554a35b885de280715865</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BGR8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba57868f040f60bb27f0c5523cbc86dcff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba024f0765b463dec6fa7ce25dc3186c2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba83be482d8cec838fae2ca751e7de83a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba8d97511755ea212ce52e3ca7635883f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baef6cd1dfe09cbac8d50be8e96fd70256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_RGGB8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba03ca6b16ad2d4cdee31196cd58a0ec1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_GRBG8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba6a16c80944423b4a87c4dc9b0fca6e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_GBRG8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba6c46c40b5be9ef600e78cfc273b3103e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_BGGR8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba750c4dfa8bb5613a2a349aa82a855e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_RGGB32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba9b12d4e4bc62839ce69434a20634a637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_GRBG32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bab3ba806ce7cd89ab9f4a56c699d1e155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_GBRG32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baff395abb34ec4e269c395e08ef8ba060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_BAYER_BGGR32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baa6e59f914dc6681f11bfd3d90c9cd866</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_HSV8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba103b9745e6e4af58871713b8e7760e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_HSV32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba84189e96aca279f9153db3d50bc45a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_YUV8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba9953940a182eea29460ac1737be84f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_YUV32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba395fd1ca546349cf9a465ac3dc63ddb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGB_DXT1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3bad22e4b25524a846e9d99cf8e8603397b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA_DXT1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba847ff236692b362982d493b6885b0403</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA_DXT3</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baf7f8fff20547d2d44061c3e5ff4814ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_RGBA_DXT5</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba85b0b5a5fe65d422189aee35e052602d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_DEPTH16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba7cb53d04feebefcb4aa35e8a14a8ad8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_DEPTH24</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baf0e3ec2473d2834cb260fc9a8d4dffb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_DEPTH32</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba053d5f21f74b5de9f6d877d9c0da84a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_STENCIL1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba097ccd2701ca44344fe35be934a46d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_STENCIL4</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba11144f9bcb9bd4603148103aabad7db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_STENCIL8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3baff7dfd18e66e8a333c9e5ef3549440e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODE_STENCIL16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a047ce2a08e93a78de1736b5a16e29f3ba41d693bb5db4b756b7958475e495eed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SPACE_NONE</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0496959ca19565e4401447567ef9871aa8807996810a5ac39e78ea7a96f1ddc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SPACE_RGB</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0496959ca19565e4401447567ef9871aa6ea8c956cdb1cff6895f8bcb09aaeeba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SPACE_HSV</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0496959ca19565e4401447567ef9871aafa6fe620d3119d095a39f17d2d139c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_SPACE_YUV</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0496959ca19565e4401447567ef9871aa857ded64104ddbd17c8f57c4f0912ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_NONE</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45aa5e8364ed618917aa1889662e3996a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_RGGB</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45a8b1e1f71f1626ca50e88c90316ebecf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_GRBG</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45a6a3d9bfded8188de71ddd39527fe4122</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_GBRG</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45a4ebb00bd579171a5ac159c90ba3a2bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAYER_PATTERN_BGGR</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abdbea14820a2280effe6cf61dd05ec45a2e9add2a4c902a975fc5bcd880cbbb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAME_AS_SCREEN</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ad231d8d8befcc39db1c91bb9dc98f93cafa6b0b8867c36cf5a4991d092ca67ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const TextureFormat *</type>
      <name>depth</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>af04e5ccae3dc32c94c42ed809a6e6372</anchor>
      <arglist>(int depthBits=SAME_AS_SCREEN)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const TextureFormat *</type>
      <name>stencil</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ac408c0b461a5cbc9b6aaaf340e9b94ac</anchor>
      <arglist>(int bits=SAME_AS_SCREEN)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const TextureFormat *</type>
      <name>fromCode</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ab991d5e59a3804801dd1d62bb33c2303</anchor>
      <arglist>(TextureFormat::Code code)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numComponents</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a03bd4a2ee15683b85546d7ab5df54633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>compressed</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>aa6e3c1901267238237212fe95df174b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0e2fa32dc743ccabe33bb4a22ec8d7e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ColorSpace</type>
      <name>colorSpace</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ac0e354e66cfbe5ebe1219a62fef698c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BayerPattern</type>
      <name>bayerPattern</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a78af03efcea22b952f71657ce9e5424c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GLenum</type>
      <name>OpenGLFormat</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>af3ae94db60efd6ea7845c2decec44c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GLenum</type>
      <name>OpenGLBaseFormat</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a81e0ab37269d3fa65e2c55914595f779</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>luminanceBits</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a58a3e64e2e365cb1e59d919384c32569</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>alphaBits</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a2d05d80cc278663df8f9f9cad208cfc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>redBits</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>afb3443478d20c31ec68a8afe4deb9a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>greenBits</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0b9266d4d566ee2f1bf91563f935f0c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blueBits</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>afc7b4234392d12c6d2edcdb7015ed054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stencilBits</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ad0be782151cb09047562901891ac12f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>depthBits</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>aae2218407948fd95643f671590bfd4a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>packedBitsPerTexel</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a4d9b5b6cdf7fc1bd0d166f800876699d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hardwareBitsPerTexel</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a60a155839a84ef2d76a36c5b41a6ff2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>opaque</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a7929255e6e632880c37a9f8e53b02d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>floatingPoint</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a2a674b9643ff1b4210f59470d373b7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>valid</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a75bfc981f59fb78c24440cbdf440ae25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>L8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a1983dde3d6baaa900ab41439c5cf22ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>L16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a3508cc98d25ecebc17be636bd26c0f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>L16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a497ecfd77b1d849fe1799088e34d3e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>L32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ab4981d1d2cc88272d1b7bd4871584bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>A8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a162d5b19a61d465de08e40bbaa5ea549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>A16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a3a785c0821b74930283d55506f8bd168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>A16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a6c2b6f8ffc86d5aeba24bdef214a1009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>A32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a7669c94dd283fccf1c938db73c5df6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>LA4</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a5ed0cb4644136779fca16abc588a8b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>LA8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>aac0703e260e04b1dea288ba46030f1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>LA16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a91d4889d726ca8187d10fd63e1d44faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>LA16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a21f3ef92290449b97141fcb59f2cf232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>LA32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a2b0ea41b0c2fecffe220978c7aeec5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGB5</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a63630946d8703111f64a87f7de1509d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGB5A1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a3516ec2a134f95d0e829da652ce55cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGB8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a9a9d347d4260502246d068538480ec47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGB16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ad68aed8ce3f8274a74f3e7dcedb3ca34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGB16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a9c2b0dd2ac3b817ead92932267b751c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGB32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a307c6f2e035f30358b85e905165de1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGBA8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>acad492a5df6e8ce1fbc6636c65b32619</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGBA16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>acb0a61396ae26986548dabea908c6645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGBA16F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>af2b98d2c487c398fe2757018ca9df0c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGBA32F</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a23130457de05c0123392c856c41e4df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGB_DXT1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>af179e67648147736c1a2e71958073bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGBA_DXT1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a1ad463a2990c0f8ce7bf23366d03529b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGBA_DXT3</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ab35affe7b0d43e46997f5a4b48202913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>RGBA_DXT5</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>af27a4a7ac987d91ab609d6c5c4d0f701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>DEPTH16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>abff9cf5de67a93fa0a57ccf0a89e5330</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>DEPTH24</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a9a9123bb0915d703dcd190107dfed37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>DEPTH32</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a6dcd12c72156e339bb58f2c5d14d15c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>STENCIL1</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a77327e9224ae8b1530bc0681abdcd9fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>STENCIL4</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>ab5668202a2374354737e164b67517b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>STENCIL8</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a0da8b22597d5e86c121494ca89a04087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>STENCIL16</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>a67d0d61174d3f011213c20976f8290f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TextureFormat *</type>
      <name>AUTO</name>
      <anchorfile>classG3D_1_1TextureFormat.html</anchorfile>
      <anchor>aa097be5a4818c1a9f25cdf9ab770f72c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextureManager</name>
    <filename>classG3D_1_1TextureManager.html</filename>
    <member kind="function">
      <type></type>
      <name>TextureManager</name>
      <anchorfile>classG3D_1_1TextureManager.html</anchorfile>
      <anchor>a2c59571577bd23e923409ae89184fe0c</anchor>
      <arglist>(size_t _sizeHint=10 *1024 *1024)</arglist>
    </member>
    <member kind="function">
      <type>TextureRef</type>
      <name>loadTexture</name>
      <anchorfile>classG3D_1_1TextureManager.html</anchorfile>
      <anchor>a9278553555e7a47b8ff7864f7d332785</anchor>
      <arglist>(const std::string &amp;filename, const TextureFormat *desiredFormat=TextureFormat::AUTO, Texture::WrapMode wrap=Texture::TILE, Texture::InterpolateMode interpolate=Texture::TRILINEAR_MIPMAP, Texture::Dimension dimension=Texture::DIM_2D, double brighten=1.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cacheTexture</name>
      <anchorfile>classG3D_1_1TextureManager.html</anchorfile>
      <anchor>a734b4df818de45555f782da2c67b62bc</anchor>
      <arglist>(TextureRef texture, const std::string &amp;filename, const TextureFormat *desiredFormat=TextureFormat::AUTO, Texture::WrapMode wrap=Texture::TILE, Texture::InterpolateMode interpolate=Texture::TRILINEAR_MIPMAP, Texture::Dimension dimension=Texture::DIM_2D, double brighten=1.0)</arglist>
    </member>
    <member kind="function">
      <type>TextureRef</type>
      <name>findTexture</name>
      <anchorfile>classG3D_1_1TextureManager.html</anchorfile>
      <anchor>a328b48f0ffe4964a50131deba0ade570</anchor>
      <arglist>(const std::string &amp;filename, const TextureFormat *desiredFormat=TextureFormat::AUTO, Texture::WrapMode wrap=Texture::TILE, Texture::InterpolateMode interpolate=Texture::TRILINEAR_MIPMAP, Texture::Dimension dimension=Texture::DIM_2D, double brighten=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMemorySizeHint</name>
      <anchorfile>classG3D_1_1TextureManager.html</anchorfile>
      <anchor>a45769b58a975d869c66a61cc033cf426</anchor>
      <arglist>(size_t _size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>memorySizeHint</name>
      <anchorfile>classG3D_1_1TextureManager.html</anchorfile>
      <anchor>a1c9e1070aa4dc31423bc51d5f6621ff0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sizeInMemory</name>
      <anchorfile>classG3D_1_1TextureManager.html</anchorfile>
      <anchor>a68c280d6dc1c7b4a2df4c4fa8786849d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emptyCache</name>
      <anchorfile>classG3D_1_1TextureManager.html</anchorfile>
      <anchor>ab50cb1f963711703d6bf0db8ea0fb19f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimCache</name>
      <anchorfile>classG3D_1_1TextureManager.html</anchorfile>
      <anchor>a0ea985f613399f0a6fd4d55deef78d05</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::RenderDevice::RenderState::TextureUnit</name>
    <filename>classG3D_1_1RenderDevice_1_1RenderState_1_1TextureUnit.html</filename>
    <member kind="function">
      <type></type>
      <name>TextureUnit</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1TextureUnit.html</anchorfile>
      <anchor>aa7804f10686a2999523af3c66f2df6c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1TextureUnit.html</anchorfile>
      <anchor>a3d511f079f4f5d1727ed5e51512f8cb6</anchor>
      <arglist>(const TextureUnit &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1TextureUnit.html</anchorfile>
      <anchor>aeda17e607b516022bd72964a4771ba79</anchor>
      <arglist>(const TextureUnit &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>Vector4</type>
      <name>texCoord</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1TextureUnit.html</anchorfile>
      <anchor>ade6ef5ddb3b2b3f4d5646ea61261ec1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TextureRef</type>
      <name>texture</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1TextureUnit.html</anchorfile>
      <anchor>aa4267fb993802c782381fa9b573cf104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>textureMatrix</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1TextureUnit.html</anchorfile>
      <anchor>a2321002076041502aacacc4740f8bfa9</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>CombineMode</type>
      <name>combineMode</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1TextureUnit.html</anchorfile>
      <anchor>aad108be93804c5a76efe5a854aedb75f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>LODBias</name>
      <anchorfile>classG3D_1_1RenderDevice_1_1RenderState_1_1TextureUnit.html</anchorfile>
      <anchor>a255bf73c1d511a35ec99f04f624e3232</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::ThirdPersonManipulator</name>
    <filename>classG3D_1_1ThirdPersonManipulator.html</filename>
    <base>G3D::Manipulator</base>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a933a5743196eacbd5f9fa3cfd80ab1a5</anchor>
      <arglist>(RenderDevice *rd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onDragBegin</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a9b88e04b4e2ffe8c7de8da67e533a35a</anchor>
      <arglist>(const Vector2 &amp;start)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onDragEnd</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a04787e8c40fc980726d7f81af0d45473</anchor>
      <arglist>(const Vector2 &amp;stop)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>singleAxisTranslationDrag</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>ad51bbe7c6fac80aa52d1a96324b4fa85</anchor>
      <arglist>(int a, const Vector2 &amp;delta)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>doubleAxisTranslationDrag</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>af41891708ff1ac79a836eaac780d6e8e</anchor>
      <arglist>(int a0, int a1, const Vector2 &amp;delta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onDrag</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>ada993a9845e176c890fd3772c182f96e</anchor>
      <arglist>(const Vector2 &amp;delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeProjection</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a3428ce0603b97656a0d9695257e30754</anchor>
      <arglist>(RenderDevice *rd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ThirdPersonManipulator</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a3a65ed41deb9863a55f633892d10af12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotationEnabled</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a16780c29297cb23cc01f7aa86ee8843f</anchor>
      <arglist>(bool r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rotationEnabled</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>abd43194fb4dd5a4b8aec9c561f07ad27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTranslationEnabled</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a70f40599bffaacba0cdfaeac877b4f93</anchor>
      <arglist>(bool r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>translationEnabled</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>ad720bdc8aa39e4e098a5ecc5ff86a2f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>acef07162d0dd5a93611a3a03a919a354</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>aa849e34d2453540da82b4b3161f272fa</anchor>
      <arglist>(bool e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CoordinateFrame</type>
      <name>frame</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a25250d6234e6c3c7dc53ea892879a1ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getPosedModel</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>abef6e26b9ca6106dbef91770990859b0</anchor>
      <arglist>(Array&lt; PosedModelRef &gt; &amp;posedArray, Array&lt; PosedModel2DRef &gt; &amp;posed2DArray)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setControlFrame</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>ad50abd5ba3a0160add75ca3453b08d7a</anchor>
      <arglist>(const CoordinateFrame &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getControlFrame</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a7f30d8dc4095c6f7ccf7184337f89114</anchor>
      <arglist>(CoordinateFrame &amp;c) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrame</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>afef015ffdae7da112a7b011c2149f2d0</anchor>
      <arglist>(const CoordinateFrame &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFrame</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a1f62c02b4bf23f40742ab17f84de1c76</anchor>
      <arglist>(CoordinateFrame &amp;c) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>onSimulation</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a5bffe85e1bce7ae65b160272a9ecfea4</anchor>
      <arglist>(RealTime rdt, SimTime sdt, SimTime idt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>onEvent</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a351f74990cdfdf4beeef4a731a3e0ec4</anchor>
      <arglist>(const GEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>onUserInput</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>aaa0d085afa4c54d0908257e9d07fc75f</anchor>
      <arglist>(UserInput *ui)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onNetwork</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>aa3cbbcf7601702bd56e2e9aad1b9ce0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>onLogic</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>acf7b583341ee08f1e45b5798caccc3ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CoordinateFrame</type>
      <name>computeOffsetFrame</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a43b09bbffadecd5b0d67fba3efeeaf4b</anchor>
      <arglist>(const CoordinateFrame &amp;controlFrame, const CoordinateFrame &amp;objectFrame)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TPMPosedModel</name>
      <anchorfile>classG3D_1_1ThirdPersonManipulator.html</anchorfile>
      <anchor>a9bdaef574eb4cef49764a31e609850a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Token</name>
    <filename>classG3D_1_1Token.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a646ebc060b29fd4ab6c64febf750a193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a646ebc060b29fd4ab6c64febf750a193ae0e3abcda76e62f45d202920922495fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYMBOL</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a646ebc060b29fd4ab6c64febf750a193a0ace1aa5c5bd4f509eef42f6b88eee67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a646ebc060b29fd4ab6c64febf750a193a3d43a224106b43cf0bd2722b14df2004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a646ebc060b29fd4ab6c64febf750a193a15bd6e87447f0c895cb9948aad646c70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ExtendedType</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SINGLE_QUOTED_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea2a30ee6eb11964206d0646f223d013a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_QUOTED_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea5dcb9d02976a98532b12b98eda036e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYMBOL_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea7a6054b71dea0c2c74fa34a035f9d72e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTEGER_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea782a9ed1839e8707552bcd1f6c5ad37b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOATING_POINT_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea6e8b7defb9d5afb2e03bfcea1c44a482</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2eace3ad5d91d3797d64a4165c5eb680430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a646ebc060b29fd4ab6c64febf750a193ae0e3abcda76e62f45d202920922495fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYMBOL</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a646ebc060b29fd4ab6c64febf750a193a0ace1aa5c5bd4f509eef42f6b88eee67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a646ebc060b29fd4ab6c64febf750a193a3d43a224106b43cf0bd2722b14df2004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a646ebc060b29fd4ab6c64febf750a193a15bd6e87447f0c895cb9948aad646c70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SINGLE_QUOTED_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea2a30ee6eb11964206d0646f223d013a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_QUOTED_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea5dcb9d02976a98532b12b98eda036e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYMBOL_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea7a6054b71dea0c2c74fa34a035f9d72e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTEGER_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea782a9ed1839e8707552bcd1f6c5ad37b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOATING_POINT_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2ea6e8b7defb9d5afb2e03bfcea1c44a482</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_TYPE</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a1a15136e619609149302506574569d2eace3ad5d91d3797d64a4165c5eb680430</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Token</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>ab12b3a0e8fdcf6d5da20570305af0144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Token</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a23c66e874cd1481bd09acd833cb997a5</anchor>
      <arglist>(Type t, ExtendedType e, const std::string &amp;s, int L, int c)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a973a47c7ebd69ac412c756ca94cedfc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ExtendedType</type>
      <name>extendedType</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>af618c03cf91fd943644067e82661bda1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>string</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a14a2bde59858e56c520cbe98823c6382</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>line</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a62f5bbeecbc7d4194988ff3b22c546d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>character</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>ad522ee2b03f2b01f590a43536d5ed027</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>number</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a6c95e81bc74f710bd769d69df5dddc5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TextInput</name>
      <anchorfile>classG3D_1_1Token.html</anchorfile>
      <anchor>a36c75cb71735992afa43569de76182e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextInput::TokenException</name>
    <filename>classG3D_1_1TextInput_1_1TokenException.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TokenException</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a5cf0101acaee5cf6972a81641942f464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sourceFile</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>abcd39df9c67e0709fa105fbfd24c8a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>line</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>aaaf3f18635e6a9b3643f28e0cd3f0e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>character</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a5ab563ebe76fef1b28868263ced30047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a9da33e4ac4fa617ce7f19d0014d78cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TokenException</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>af2452195e981b6d5ff68a22d4a987571</anchor>
      <arglist>(const std::string &amp;src, int ln, int ch)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Triangle</name>
    <filename>classG3D_1_1Triangle.html</filename>
    <member kind="function">
      <type></type>
      <name>Triangle</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>ab6712321a0f0cbf031e26d77e4ed75d7</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>a798993620b700f56345990a443edfce8</anchor>
      <arglist>(class BinaryOutput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>ad1439b8a27908e35f4b7adbbc63fa1d5</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triangle</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>a8306944a07b8ecbb874478c1427f6439</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triangle</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>a5d5e4698d99b46744b36a283e937330a</anchor>
      <arglist>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Triangle</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>acdfc5fbdc303d4d6a1042975b7af0e6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Vector3 &amp;</type>
      <name>vertex</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>ac47cdc7a65d6bd83cf7f13432244d2f4</anchor>
      <arglist>(int n) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>area</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>aeaa3fd7ce5720ffa0ed5ae3f11e6f786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3::Axis</type>
      <name>primaryAxis</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>a72659cc591c915a54413a6a9d8a4e261</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Vector3 &amp;</type>
      <name>normal</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>ab6b1414ef86d3676cd52c34861660fae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>center</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>af6f630e2e66791a46fe91dcb4a26c25b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Plane &amp;</type>
      <name>plane</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>ab9f5bd4aea5a3468b89fb0d8b17e9eea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>randomPoint</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>ac415627eb2516b1bc55f8e659a746bfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>aa6d498cf6a44e9c2a7beefff2c95ce7a</anchor>
      <arglist>(const Triangle &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>a8c16dcf025b65da08d4a0b5a5d013660</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBounds</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>a324cc135775eae0f1a3e5777ed6308de</anchor>
      <arglist>(class AABox &amp;) const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CollisionDetection</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>aa87aa6084db35876513fcb4fdd4427ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Ray</name>
      <anchorfile>classG3D_1_1Triangle.html</anchorfile>
      <anchor>a27756b7a995fbc560ed9ec3bfa661a39</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::_internal::UIGeom</name>
    <filename>classG3D_1_1__internal_1_1UIGeom.html</filename>
    <member kind="function">
      <type></type>
      <name>UIGeom</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a18bba328b82de3c93564247dbc3f2f39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a28ecbb327f9c04396b5f15910435b360</anchor>
      <arglist>(const Vector2 &amp;p, float &amp;nearestDepth, Vector2 &amp;tangent2D, float &amp;projectionW, float lineRadius=9) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeProjection</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a32643b357c6d8fd5b908611954f2fb9a</anchor>
      <arglist>(RenderDevice *rd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>adedc5e10f089200427cdc4446fdbb516</anchor>
      <arglist>(RenderDevice *rd, float lineScale=1.0f)</arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; PolyLine &gt;</type>
      <name>line3D</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a45e2e85f23fac9a96e989ea9924e1e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; ConvexPolygon &gt;</type>
      <name>poly3D</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a5c51c35ef320755a4dd5c5277ba9262f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>visible</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>ae987bde3ee14f7051b7b1316249bc110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; PolyLine2D &gt;</type>
      <name>line2D</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a467529745e7ab7cd0c490f24753a2ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Array&lt; float &gt; &gt;</type>
      <name>lineDepth</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a14e49f2aa7a1295b3e1e1c085fe6aa9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Array&lt; float &gt; &gt;</type>
      <name>lineW</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a85454e8d92271fea36091e5922ef45a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; ConvexPolygon2D &gt;</type>
      <name>poly2D</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a86da57625b6bca85ac05398c07630ff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; float &gt;</type>
      <name>polyDepth</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>ae42811a2aa12ac3f1deef83e07d2c37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; bool &gt;</type>
      <name>polyBackfacing</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a45fe5f7de07c936bb8d098a0f5e57ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Vector3</type>
      <name>segmentNormal</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a760aac24691269f77f66bac2007e6506</anchor>
      <arglist>(const LineSegment &amp;seg, const Vector3 &amp;eye)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Vector3</type>
      <name>computeEye</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>a85d00726757344b6403b521386d1e374</anchor>
      <arglist>(RenderDevice *rd)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_twoSidedPolys</name>
      <anchorfile>classG3D_1_1__internal_1_1UIGeom.html</anchorfile>
      <anchor>ad9e7a05a0ff022e5cc17f4f0d1888144</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::VertexAndPixelShader::UniformDeclaration</name>
    <filename>classG3D_1_1VertexAndPixelShader_1_1UniformDeclaration.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>dummy</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1UniformDeclaration.html</anchorfile>
      <anchor>a85a73e058297d2ebae89ebc6a76f848e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>location</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1UniformDeclaration.html</anchorfile>
      <anchor>a4d50aff31ccfad02fb7f50e1e778d885</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1UniformDeclaration.html</anchorfile>
      <anchor>a7f2e7b8ea4ec8135c94f836b0dffca11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GLenum</type>
      <name>type</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1UniformDeclaration.html</anchorfile>
      <anchor>a8d2ee702daf6f7bfe9265bc3c5557679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1UniformDeclaration.html</anchorfile>
      <anchor>acd7753d133e359d6b79ca1f10bd280cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>textureUnit</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader_1_1UniformDeclaration.html</anchorfile>
      <anchor>af3c91801f1e01e2fef7efd1ce91d0e43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::UserInput</name>
    <filename>classG3D_1_1UserInput.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>UIFunction</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UP</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0cab5190dcf04c7bc69babff88b334ad707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWN</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0ca0b20451f5ec380523016495cbe763aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0caa27eab006b054d84eec2a51b0252e692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0caa63810fb3375cc29cdb5375aa791005e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0caddb7827c1fa555939a5520aa8f580e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16</type>
      <name>KeyCode</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>abb17ae228bcdb8a5882d32b51e64dd61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UP</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0cab5190dcf04c7bc69babff88b334ad707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWN</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0ca0b20451f5ec380523016495cbe763aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0caa27eab006b054d84eec2a51b0252e692</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0caa63810fb3375cc29cdb5375aa791005e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a81a7f84bf8b6425f0fa88b9a1b2e0c0caddb7827c1fa555939a5520aa8f580e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInput</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a169cd8d6420fff317ee0a47845f6ec81</anchor>
      <arglist>(GWindow *window, Table&lt; KeyCode, UIFunction &gt; *keyMapping=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInput</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a52cc271db917504a0bcc3fc4883288e3</anchor>
      <arglist>(Table&lt; KeyCode, UIFunction &gt; *keyMapping)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserInput</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a2b03e68cf6580c0126c89ac22d3a6775</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GWindow *</type>
      <name>window</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a93ae96d5c537f17a4c995c5e0a061ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKeyMapping</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a6dc07cfb95d1e11a6658d253bd0e4dc9</anchor>
      <arglist>(Table&lt; KeyCode, UIFunction &gt; *keyMapping=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UserInput</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a09f1f49a55a4d32185195b428466339d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEvent</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a2b463772b51b7f9ba31715405f777646</anchor>
      <arglist>(const ::SDL_Event &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endEvents</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a23ee55d3bf522920971e45a5b3105c4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginEvents</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a553bd9afa141a37039beca84c4108abc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseXY</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>ac3ef035a7d9b180e0f7cc453c2dba5c9</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseXY</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a690ff55342588a9bddd75923605de9f4</anchor>
      <arglist>(const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumJoysticks</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a9af5d66cad7553cbb08d753851d46bb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float G3D_DEPRECATED</type>
      <name>getX</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a926d263ffc868af00605df417bb3f8b9</anchor>
      <arglist>(int stick=0) const</arglist>
    </member>
    <member kind="function">
      <type>float G3D_DEPRECATED</type>
      <name>getY</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a907893c00244cc0fc14db2e96b0331b3</anchor>
      <arglist>(int stick=0) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2 G3D_DEPRECATED</type>
      <name>getXY</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a3ac681c782fc688d3d57d1bcc59fe064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>mouseXY</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a4c7209450fd2d6917364857be3793196</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2 G3D_DEPRECATED</type>
      <name>getMouseXY</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>ad73697223a93e74ccbd4b3c29fcac3de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float G3D_DEPRECATED</type>
      <name>getMouseX</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a69183554d67218e98b4cb5a439104729</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float G3D_DEPRECATED</type>
      <name>getMouseY</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a87a9a9890f1a56472f35d09db9230d49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyDown</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>aba03f9509bdd89bcd5734bde7416b2dc</anchor>
      <arglist>(KeyCode code) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyPressed</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a14833f9cdefc14cae96cc48378403481</anchor>
      <arglist>(KeyCode code) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyReleased</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>aed1d06ca0d57c19f52a7c98ede489ddc</anchor>
      <arglist>(KeyCode code) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>anyKeyPressed</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a4db062a68735e663afd49422ae50caac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pressedKeys</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a811a42dcd3271310a30364847d304526</anchor>
      <arglist>(Array&lt; KeyCode &gt; &amp;code) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releasedKeys</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a73160f258093d0b157e6d025491de2e4</anchor>
      <arglist>(Array&lt; KeyCode &gt; &amp;code) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appHasFocus</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a8ffff5ea92a9a97ee992e5ec778f82f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>mouseDXY</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a587c19f5b28cf8be5277daa26c8cbd6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>mouseDX</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a53f998c576be0de72d2f4e7c0eda1828</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>mouseDY</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a7a71f193594afc3a81d7de4513d2bb80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPureDeltaMouse</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a4a1c4b7057a0499916f4d402d0baed7f</anchor>
      <arglist>(bool m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pureDeltaMouse</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a844699eaa9d0d2d4691e09d98d08cfc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>keyCodeToString</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>aa836bd611802368222fa71c7e7110a3e</anchor>
      <arglist>(KeyCode i)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyCode</type>
      <name>stringToKeyCode</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a83a3a78ce78a872b851e32c58f0d4c33</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useJoystick</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a88e22225f5a378113f78e5467087999f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useGameController</name>
      <anchorfile>classG3D_1_1UserInput.html</anchorfile>
      <anchor>a9a8074ce10cd7fee984209519920c437</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::VAR</name>
    <filename>classG3D_1_1VAR.html</filename>
    <member kind="function">
      <type></type>
      <name>VAR</name>
      <anchorfile>classG3D_1_1VAR.html</anchorfile>
      <anchor>a7c0390119054f6c43076cb3181b7d69f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VAR</name>
      <anchorfile>classG3D_1_1VAR.html</anchorfile>
      <anchor>a02a02b32417340bffe584682f8c88a97</anchor>
      <arglist>(const T *sourcePtr, int _numElements, VARAreaRef _area)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VAR</name>
      <anchorfile>classG3D_1_1VAR.html</anchorfile>
      <anchor>abcac3487702a3ef32a762b27df9a088e</anchor>
      <arglist>(const Array&lt; T &gt; &amp;source, VARAreaRef _area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classG3D_1_1VAR.html</anchorfile>
      <anchor>a0047ee423787dab315aa809aa1faace9</anchor>
      <arglist>(const T *sourcePtr, int _numElements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classG3D_1_1VAR.html</anchorfile>
      <anchor>a2503178872c8a435547b05a405a0b7da</anchor>
      <arglist>(const Array&lt; T &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1VAR.html</anchorfile>
      <anchor>a8c86df5f358caa96b26325444993121e</anchor>
      <arglist>(int index, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classG3D_1_1VAR.html</anchorfile>
      <anchor>a033573cabc081d36aaa4d92ed0cae2c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>maxSize</name>
      <anchorfile>classG3D_1_1VAR.html</anchorfile>
      <anchor>a5ae661ab26ff972e6cf14e760999ed06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RenderDevice</name>
      <anchorfile>classG3D_1_1VAR.html</anchorfile>
      <anchor>a7532f2d0335e7fc849b32c467b27a0a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::VARArea</name>
    <filename>classG3D_1_1VARArea.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <member kind="enumeration">
      <type></type>
      <name>UsageHint</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a117d0e2975248ada20e94610336cffb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE_ONCE</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a117d0e2975248ada20e94610336cffb8adcfb6008c09525393bb7230c0f213803</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE_EVERY_FEW_FRAMES</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a117d0e2975248ada20e94610336cffb8aebfbca42305a3204bd1373df16de7423</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE_EVERY_FRAME</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a117d0e2975248ada20e94610336cffb8aa0792b7c7384a352fef1648c02d7ad8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE_ONCE</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a117d0e2975248ada20e94610336cffb8adcfb6008c09525393bb7230c0f213803</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE_EVERY_FEW_FRAMES</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a117d0e2975248ada20e94610336cffb8aebfbca42305a3204bd1373df16de7423</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE_EVERY_FRAME</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a117d0e2975248ada20e94610336cffb8aa0792b7c7384a352fef1648c02d7ad8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VARArea</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a4d070df8d54ef5c78ea66ff8bf435af2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>totalSize</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a0dd4cdf478773550e1b005f151f17356</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>freeSize</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>ab270156cc3b7d4f4d26c8bb9ffdb1e9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>allocatedSize</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>af230d946ea9c88c23b61623cf66364e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>peakAllocatedSize</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>aa97da6c1d07f0173e14ea80ff92fd680</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>currentGeneration</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a1ce6cc58f96950c641819680bbc9cb27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>gl_vertexBufferObject</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a4b6cdeb6cd2423c5c9ed9b51817bccdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>gl_basePointer</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a274ba5c96938b4edec6c359d53577478</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>af6aa0e0a6bc0e277f6d5b80fcf04e904</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>aef76de04eaabad4e8d28d0c4ae57402d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VARAreaRef</type>
      <name>create</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a0efded1a61bebc61db8bb124e8ef6365</anchor>
      <arglist>(size_t s, UsageHint h=WRITE_EVERY_FRAME)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>sizeOfAllVARAreasInMemory</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a5ed8cc4b08adca794abf1bb1c9957804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cleanupAllVARAreas</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a00980553007ecc4f3c7e64fa4e3990be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>VAR</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a38bca19a2321fa916e95724e809440c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RenderDevice</name>
      <anchorfile>classG3D_1_1VARArea.html</anchorfile>
      <anchor>a7532f2d0335e7fc849b32c467b27a0a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Vector2</name>
    <filename>classG3D_1_1Vector2.html</filename>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a298fba723e2a33fbba106e840f71ffad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a4aad07db4165149b64dfea0b8a001b21</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a71e21c9198f3139bafe382771496719e</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aa72b25fc2cafb6c68c81f71e02c7992c</anchor>
      <arglist>(float coordinate[2])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a82e7fecb23ef5713b421bf75a415ba7d</anchor>
      <arglist>(double coordinate[2])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a908c9bfd91c16a17f54573f1f47a2f8a</anchor>
      <arglist>(const Vector2 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aeef53a44479b0dc009307bcdae3db238</anchor>
      <arglist>(const class Vector2int16 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a82bae4844be61453b177f122db5a3333</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ac4c1844c4b785536a5e52dac66175470</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aaa18691088f916ff052a63ff7a12c61d</anchor>
      <arglist>(class TextOutput &amp;t) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a254f74783aec8f05738bb19a981cc43f</anchor>
      <arglist>(class TextInput &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aef16e9d3b987c1cebbc382d9a36e8a2e</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a5dc7a40965f3620b6ec44c53bc2947f3</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float *</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a96ea45fd99e004cd5d8ee6cd66cf5f38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const float *</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a62f048f123471d3099417e8130aefb21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2 &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>af7974473dff19c844f3077b7e3bfed12</anchor>
      <arglist>(const Vector2 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ae6c4e477f823a386b1a27f0226e5e183</anchor>
      <arglist>(const Vector2 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ae016ec2664bf752e9b05c2b069dfbcab</anchor>
      <arglist>(const Vector2 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a81f890cf1abec85e6dc4c4e8e14d678a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyEq</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a616c96ed55301e3c97bef352e1a481c3</anchor>
      <arglist>(const Vector2 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyNe</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>acaa0f80bbe209e2ae87ca18738bd32e3</anchor>
      <arglist>(const Vector2 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFinite</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ac988f67d8262591dda77d11f7556588a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a734f0460fa368bfe845305a36d798a44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUnit</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a4537d8f8ce8f4bd575ecf724026c52ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator+</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a7d91a2641ceeb04720aeb9e4bb7c5f22</anchor>
      <arglist>(const Vector2 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a1dbe66e9166e57d2e64dc95c0cb5a587</anchor>
      <arglist>(const Vector2 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a90ed33f4147dfd03e9b9cb78230877bf</anchor>
      <arglist>(float fScalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a86bd3acc00e6e6d3faf64e04aa04488e</anchor>
      <arglist>(const Vector2 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a17365818044be7f4eb3f40c38de33a1d</anchor>
      <arglist>(const Vector2 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aca73fa2d8d1cd700bb638008791eaad9</anchor>
      <arglist>(float fScalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a1457815aad92f7cf526cfdf30d00046f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>sum</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a96ca632c24ebdc034bb8afc1f557be19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>lerp</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ab2055d11680a60900a824f310b2a4717</anchor>
      <arglist>(const Vector2 &amp;v, float alpha) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>clamp</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a2d066f5ad9e07081f3afb77e323590f0</anchor>
      <arglist>(const Vector2 &amp;low, const Vector2 &amp;high) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>clamp</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a39defb37c51394c19622f06fe498e0fc</anchor>
      <arglist>(float low, float high) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a74ad03ca3019e4aac6d8c4187798b4c6</anchor>
      <arglist>(const Vector2 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Vector2 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ad002b46feeb0887a79112620009ce299</anchor>
      <arglist>(const Vector2 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Vector2 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a92bad7e886047d60edbf0921a57f2df6</anchor>
      <arglist>(float fScalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector2 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a5b6228aad3f1537bb1561a4beca57bef</anchor>
      <arglist>(float fScalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector2 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ad9080ce8e1833f7334c333c07446afc0</anchor>
      <arglist>(const Vector2 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Vector2 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ab23dc89c1170f4ab84a695a9cea9f17a</anchor>
      <arglist>(const Vector2 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>length</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aa2a0694f42e9b2a88415c05232219fe1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>direction</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aca8be1e8b51c0cddde64a1f4cf432cdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>fastDirection</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>abdeeb54ef40a68e4778973e310b93fbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>squaredLength</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a947342a6a0be1533f7f0f5a24cbddbd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a3ea2b0911e6f25a707ef7aa7936921a4</anchor>
      <arglist>(const Vector2 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>unitize</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a02ec0a00de48e8863817fcfbe5d8e8b2</anchor>
      <arglist>(float fTolerance=1e-06)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>min</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ae083e0f825f204c5fbefc58baf98d9de</anchor>
      <arglist>(const Vector2 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>max</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a5e9e58e6fd8cd64a455f572de366d6ad</anchor>
      <arglist>(const Vector2 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ad562a8e03103d4dbb6f64a6640152a88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a987bc041e706ba7676585d31ac743c5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ae3db92ec45978f46044b24e91834f771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aa5942b9a57c926e34cb7571db0d1a0ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a44038d81df25a95dc33a246215417625</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>af7cd856aee9ed6b596b33b2b557d3579</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ad79552d38c97dfcdad17b4ca5ad60bf7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a02a135b79002e74ded331cf791978036</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a6933c993b441451b893aa722d9dad6bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a19a2a8efdfb1221abd1ea21378048f8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a82539d42e1410ad9c5b2bcd320416647</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aa0ede43f62ed4b31b4123a5952c149e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ac254686761299140130defa36dd5dc79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a395f2941be671c2c357ebb269984c1a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a6ac10a973f7ef61a822d95eba41d0ae3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ac680b7eba95e4126f2979afa53ab6ce4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a923ebadf2e1e61db09909937e253ce62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a5bbf82d4cf9e71517e16c59a78f953a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>af3bf05349cb5cb4a9e1f9af8e98bc242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a6058523390d6d7700d6e7d13de742971</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyx</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>aa0b28e2c2482c0f310e04d6e7066f230</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a7ca6d10e404f333a03c54c7afb6207da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a397c0839298c2ec2c15ecfe56c1d6523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a2cddf71e089a967c8c2ee638256a4d7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>af7e94df58ebd863406ad47955119dff8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>af3d49d7ead9b31741af9f3ebcfe3a1c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a7c86b9d805332fa0c315b53e6c20a012</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ade32968780cdd59b8c26a6e4798778ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyy</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ad80a28d0c0df33bb6f06e1facd49d69d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector2</type>
      <name>random</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ad0d76e5c569d3233303965dd7b509294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector2 &amp;</type>
      <name>zero</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a8a74a4ab5ba7ddc0775ec57060af303f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector2 &amp;</type>
      <name>one</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a8544d66a8fa911df1f81301bde6521d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector2 &amp;</type>
      <name>unitX</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a32703215c51952aaba14d9a0b9518723</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector2 &amp;</type>
      <name>unitY</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a51069cecec06ea00dd40d8b00850a9ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector2 &amp;</type>
      <name>inf</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a4e57e12504716917bba28549a05d1865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector2 &amp;</type>
      <name>nan</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a3ed94eb784f10100452eaa3303c16b74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector2 &amp;</type>
      <name>minFinite</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a15205e51f3d9c176f643c57a36b4b834</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector2 &amp;</type>
      <name>maxFinite</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ab2935a289f8078fbeb873af70dc9789e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a6859f95cc29b29ae7c0003ef5579b372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a706da7e30ece3769054cee0c88d1090b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector2</type>
      <name>ZERO</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>ab97de7bcff926a138e69af88dc188daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector2</type>
      <name>UNIT_S</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a761e6498d54b52c1fa77b351f7074712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector2</type>
      <name>UNIT_T</name>
      <anchorfile>classG3D_1_1Vector2.html</anchorfile>
      <anchor>a8d261ecc9f4d18a936c6ac43d503d116</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Vector2int16</name>
    <filename>classG3D_1_1Vector2int16.html</filename>
    <member kind="function">
      <type></type>
      <name>Vector2int16</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>a77c07775c0763bb9ce7de050b47a8bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2int16</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>aafa9c8307a209176a8312e9a931a234b</anchor>
      <arglist>(G3D::int16 _x, G3D::int16 _y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2int16</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>a5c67c6c4436df637e5dddc333f59b65d</anchor>
      <arglist>(const class Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector2int16</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>a186db4cd7e0184f39dfacfa37631c2fb</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>G3D::int16 &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>a4e769f0250f95ebb4f730d927462f3e7</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const G3D::int16 &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>a3dfb8886fb51985634742806de2856cb</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>aa908817ce204abd901eeee20602dd974</anchor>
      <arglist>(const Vector2int16 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>aab6196a1f212aa5e058024564e40e9a8</anchor>
      <arglist>(const Vector2int16 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>a1f69c29401a570d7c20dcc9d4205ac2b</anchor>
      <arglist>(class BinaryOutput &amp;bo) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>adc4d7f63a46d13391eb5108484baa3cb</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="variable">
      <type>G3D::int16</type>
      <name>x</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>a64b26f6ffebd33616089551b5b0af388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>G3D::int16</type>
      <name>y</name>
      <anchorfile>classG3D_1_1Vector2int16.html</anchorfile>
      <anchor>a39d460eb593bd68fc3f0b16f70248d33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Vector3</name>
    <filename>classG3D_1_1Vector3.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Axis</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7ed00de9c90f2a488bc481bab15f1ace</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_AXIS</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7ed00de9c90f2a488bc481bab15f1acea4cdb06a96d6e556ce045ee2ce31523d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y_AXIS</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7ed00de9c90f2a488bc481bab15f1acea628080190f6823a982db0105d05e5615</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z_AXIS</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7ed00de9c90f2a488bc481bab15f1aceac49ae4b5c6fd9f6ce15851f3739d18e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DETECT_AXIS</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7ed00de9c90f2a488bc481bab15f1aceac93c1ce7d292b89e23e687ef4a877867</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_AXIS</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7ed00de9c90f2a488bc481bab15f1acea4cdb06a96d6e556ce045ee2ce31523d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y_AXIS</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7ed00de9c90f2a488bc481bab15f1acea628080190f6823a982db0105d05e5615</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z_AXIS</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7ed00de9c90f2a488bc481bab15f1aceac49ae4b5c6fd9f6ce15851f3739d18e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DETECT_AXIS</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7ed00de9c90f2a488bc481bab15f1aceac93c1ce7d292b89e23e687ef4a877867</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ab67b8cd6401c6dce004df38ea7076882</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a776bb27cca75b1eefcafb2e87d6b8baa</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a4bebc464f8062d7d7f2c310d735e3c6d</anchor>
      <arglist>(float _x, float _y, float _z)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a86b62ae32cad615c4538ffa090411c34</anchor>
      <arglist>(const class Vector2 &amp;v, float _z)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a3ffecad4b16a9bf8339c72e4a9dd6068</anchor>
      <arglist>(float coordinate[3])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a016280de6928329742cc4c6034852170</anchor>
      <arglist>(double coordinate[3])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a763ddfe013fbdee903ad7c30af0dfd7f</anchor>
      <arglist>(const Vector3 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a8ccd775dcd194183eddee96a1917476d</anchor>
      <arglist>(const class Vector3int16 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a10b3c5bfeb88fc79da8d112bc8275947</anchor>
      <arglist>(class TextInput &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2a4fd6b9f062d91644fe38993ec7a5a7</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a489adae3ce8c73bc9fbf370c1f753f5d</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a16dbb78c7c73f81473e9a11363f5061b</anchor>
      <arglist>(class TextOutput &amp;t) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a39c20dfc3340c4aea85d099eeec729bd</anchor>
      <arglist>(class TextInput &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a5b58fee7ee1fd32111b52084045a7ada</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae1655813dceab9e58bbde8fcca645655</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float *</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>af561586002cf5d724215fe7fbb4b69d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const float *</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a0ed39429bb71d7a317060f65cae14f36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Axis</type>
      <name>primaryAxis</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>abdd56449c623bc028e978f00765aa665</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3 &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a20b4846eb1e29eb4db57c527f7ea5b90</anchor>
      <arglist>(const Vector3 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a939582f39e03d50b53433e053fe784fc</anchor>
      <arglist>(const Vector3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a539d2fe171fd699bfdd5604bdc29dde1</anchor>
      <arglist>(const Vector3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a27d1259c271934069d2cc01475455f00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyEq</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>afb3d6ebf02bea679bdbf06767705e20a</anchor>
      <arglist>(const Vector3 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyNe</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ab3945ba81d4b45d5dbc7781dfa7a0962</anchor>
      <arglist>(const Vector3 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFinite</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a48f8ff26672a9febe0c00004848e976f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa85842de383d96994be3a8794e397dda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUnit</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a0a1371f623c64618490fcfec3f9e653c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>operator+</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae6f929cc06ecd3a77ba4acf3bce38d7b</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a1ba49e2a632e9f7c1258db257518841e</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a9063c0ddeedfbe043e5f537e09cd0814</anchor>
      <arglist>(float s) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ada370a0697b7dd023fe7c03942eb60c5</anchor>
      <arglist>(float s) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a93bc5ccaf4d23cbe1b36349ae4173b15</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a24c6353339bb3b548ab7a66f83358b6e</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa33479b4b4e7d27d67f7fa617c423394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a3219ea969f49108d637bef855fc356fe</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector3 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a54b4e0bb99d53ffad5194e798e516c0e</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a680a36d86a4ba74f2dfc7977da10edbd</anchor>
      <arglist>(float s)</arglist>
    </member>
    <member kind="function">
      <type>Vector3 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2aad37ab3a137ae91bcd4d4e69146449</anchor>
      <arglist>(float s)</arglist>
    </member>
    <member kind="function">
      <type>Vector3 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa89f4e9e70fa8aa5640828fd6060c4d3</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector3 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>acda32a17814bba0292920c344e3219a3</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float G3D_DEPRECATED</type>
      <name>length</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a3042e6a67922a0b2c9e532eb175d9594</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>magnitude</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a4ab82e1f74df7c27d6452f333f807736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>direction</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a07d08331145b1bf91a457e1063751ae9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>fastDirection</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ab36fbf98182c634064459f58ae02e2d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>reflectionDirection</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a261df5744df2b794d26c78c9eacc17c2</anchor>
      <arglist>(const Vector3 &amp;normal) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>directionOrZero</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>afb4b57ab2f390c66a521f0624a56ebd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>refractionDirection</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a227f6733a8971ad3e574d6a25eca5210</anchor>
      <arglist>(const Vector3 &amp;normal, float iInside, float iOutside) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>unit</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aaa4e8427bab05a4fd794ecf9eea9471e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>fastUnit</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>abecfed4d124041b8cf51520784138556</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float G3D_DEPRECATED</type>
      <name>squaredLength</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a369d4bdb9f356d4846aaa04cc62349bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>squaredMagnitude</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>af659875a23e39cd6bc6c49f3359be634</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float G3D_DEPRECATED</type>
      <name>norm</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aff440c4a781764d50720df69513840fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a738e0282cf91f7835e0299aaed0b2fa7</anchor>
      <arglist>(const Vector3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>float G3D_DEPRECATED</type>
      <name>unitize</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a6200cb74e6379cb694867eca39f08a90</anchor>
      <arglist>(float fTolerance=1e-06)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>cross</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a5430b1a90ea0b70a21e56e8664075689</anchor>
      <arglist>(const Vector3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>unitCross</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a9fd269a40cbc7771c58301d128ecf331</anchor>
      <arglist>(const Vector3 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>class Matrix3</type>
      <name>cross</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a8268914d62fb52aff340c29a40e3dbb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>min</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aac7827173c5e1e0170642d79b5521398</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>max</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a37221c502f9c447eba7b75e005d2b63e</anchor>
      <arglist>(const Vector3 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa29fccfd7aedeb3bb5feb268237d866e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>clamp</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a734c340d6139a06bc5991fc2a05bd821</anchor>
      <arglist>(const Vector3 &amp;low, const Vector3 &amp;high) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>clamp</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae4fd34be1a9f561d2df5a6ea58c284f3</anchor>
      <arglist>(float low, float high) const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>lerp</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a863aa7d5eba12c45a4244cda3533a4f6</anchor>
      <arglist>(const Vector3 &amp;v, float alpha) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>sum</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a1bdc2e2e76cabbf8811c6bfa16334777</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>average</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a0b88e801e9f9fca02dc6b082d8300285</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2189f5e80b533d9898c74b63086c7f46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a58c43dbe9975e90c903dfb7f03920db5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a119ead199cd5f93421af2ffe3c0415ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ab5322e56fa0c39589834e1a6e9f58f78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a9fc8b156fedb5efcaa06f1f1dbe7cb25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a49b5d1fbdfe4653552cde24ffc77580a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a3e908c8049a51adfad58e1cb21da9293</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a0423df0e0b63a81c7919c0696e285e30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa4290be101893e6ba45ea28eba532236</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a15908561116f46f8f3dfe08a19cd9987</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a41258a9d3f811d691ce4c230877c885b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ac7c91f94efeb5cecb5eb505955226df7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a946a3ab9466fb96bf82cb887e59f4cd0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7d13c084ca1b18be12dd4d8fd6f847f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2757a493240b308bd0e8d99ea72924ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a1a7b2a5fc2d8c226e623cf72d2afb813</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>afde58efa8e841f90b3701d6c492bc274</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a004b61e18ed6345984f75d259fc8c9fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ac3e5a6428abcf5102b185e036d2b63a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a0c4bba1f2adf453883d53a93e8a2eab1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ac7ebf6a684056d30ccccb2045aff21f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ad13c55aec7b54cf4fcf42488b04fe527</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a53a849c85dc7edc81e9fd9c42bdd4711</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a25123e806dbe1e52a0eacfe6cfb7aefa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae96942edd26e272520a39042c217962e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>af9419d41e96af45198302cd31150dba4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ab792637ca04394b5ed688c2c3f183b29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7a59c7720907d2070c84e14d9b31a7db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae9dc2c5d7daab398dfeb6cca67e20397</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a653ae25e7ec14fe9fa442bbccbbf0b6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a5b58a1eead6bb86a264273e7ac838b76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ad9eb86da81c83178cf1b2add31ca1ad1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a33da11446055ab96a7ff3ff71ab16f31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a50734a1b639aeab3288ac5824e285e24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a522f1dc09c46d27b2e51e42daef2fdbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a83d6a407de418e0cce8125445bf68c7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>adf14dc587ca952ac1e895c59252afef3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a1842c42af9dc4fb653511e69169ebbc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a8528e833635e58fab1e88431a032253d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a928f85488d44950cfab40fa2a5142d4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a0a14d6aaa0ac43d806ab48b190ac073a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a5caafe1fa9cdd82300dfa650fc5b6e4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a603e07886d627e01f92044b424e3df69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a052e0db1140b7ee38fca609c06fa9241</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a17a73ccbcf26e5bdf45ee0d841ddbea8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a720e8f8186f84fec108dc5f18231ad4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a0771f48e8e47b4ed77614cfc83a0604c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a77a5772086335f8939edd1753f6f3df2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a6e738fbd3337b844440e613738381ab5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a073157fe313355deecec37ddd1a6e3dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a341cb9b10a7a552c54bc402706bfe4d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa715af4e7813aaeb3edf36cc02c34bdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae6e5498d985f66bb6a1f106e84843332</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a32aa26f4900a706b09fc7f0a30c6cc8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a6284709ded3f82217ff83e913ae72f5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa122eb16a227d2164593877f6c757055</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a32cae10129843effc6832bf6c178427c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa3b85a6a50d882c54e1c1c0f61f9033f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ad14e19afd3789ce90370beea7d46addd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aff334600cfd69aa4fe77236c57600c03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a836872864ce40de5932dd2f7eee59212</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>adde78134886fc165451b0a731987490a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzx</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>acaef08a161a69cede8207f5de37f79d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a30e9bcef5d278d2a98c2d6b5f0e6dca3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a22aaf7ad834d51834967c04291bfee4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2c08e81d6f58397fc3f547df8b75b51e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a20c3a14ce17e0b59845e65f9b1f588c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aacd2f454ef94255be0b02512cecff38c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>af206d87ac8b49534d28e80e4a1477c6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a78ad7aa1a5eca4cd715bf159bb69a5ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a219d9e147d2c7da6a91b59c939d79b4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a65cac5a33c7b41e66741f06c0bb200b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a94c2bd3b4b1d8eb5f9d031b4c1938a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ab36be85a2c24d5b973fae0aea10576f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a57a63236bc06651dd30b8252944ec822</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa927e942b9cb8ff9a323940d3d67b8d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ab98f995a751537d6e805ec42ad977e8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a4dce05687cb73f2e99c791fc7f9b08c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae23fc267c725b46e9c52a700fafc124f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a70bd28802d191be94229583240f6c96d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a9c0de4782fc750fbc3fadbdc8e7e4f6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa6363f660e40efbe72bb0ca765a3ff95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>af1bb443a45761f0d1408e26cd0ae44f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2edb1b5b9b07115ec63e6fff6ebe6f3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>af7b0b2a7a26b20d2e595ff362157c491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a6a8b88bd9f4114ea13de01330a9efa93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a837014ff996b7dd913397a479fc4b208</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2b5a681cf49a96c736d81e0da8aab394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa073f1c6dd2b11b96437627b731c7663</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ad10319ca51ac18b5199f413307bbcb16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>af69ce8b471f663a0efd93843300a369b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae84c8497da4879a8fa64f801c495d182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>abfadc6e46df1a462f361a6f8b30dac3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa23233745e5fd24e5c54a50de4d6b2a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a502e96bf9fe96354c846b87919f12fbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae876438a868fe4a1ef8b642a80b92765</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a5225661d6488c92750b7a1cae28dae8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a062cc5edd78aabb473652b94c192516d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>afed1adf72a2b49f9fbe972acb5ba1116</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ab7fa3a2a1cf0a07cd497da114be92f2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2893d3ec87caa70b5cd38e3798832506</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>afcfdae2ecbd523ed9b4cc0b617e22152</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2aa61375d9b82aa10385bd247b3eeaf7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ac9e00b3d474cf8f132dea76db7800f5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ac0630ba26da4c1dce470889a72eda8a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a2c2f3db1a5d8351d6ecde6bc850ae393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a8397b4abe5ddefa4853c3bd8f04afc9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ac3549ff24321241f83e5a0544a2a7197</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a9ce99eb9f77b8c467291207e12371af6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a368e9a1367bc3884eb0838f8afdb82a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a68b52a040596602242677e0cdb0c18a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ac52b2bb071631fef150381a2dea25754</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a94c3267b6ba441b8b91699456b6ba489</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa4e1cba5073056a97701e5ca0333c2d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a32d1d08c7c5273b44ce298a704b70c78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a3389ea6f2daa972a4484f43ce435066c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzz</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a5aecc5eb1358850ec991cd80eca52bd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>orthonormalize</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ae09c220571e081f93715f3a1fccfaece</anchor>
      <arglist>(Vector3 akVector[3])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>random</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a54a615c9a638e516983d7ee84d50aeec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>cosRandom</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aa0c216bcc2ce243a9f2697b89de0c24e</anchor>
      <arglist>(const Vector3 &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Vector3</type>
      <name>hemiRandom</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a12a51973b0d211e3ad34437f77f0555e</anchor>
      <arglist>(const Vector3 &amp;normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateOrthonormalBasis</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a8a8b5ba4d4a469b15e772477ad066f92</anchor>
      <arglist>(Vector3 &amp;rkU, Vector3 &amp;rkV, Vector3 &amp;rkW, bool bUnitLengthW=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector3 &amp;</type>
      <name>zero</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a1f407ee0e25f5baf88bcb0db272d6f49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector3 &amp;</type>
      <name>one</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ac27d5e13ac466660a0cdf70855b852d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector3 &amp;</type>
      <name>unitX</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a3052c64cbeb14c854b873882695420b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector3 &amp;</type>
      <name>unitY</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>aacc93a748ed433a5fe9b4f4c4bb8f5f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector3 &amp;</type>
      <name>unitZ</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a81f028b2ce724e58f2f892c7f0150afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector3 &amp;</type>
      <name>inf</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>afc6d79d538001b3f2e2d7c6614a33529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector3 &amp;</type>
      <name>nan</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a531ad8adc5d11539def4810e3583b6be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector3 &amp;</type>
      <name>minFinite</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a8ea95ed48c6ffce41c44bf488c52e034</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector3 &amp;</type>
      <name>maxFinite</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>acdb72fa862309211be70a294b0e2ce58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a5221d181ac07f8b3aa4b198075cc0882</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a336ea2c5219e4f59c5cbb88e2154ca05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a5b1b970ccc9645aaa35726772aa4f5c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector3</type>
      <name>ZERO</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a33b0b596d1104eef5b91d7a0a1e6aab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector3</type>
      <name>ZERO3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ad3015c349b629aef8c4e8fe5f8886682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector3</type>
      <name>UNIT_X</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a7710db3b56adf844d4b24e4c3dde723c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector3</type>
      <name>UNIT_Y</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ade738fab4047fa98abdbec2742ef5db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector3</type>
      <name>UNIT_Z</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>ac54dc43c6152c3edaea7806d24f61fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector3</type>
      <name>INF3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a763319d3324d4217ec37eb6543af37be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector3</type>
      <name>NAN3</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a777159deb0a5e52ee8bbda8d6cf2db6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Vector3</type>
      <name>dummy</name>
      <anchorfile>classG3D_1_1Vector3.html</anchorfile>
      <anchor>a092c7533ade3e101bd86814120eb1e49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Vector3int16</name>
    <filename>classG3D_1_1Vector3int16.html</filename>
    <member kind="function">
      <type></type>
      <name>Vector3int16</name>
      <anchorfile>classG3D_1_1Vector3int16.html</anchorfile>
      <anchor>ad6a3b948b457e8bb3fdaa637bf4c0dbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3int16</name>
      <anchorfile>classG3D_1_1Vector3int16.html</anchorfile>
      <anchor>af7c316ae71fbdf0e44782115b6a2657e</anchor>
      <arglist>(G3D::int16 _x, G3D::int16 _y, G3D::int16 _z)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3int16</name>
      <anchorfile>classG3D_1_1Vector3int16.html</anchorfile>
      <anchor>ad30290b822a590c70d530bb3b3b0f9c9</anchor>
      <arglist>(const class Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3int16</name>
      <anchorfile>classG3D_1_1Vector3int16.html</anchorfile>
      <anchor>ad7bed60281bd11a4df7f121a3527fc27</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Vector3int16.html</anchorfile>
      <anchor>a7c826782dfa68cd0ebfae3c2ccb836c4</anchor>
      <arglist>(class BinaryOutput &amp;bo) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Vector3int16.html</anchorfile>
      <anchor>a830f459e4378a8ea4eee9d08b02dbace</anchor>
      <arglist>(class BinaryInput &amp;bi)</arglist>
    </member>
    <member kind="variable">
      <type>G3D::int16</type>
      <name>x</name>
      <anchorfile>classG3D_1_1Vector3int16.html</anchorfile>
      <anchor>a0ccb2a297400e9b4925a2bb2b452b8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>G3D::int16</type>
      <name>y</name>
      <anchorfile>classG3D_1_1Vector3int16.html</anchorfile>
      <anchor>a643f865369466c5f797e6d34f10f0d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>G3D::int16</type>
      <name>z</name>
      <anchorfile>classG3D_1_1Vector3int16.html</anchorfile>
      <anchor>a862de27e4f5d22beca95ffacbb2652db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::Vector4</name>
    <filename>classG3D_1_1Vector4.html</filename>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>abe60abd15f467c42e46a4f1fb08ccf19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa6956bb4d014ecaad55c683b17fe792e</anchor>
      <arglist>(float fX, float fY, float fZ, float fW)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6a19636ff2803afbe7b7299a42c6307a</anchor>
      <arglist>(float afCoordinate[4])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4c986cfefe1b61cda092afcffdf7e258</anchor>
      <arglist>(const Vector4 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa227fdd8f80002dce7b5eb34dc418d2b</anchor>
      <arglist>(const class Color4 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8c075796d0cd3db1efc79c2337e893c8</anchor>
      <arglist>(const Vector3 &amp;rkVector, float fW)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a70d00545adf1a2b1f7483980311aeaf2</anchor>
      <arglist>(const Vector2 &amp;v1, const Vector2 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a588f28c04f12eaf181d28f17c0d91e24</anchor>
      <arglist>(const Vector2 &amp;v1, float fz, float fw)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector4</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae131b0588e893aaec7eb8691c517e12a</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af002fc38b00c11d359d64fc8fd491963</anchor>
      <arglist>(class BinaryOutput &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a346133fd79b47d6a838b906da2d7d443</anchor>
      <arglist>(class BinaryInput &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1968833ba4fd826f9decf7e930500b93</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const float &amp;</type>
      <name>operator[]</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a85a181b1b0f0f3048a0547cdd73ddb14</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float *</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af56147c264a4f0066622979d78eb2c22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const float *</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>adbf0db98584484c10a649a53c6da0a89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4 &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1db4432a441edfd4b96fd11e9a3c2778</anchor>
      <arglist>(const Vector4 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0fb5f661c6c329df9838c2566187c5af</anchor>
      <arglist>(const Vector4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a98e85e951fb098080570e03d20262360</anchor>
      <arglist>(const Vector4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>afe8bd1ff28a5836942dab21feb428d31</anchor>
      <arglist>(float _x, float _y, float _z, float _w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9805224b60cd5e63fca6bbd55d87e470</anchor>
      <arglist>(const Vector3 &amp;v, float _w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a2368bead6c621a16fed2688340b7c7a4</anchor>
      <arglist>(const Vector2 &amp;v, float _z, float _w)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a167ad33c8e483066f7a91ea174fc5001</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyEq</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a246c324473376ba2848accf92aa10963</anchor>
      <arglist>(const Vector4 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyNe</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa3c25d7850656bb7c6493d4ae04395aa</anchor>
      <arglist>(const Vector4 &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>length</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae03a4e34982254de3b063945c64e2983</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>squaredLength</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a68f0ce263fd6ce6ee5169141135b7327</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>sum</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6bae1534e19ef784c99bf10d0cd8b345</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFinite</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a3befccbc94950973e6452fe42851d4be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac43be1d692ad6c1517bac83dbc32310d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUnit</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>afc0f7a5ed720361d1041983c935d1734</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>operator+</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac3bf29991571b32e280c1a6d8a5d59dd</anchor>
      <arglist>(const Vector4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af9ddb7338b3a291a0d9cad8c6b87462e</anchor>
      <arglist>(const Vector4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a434f9a31dba21bfa0320ce2953095a75</anchor>
      <arglist>(const Vector4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a187a8007406759bcec8caa16472cd21e</anchor>
      <arglist>(const Vector4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a78b5e7bf35f6b8cd0d5b2933a9ffe10d</anchor>
      <arglist>(float fScalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>operator/</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8d314743de0c9872af8a7af658ea173b</anchor>
      <arglist>(float fScalar) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>operator-</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af592283b3f24bfc291a719209d549626</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4 &amp;</type>
      <name>operator+=</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6bb5c432454843b308540b1e850c5e03</anchor>
      <arglist>(const Vector4 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Vector4 &amp;</type>
      <name>operator-=</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a75ab9dedce4c0a0c570b605019a871f8</anchor>
      <arglist>(const Vector4 &amp;rkVector)</arglist>
    </member>
    <member kind="function">
      <type>Vector4 &amp;</type>
      <name>operator*=</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a424d530df2a19bb3f0308a4b37394bde</anchor>
      <arglist>(float fScalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector4 &amp;</type>
      <name>operator/=</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>acb157d59f55a7fe89ff777b69fe6270f</anchor>
      <arglist>(float fScalar)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>clamp</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>add00d9bfc55b45fcc86c8081e8c93114</anchor>
      <arglist>(const Vector4 &amp;low, const Vector4 &amp;high) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>clamp</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa050d42ea97500dbae6754c786a15b75</anchor>
      <arglist>(float low, float high) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a574d8dca23ef00da239660fe68524c57</anchor>
      <arglist>(const Vector4 &amp;rkVector) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>min</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a49da1281be3c9021df8d3023e4a14220</anchor>
      <arglist>(const Vector4 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>max</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac7b6f299961260188989ebcf95fe0df6</anchor>
      <arglist>(const Vector4 &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9a73ed26e94acb05c8ac1875a4311434</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>lerp</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5d8a91160be3189186baa592732c00b4</anchor>
      <arglist>(const Vector4 &amp;v, float alpha) const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a344bb97851b6ff3c2784580bb75cf0ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aeedf1e44f12f5dc17bdeea7e9552bdab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7c63e89b4e9f11f5f25493337b200ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>wx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0183f6e13246050e92b0ee9e7f5a03aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aea18001fa5e4aba70e87315711682c20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac3380ce7b69100aec7cc6341861acfda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aaa6921874221acd9e9cc337a0bc1613c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>wy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac11feaa4dc2f0836fde50508d0771a01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0ce97299399f1690659a2054ada4e114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad677dede4abcb8b2c2c3965cbf11c344</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5569dcdf10369c5a8d1833a1b285a5c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>wz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ada2d4d6d7fe02cb1186f1f3a917423f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>xw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae0842eb38ce958ed6f61411c89b141a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>yw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1e07d51367d94baadec882bd8c398fe1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>zw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a47f64db6c01afb56e580762ff5a54b97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>ww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a102b637ae6b78a58bd7014d076e91533</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab3011e48ac9991b91e2ab01a6cd3843e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a3d57e04a90b7a59256ef12d7efcb2744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8a1e79da985bf1e252b11b2a2b19d7d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a165b3276e19c17bf965f0fe8b69f3fbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0c340ee7b968a0a439cb128a9be99546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>addfd5bf92c1c9346aae9671b34822450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9b6c0d3301fc26f99a66e1b9e0fffa2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a82fb8fef766422d6e656c6ecc58d19d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a817f44958b0c9260eeef1e0070f58d46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae98a9b9c1cdfa9f6b9480301170cb731</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6d5ec068dc462bc66893d530af567da3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a89e2c23677fc33df02649e9d24a96b7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af8470ca59f998b25f4dd50377479efed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>ywx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0c53d7276939ca8c6691fbb99092b7ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5bf40931f929fd9f154af57a7c1a946e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a61ee554b4d321e58466e7798a4a2aabe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a3fcd4503e6fbee0643f6cd01fc693b5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9c882fb37b88df30a37e8783ddf44137</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a77cd813b8ee591350695ebbb1bafc685</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a3801d01a153b5cf29227f30a71a56979</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af843d4bed74fe359040cab32e064e3e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae5bfd8b8410332aa1c7a2bb66cfc5160</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa98fb65215089314288488f02425e898</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae159c46a60c0687d9882d2ee6685c959</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a2206f177706787f541920781db8004d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>abd561f694c03c62d9c0779aa2797dffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6c6457fdd10851f01b11b21a6da716e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9c874a13b7bc68f79fbd98821e1278fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac963e882686daa6925a0f519e5fb941b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>ywy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a60af7a66c735b3d06f6d74de728961b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a146f7c707a79e4a1d56e7dcc51ce837f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aeef3e53763f041e3e1584e69d0a28767</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7cb19fa977f357bfdea5c4a70738ede4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aca2e12f6193543947f8b8fd135cd532c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a97223a6116124a742e75410a9a971d2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1eca01fec5f4332b39d6c6c1aa60c3ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a269b4c9ced06b0742672da430ea8dc7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8918f0509e7cfbd5666a8e9f47ed3b72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a966e626857794f2d80076831ca088fd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4facb3fd8d873785f503c0fbd6ecb838</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab9beea935115229866bf4052f84e58ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac943898a410654233b28cee8f347a659</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af05fec4191bc2389b8513439370b667f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a39460af770e71b0af53fefc06e6a61e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a53495c2610c7d303ef8a2fd775a173c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>ywz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4e183df7b52912ca1fb7dafb736c25db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ace7819508192ca42152d672a61c503b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a480fed9cb8b62b793f236e5a49273ac0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad55db9390a2f015b594158054f41e9c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>abbfb71fe0416f3f141252b83b0abfecc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>adeac5d1a58581154847b1f54a689d6df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac7898d4a5e5a52cf8abc0f7374d2d3e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac5f9ed56cf2979a33daaefa128fde484</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a45b3eb1ca09f4d20e92ae5c26596542c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab1bba7879e3c3cbfedab8604319bb305</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5c84972061b67f47ce6b9d3afe22990c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad8829cb80c183852701e599d553165de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae4ec92055584ac1c70b78ef775fb3bf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a38fe8b255dd3d2fa29abc2a077784a5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>wzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af5120db4b76fb681201c8261081c6bca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>xww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a23b0a8b48f77ae3f6685979d0db5c3bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>yww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a22fc73a522d0f029bf01dcec89d870de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>zww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a3b2932e32744d86d1d3653b46b7f4af3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>www</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a405ac26ffb9ef9a7b51f2d5b53895907</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae45c2c29b3ef17602bcc234976e3ddc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab28c99390931f44723c02ac8c512dc7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a07ead1bb104a8a56121d28e71eea72fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a07fce8b25a9c69cb376db6c82fa105b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a27c54b5ebcae752c87265e6c5d9536d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1eea435c9012350dcfb584da79777050</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a65ab84689b19f2c596cfd88b3dd1e04f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9537dbc4754910b7279afd7fac36b5df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a83cf72ceb998e3855008c45e37e89847</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0bca672b27689d0a5f2f74a7757558f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1a85b43039f8058c780f7bce838f0413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a2152541992eee2f02a7f2ad50ae42d69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a17f32d22bdd92d91578e96b9f6e5186f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab03a3af387f1e8d170966b1878e46d93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab0731feabb4a67d4be3bd30bc74241f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwxx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a65a01270fc52231a6421b3702285c9b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>adcb01edade497383f59bb123716a5e38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a39343ab076a2240ec8ff49c0696ad125</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7009f34078bafabc1e99caf9e22fccdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a99ed14cd8f26057ce533da6c1cde4b27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8f6b1de52491424c9e89d9a9857bec24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac80dc6b70115ee227531627fe4ef9d20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5d01fc04ed3ac34791228ad22f7321bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a57e37fcba088f7d5f98dd144b8496a6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6d2642d50e6a123d1b0b874ae0ac06cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac80fc08b2a40f201fefb3e03d3edcda0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>abff0ebf095546914fd35e93f7440949b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6d9b3f1f8b55b34ec5bf480130e9e07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8db3b08be97abde072d44f4d8fb3e234</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a13d42d07619c4b508fbdd498776b2b7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6a5b7e5de8790c1b70995f489c001182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwyx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae39884615f73d0e7076628d1508573c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a12d564d3972e80b57331e98e8e885d58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a04357d700a0f519cdbca67f8550c7955</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac7a4aa9fc5aedbf3381ba325df81891e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af1b50192859e5ad4eb74b212e6a36a09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad90baabe20aae8ab1ca25a4f32aa3d5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a66dbc6f8adaa893f953200165c34f07c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a24a0b0e9d9f794c9685d2082877e212b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4fcba7efbdb94143e3a1934468ff414d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a36941997082a26fd77cd83d18c22555a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a104697e944537c20bab99e7e27c47bbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac65ff7127ff965bb1a10f9ee17147e10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6f87e65d847fba1f287228cdf4323674</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a800cb1a4e81a56ebb8c76c05cc12973d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac76255010dfbb5d92d11ef246cecfe75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab089239cfc093aaca0cc1f99df9413d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwzx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5c01f8cee50ee9c9de046d1d714dcfe0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a657e1dee57d23d7741efeb99e8de4a5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4120ed84b78018e60018745874a0ed15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>afeb81733737622d6ea781005a2e0a3b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a896ff4f8dc9c3c38576ae1d694b28f30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xywx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a70ad933abf4b6ec60ca3e4d164257e78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yywx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>adcd64a1d839894da936d1c8fcbf65645</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zywx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8970a3e2973af1de49c7cf7666379270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wywx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae92b656af4ee61fe018d22ff04b715e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a70cc71daabaa80ec1700e104117d544c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7167d4c3b967cf309864c6a522d1ca7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a76b34937f248eb5b4b6a0bb40d246338</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad8ee32f22c9fa982d63d06642c4ca55e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5e78f427af604283991d29fdb565800b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5b7cdbd8fe8503ef2551f5c99d851048</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a264b9d830decfbc55a93f62d09363bfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwwx</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af8abb43a7170fc27f1bc2c6a302ce1e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a11982d5a7be6003cb5607f2db7a2bc9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5ff7a113cd06a34c09c9fb2d091ecb45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac66ca4b4ff557d26e229013d3f7848db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a01584b42628347ec7bdbf3310d79a4cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac4c5f656bd27b10aff4b6417c52d3919</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7c6b9acbfa5a0628f057058fc7a42702</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9d3f17b1762dec8f5a5bdd90d059c3c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa1e72fceeddab6a24258f091a487dbf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa21843e7112c5976743428e617a2ab49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a843245f237804407c3f20dfb1adc2328</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa1f055ffb397a47cdf1f39c7454aa9ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a52008bd698fa406805ca78205844393c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae8646eb979a531fc320d9ca425b6f4dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9f862fa3953aa9eb4c23abb78aab6fe3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a28d1c858cc2811714e749d79eb9404e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwxy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae45e277f10e21f2f4f16cb3a5665eedb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aac13bfb36d3b918750d4d6324ed28c24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a35cf14669befffafa1f9e06c0f1aa410</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a41bb5960701938679f0346495e77f2c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a69594e2c1104f5bc9da77654c5255edb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>adcca552a16c23bc90df06c82121a3c4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a50f889825e67b0e685b8cba7cc259b66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a503c69d61d8e00267adac7dc8b8bc619</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac3fe51cd66e6686cb8214616d688a151</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a07130f0ac004d7a7e64bc50ac01151ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad405ff9884d9784ad73faf282977a149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a98e4a1dd9889326f6f342fe81fa4de2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a760da00d27cb6319126a13654c6077a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab73762c191f4ae8ee191873dfaeff82e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a90569b1975619055e287c6c80da68421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6a7c9f6f1f464401d11b654d40c3c6df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwyy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a70142226b28cb7b11f1e0cf9e846877f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1b8b865ad9422ad9ace4bdc25cc5f56e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ace22749d6a7d2c38432f878f1b7bf632</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a744aa61fee58d4a2cf7417a169b035ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>afb5df172d665efcafbecc64f736c581c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae8e9aeaaaba8a36ca4048f8fd1f45328</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad63494f40517ac1b8ff94209b8a70a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae16f5baff8d4e04cadbe2f47ba120f8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>adf71f55164c89f6b91c7217251f35abd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a23a6bb35346d16edcaf38b5e2c624f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa669276fea026a1989100e78f853f302</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a11b90c5923961c879e4b4b5e42a11b9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5843be7bc9484fcb41451fd91d833c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af1881fcb623bc43be52b2419927e1892</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8c4f6a1ad174d7ba9e67c8c28bf83c5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a693d58867cb272f16c09330735478e59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwzy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>afafb4bb689fba2a14dde40fb454476e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae075d78f5812c4e890f1ef5f422e907c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aaa5eca71f670f45df971f769b38a31bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac372c77eda7bc4f6fcd1cf6e9ee07d5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0e5666fd1cea82bdd3c46899d3b3f5a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xywy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af77bc3d98466c8e9d62e6c3e134ffe8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yywy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae13006c9f292c08430b06b1e9140ce9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zywy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a35e14bca3b50504b0aad55b5d30d2a79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wywy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae8cb31cd12961fe4b4f74508084643aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8ffc9e6336f85d425539b59d3a5c2e79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a85f8395b32d4ef2f2fbc0393973a8933</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac7c6c217cbe1a6c53764a9341cd0ad85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a120352fe983864f9e14ac294c5801822</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a78907fb3ec1dcff08a1a589d009188ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4980f6d3b5db0fcea313df85995a3dac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>affd098624de02e8a8baf05c747a90d64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwwy</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac25e2f6b941f88036a1ac02fbb8f9e29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a974c1807315ebab5a38d47fec030dd4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad382fb09fe7a2220f4bdb12b7a0f2872</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1a305c35fe812657afb41fd449250523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a89b9709d27532017b6bde74a2f2d5085</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af56178209debfda17efdd29df8040dfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad479b35124af8feb041c68e847588561</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4186957955ffc8137c3ce907d13a779e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5a491428cee4ffe63d785a845688f448</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1f2e4799f8dd152ca0a4a1a4a87f7f9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1c52dd1866152512c00d6c6af4b45233</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a00b63679c1368db4f84fe6d644927fc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6d5d97b9bd11c0098eeca1f1893648d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae89b7dca952759910235969bc8d0f11c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa0b0e772243127b911a6d27418bdb59b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>afcecce5f85f0c56cc8c4525f8c200378</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwxz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1fefdab9a993574bdf073dccea4d09fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a46c5acea1192f9a24fb1d6629ac73090</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a58a81cd35213c9e21edfef4eb25e7a2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a372633bbe7e981e483c8dd9d04ea2064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a88bdd3450525cab2326fad6c40bfbd26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>acf25c0de9057c114f9cd680e2edec109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>adaae45e6abf01720b2b621162c65b7b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0637d6e6256ba243f9d401e4ccf785fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>addfbd987beae4682ac6f625272e10411</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8bec038978804da0aa4760e26aefa919</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4a6cae1aa90081f61083370518471479</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1ee5cf0403827673c4249de96a4cee5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad461889fc85829c33805dc1ec09c3b6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7ef642defe051e7dd125c18ddcd44264</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a14176d639ab289672c988e5b85e1ccb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1c566cb205fdd53c397d9f3a1715c9fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwyz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a48f98fb63e9237e6538545f51ec23ce4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a83d6f35cd526b4630cf86a46669ed948</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a2f639edc80350f4dd56e7b22283ce1ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8af6693aa9a110453a6acc9a7886e528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aba229d5580ac055c8529bfeebf183f7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a71222816ff996c0944f6763f4fdf63c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae8ae9e1d621d49b13666dda168858581</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8da0ab5c3b28ad3555a84024c3575b71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a45a068da90f402bf7fdf9aaa4b068c77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aac8b609b1ea8884fc2feeb0f4c603af2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad342d8fda62425bf3b8951d4b9c7f525</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0cf140e581eadb4186d02836f65cabde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ad51f85d5b5b7bdb712c88daa0802e22a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aeb98784b5a5fcf43664edc2fc0441a41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a83133d6df23be37e772343113378c42b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac6237a06497854ef24daf1d0a89db9f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwzz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a34c0a39aa2e491ddd98e5ed814a82ac9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a76c6d8a5ba17e6249fc63dacb7247f51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af95388eabe1581658ae9ceeb83035d2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5585b9847f036be3e561f4ab64832505</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab1814d1015a15516bba5837358c5f2f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xywz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a55180300eff0346edc365e2557cacb96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yywz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a044df05ad59b8ac4d677b4bcfc3085b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zywz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>afbf0dfe94b64e8aea179be409c96f2d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wywz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab21111452beddab94cf91980073e2722</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af2ff2a0405b6c21b948e164e426faad7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a39d136baef7a1dd880a6be47a2395fa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7ead2fa90eacf9fab4e9fbb3ea3f767e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a30279589a6e408fc6ea39a954396a50c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a198b4153ea6cb6b31aff7f9dbf25c918</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a628fa653b77baa89ef8cea09093a5e4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af5329efa78c1d80080e657a30aea261e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwwz</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a95cf32524dfdd56580d95810cac57fe7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa9a59db6a9a23022dfdfd229aae6deb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae5ce2ad1eb68ce8a53aa6e16c910bd52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aff2d759997c06a3fa2b113f764454151</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a16f180f0a5c04db1db0a8ff41ff45ddd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>abc613093546d421356ec211af4298236</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac47e4c7daba94a5e2ebffc7b6af74346</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a699a3041866ba00182a9c83b3a059190</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a48dbddde4611b180a39c8f9b0986605b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a720338d47fea4c172052fbaac6616269</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8cc7840d691134117d5e97e21e5841f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a43871d7fb10bda3d5b8b9accda18b5e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a02dfae98e84d87aff36b3839a04541a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a3261d8749c34741fa97d4b3d01d594ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aee1623cd14a9cee0049b8c1f2eef1683</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a33d1efa76ed8314ba271c43ec0741bf7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwxw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7be539f8a86f8db7f91b644375e96a4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab79d084115e23c2c3e0413e54793018b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8c9e47100c1c576b3eb60ae8f82f8a38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a3b77074b3d5075aabe92f7afa44d142a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a940b6746d062d7a3e8f5885b362519fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af68f446f10966a6ce8749f323b80ecdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>afc31befb7e9c533cf9faa01252e6806d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6e42058fdb25d3026422adeb7f94fefb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aee973f8d30fde90c482a2d54a55cb67a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7a19d28d6e9f28aa1ed3cd823c6d7063</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9136df4e95b73f888e6d065a6b654061</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>adaf60498ee2c8a43e1fbd07fad3df80a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a86b00c0a0a3a5c405cd4d82ef7dfb8d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4af58742a01ef7966b32823938f68305</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a31cf2834c892262c0dfad65bc1f344eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aa0dcd1cfb5422c73e5045e164e6f2450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwyw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a748d3fdd3cd49d3f9a93981d66e24fa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a04e32d430b6d7da823e4e259a88e4e33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac20f6a6fb4043814a86069231a5861ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab187e5b3bdc46f52536971709a1489e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a6a0051d2efda3fc92ecfc89ed33ba5dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a0443d8daa49c530bf323106bec1184f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a3e1ff809365614c79734eb01a1b83ed0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1e35b8674193838cb237c17de61b93d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4c496ac4f45bb3e124e263a1ef557125</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a49904f96671b2f0a5f0749b65f98c0d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a5c8fc2af026b6ac5c59eddde2ed05054</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a92fec2fd934c6cc2e2aaafb40d780e8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a36738512dfb414ae62e6824cca840ebf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a59130dd1d5ccdf391f8444efb3158c30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>adb864cd9738d6c7a2f0c59c1ffcb1a8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a378b383ca3f7a7819a628f5b210dff72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwzw</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac10dfc63e70c51e5024ed725fce58df9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xxww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af000e114b5f846fd4ab0fadc8775fbd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yxww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab6c154434e42d959d24e2047ebf56e64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zxww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ab7ab0875eb206cb4a56bdc1c3e125022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wxww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aba45bcffee9d35b9dd05a41885a861ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xyww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a176c5fe31933365e4a2fd20f321c2062</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yyww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a9621182996ef25bd145bb10b6ed32472</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zyww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a239e749f96cde38397ce0cc80fb981fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wyww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af4d224e36c08d4d239fcc5fed9430b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xzww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a131d3b6ef19cf4c33475addcf9f484ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>yzww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af653264b5674cb6d03cf31c607bc0458</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zzww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a1b49c41f14a804a87ecd9e90dd942a6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wzww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a16f3fcd3d88a075137d69420ea438c8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>xwww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>af4689e9de21fd0d6e5a700b034dcafc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>ywww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a7c07e7145756b50aaf3aefa50e0b9096</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>zwww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae3257ed5d7fe3281cf472ddc0516795d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>wwww</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ac2f56563781c0436b50cb7b94c931e54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector4 &amp;</type>
      <name>inf</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a4d525b1067cfc5f44b92cf6f7c4d9fe6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Vector4 &amp;</type>
      <name>nan</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>aaacdca0c91018ea8a4fa894210160f88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>ae97a39f35b99c3a23c00358d250e58db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a450fd850a0401ce1ac354fbed82dcbe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a56af1bf3e117dc7b40228e4b40e4dd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>a8c743e271912927a1d622c771c40fd31</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend Vector4</type>
      <name>operator*</name>
      <anchorfile>classG3D_1_1Vector4.html</anchorfile>
      <anchor>abbea42242c23d85deeb9fcdb214ab5e1</anchor>
      <arglist>(float, const Vector4 &amp;rkVector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::MeshAlg::Vertex</name>
    <filename>classG3D_1_1MeshAlg_1_1Vertex.html</filename>
    <member kind="function">
      <type></type>
      <name>Vertex</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Vertex.html</anchorfile>
      <anchor>a6b231502c916b6c5ab88db002dd5b755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inEdge</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Vertex.html</anchorfile>
      <anchor>aa7a559ead514214e1c76155145242b86</anchor>
      <arglist>(int e) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inFace</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Vertex.html</anchorfile>
      <anchor>a29aab72968be591772227b5b88025236</anchor>
      <arglist>(int f) const</arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; int &gt;</type>
      <name>edgeIndex</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Vertex.html</anchorfile>
      <anchor>a6ed7ef71716d0e2f40548cd0de154ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; int &gt;</type>
      <name>faceIndex</name>
      <anchorfile>classG3D_1_1MeshAlg_1_1Vertex.html</anchorfile>
      <anchor>a868af8e2dc445d29ab58ffcf34cd21ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::VertexAndPixelShader</name>
    <filename>classG3D_1_1VertexAndPixelShader.html</filename>
    <base>G3D::ReferenceCountedObject</base>
    <class kind="class">G3D::VertexAndPixelShader::ArgList</class>
    <class kind="class">G3D::VertexAndPixelShader::ArgumentError</class>
    <class kind="class">G3D::VertexAndPixelShader::GPUShader</class>
    <class kind="class">G3D::VertexAndPixelShader::UniformDeclaration</class>
    <member kind="function">
      <type></type>
      <name>~VertexAndPixelShader</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>aad84c38194e4ca2403f57275bffd6bff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ok</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>aa164dd404eeca084edb31fbeb64065d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>messages</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>ae4047fe8527a118053bf679a48a5a2e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>vertexErrors</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a7364c6941a4aac1de2d6a36d7814271e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>pixelErrors</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a6edf6d93b3e4dff10970055d7f3a32cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>linkErrors</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a8d3b07f54e2f3b84a58893ed05df6d28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GLhandleARB</type>
      <name>glProgramObject</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a6bfc87ecdf82517e0e2471ea4c97059d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numArgs</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a821e01ad341cb105bfac6c88771d6023</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateArgList</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a0c711589a159e22a88b50e16fce0126b</anchor>
      <arglist>(const ArgList &amp;args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindArgList</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>adf13e47320d24f8f05242cf9e842d26d</anchor>
      <arglist>(class RenderDevice *rd, const ArgList &amp;args) const</arglist>
    </member>
    <member kind="function">
      <type>const UniformDeclaration &amp;</type>
      <name>arg</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>aaff502e79958320824cef3f5de5b7c12</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VertexAndPixelShaderRef</type>
      <name>fromStrings</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>adeabe16808327016fe1941736a241ddf</anchor>
      <arglist>(const std::string &amp;vertexShader, const std::string &amp;pixelShader, UseG3DUniforms u=DO_NOT_DEFINE_G3D_UNIFORMS, bool debugErrors=DEBUG_SHADER)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VertexAndPixelShaderRef</type>
      <name>fromStrings</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>aff658da00f8eea1273c9802598e5f4e0</anchor>
      <arglist>(const std::string &amp;vertexShaderName, const std::string &amp;vertexShader, const std::string &amp;pixelShaderName, const std::string &amp;pixelShader, UseG3DUniforms u=DO_NOT_DEFINE_G3D_UNIFORMS, bool debugErrors=DEBUG_SHADER)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VertexAndPixelShaderRef</type>
      <name>fromFiles</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>ad0738a49fdc61b18939380b23f718382</anchor>
      <arglist>(const std::string &amp;vertexShader, const std::string &amp;pixelShader, UseG3DUniforms u=DO_NOT_DEFINE_G3D_UNIFORMS, bool debugErrors=DEBUG_SHADER)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>fullySupported</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a3dfbbf8a112b417a0da87df0b77e8e99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeUniformArray</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a7f10ce3b5a3e223ae5b7894a13461105</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addUniformsFromCode</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a6444f31acc94c6fd8cadbc99fefbf2dd</anchor>
      <arglist>(const std::string &amp;code)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>VertexAndPixelShader</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a4bedbf05b9c7304f3345e20b957b313c</anchor>
      <arglist>(const std::string &amp;vsCode, const std::string &amp;vsFilename, bool vsFromFile, const std::string &amp;psCode, const std::string &amp;psFilename, bool psFromFile, bool debug, UseG3DUniforms u)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static GLenum</type>
      <name>canonicalType</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a6120d1c590c1ceaddada6b591c58a000</anchor>
      <arglist>(GLenum e)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>isSamplerType</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>aa75943d786ef395c67ae4ac6fc4532d8</anchor>
      <arglist>(GLenum e)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GPUShader</type>
      <name>vertexShader</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a3bff44471535396a49231498f8b4b180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GPUShader</type>
      <name>pixelShader</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a281898232aabb1cfcb6bbafb6ca0b676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLhandleARB</type>
      <name>_glProgramObject</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>ae4d414f85bd8d520eb26bbee14504b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_ok</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a31100abc0912f1a93ba60a2945207aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_messages</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a51513dee7515e759d08c0995f9d74cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_fragCompileMessages</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a4ee9ef7dfb43c74b328beef55e4ba4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_vertCompileMessages</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>aea61e85fd53aa9e568c8bfad39c5d590</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_linkMessages</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a9530d620a23b5decc5bc984348831c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lastTextureUnit</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a2a624a792f527220d4334f450efab941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Array&lt; UniformDeclaration &gt;</type>
      <name>uniformArray</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a2dcf8ce198e8d759ca015e07d9709df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Set&lt; std::string &gt;</type>
      <name>uniformNames</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a18124f6e660a451d18613531a653b34f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::string</type>
      <name>ignore</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>aceee7390917b5f4a0e03f823436587a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Shader</name>
      <anchorfile>classG3D_1_1VertexAndPixelShader.html</anchorfile>
      <anchor>a03c2d524ace9ade9c3f55b43c99bcea1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::VertexProgram</name>
    <filename>classG3D_1_1VertexProgram.html</filename>
    <base>G3D::GPUProgram</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4X4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a54ba8540760736c58ee8c1501c456e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3X3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acafbc1b22722b0523c4c6d0e000c9678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2X2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a9f2228853635c3489f8e1e531497933f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a37cc1bc86e946fd3671eee95b9de89fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a91b194f18416bc61e9a331bd7f15d0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95ab000a51b184e8abb5223f0fe6835ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT1</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a08025e2ef39627d062e326478b5ea435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER1D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acfe89cc9a3fd1450383de77ee509b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER2D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95aeb21d2b1fc83bb94d9519a376b522ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER3D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a63414caa2aaa70eaa3e508424eb0518a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERCUBE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a01093fc8efba7adf292ded5010f0316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERRECT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95af1dc2f3ee42defa67c584811972579ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Source</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3af0e5be77f3670e5d6181c7cc5188e17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONSTANT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3a4fb7b052042eebf5dd6ae6749838bb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4X4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a54ba8540760736c58ee8c1501c456e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3X3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acafbc1b22722b0523c4c6d0e000c9678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2X2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a9f2228853635c3489f8e1e531497933f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT4</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a37cc1bc86e946fd3671eee95b9de89fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT3</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a91b194f18416bc61e9a331bd7f15d0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT2</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95ab000a51b184e8abb5223f0fe6835ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT1</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a08025e2ef39627d062e326478b5ea435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER1D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95acfe89cc9a3fd1450383de77ee509b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER2D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95aeb21d2b1fc83bb94d9519a376b522ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLER3D</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a63414caa2aaa70eaa3e508424eb0518a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERCUBE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95a01093fc8efba7adf292ded5010f0316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMPLERRECT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a34a7b6101cec4569a36f961fcf2e4f95af1dc2f3ee42defa67c584811972579ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3af0e5be77f3670e5d6181c7cc5188e17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONSTANT</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>abf530ec25117826ad3990b1b890570a3a4fb7b052042eebf5dd6ae6749838bb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reload</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a79bd71f903aa0f4f225b2df08489d644</anchor>
      <arglist>(const std::string &amp;code=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>getOpenGLID</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>ab370c18c1c459e4ca90581b46ea023f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a5a77809ff2a8a865c4d71d866b02b5eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a0f1e48dedb8aafacb2317551e3ca6fc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReferenceCountedObject_zeroWeakPointers</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>ae4738233cd8236f2cb7f97bf534922e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VertexProgramRef</type>
      <name>fromFile</name>
      <anchorfile>classG3D_1_1VertexProgram.html</anchorfile>
      <anchor>acd306dd96c6d55301973ca58062c8fc1</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VertexProgramRef</type>
      <name>fromCode</name>
      <anchorfile>classG3D_1_1VertexProgram.html</anchorfile>
      <anchor>ab0f2dcfb4bf5184ccbbd215bdf125fb1</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;code)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CgType</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a8e16a9a0d33cf7ff3b7e0774e2cbcf6a</anchor>
      <arglist>(const std::string &amp;s, Type &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>aef1736a3c25d0d52a5ca9d76d0341992</anchor>
      <arglist>(const Type &amp;t)</arglist>
    </member>
    <member kind="variable">
      <type>AtomicInt32</type>
      <name>ReferenceCountedObject_refCount</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a9e218221bf76dd7e2569afd416f02294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_WeakPtrLinkedList *</type>
      <name>ReferenceCountedObject_weakPointer</name>
      <anchorfile>classG3D_1_1ReferenceCountedObject.html</anchorfile>
      <anchor>a96c2d0c11f430ffb3fa74f3aa20d3950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>Extension</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ARB</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ab327b3bdeb9ce53dd56cf2e968de5ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVIDIA</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ac0a362616a3e5755ee1161f6e2eb07c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ARB</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ab327b3bdeb9ce53dd56cf2e968de5ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVIDIA</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a80062794e1502a627654398b177eea39ac0a362616a3e5755ee1161f6e2eb07c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>genPrograms</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a251bb51d21edbdaf5d05f3b48be91235</anchor>
      <arglist>(int num, unsigned int *id) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>bindProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a8af0876f1d6cea5db92039312609d775</anchor>
      <arglist>(int unit, unsigned int glProgram) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>ab456e6f8179e5810d3ba828a2aaf650c</anchor>
      <arglist>(const std::string &amp;code) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadConstant</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a287b6fe337e2454c39b38f8b7fa6948b</anchor>
      <arglist>(int slot, const Vector4 &amp;value) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getProgramError</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a683014afc04db90c3055192f6d278881</anchor>
      <arglist>(int &amp;pos, const unsigned char *&amp;msg) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deletePrograms</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a7c453f616eaabf60a923947bc126a97e</anchor>
      <arglist>(int num, unsigned int *id) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setArgs</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>ad1c9c6fff0952a944f30f59b5676dc14</anchor>
      <arglist>(class RenderDevice *, const ArgList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static GLenum</type>
      <name>getUnitFromCode</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a4723bfc4f2da1d71eb6f8e446b5351b9</anchor>
      <arglist>(const std::string &amp;code, Extension &amp;extension)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BindingTable</type>
      <name>bindingTable</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>af37f8c6771dc561fbc1c4ad8de42a9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLenum</type>
      <name>unit</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a1f99e52569c1e3257549c90102ffa8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>adc4e3a6f173428d2dc3eb0102bd55d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GLuint</type>
      <name>glProgram</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a28a25dfa0355c7408f5a238857ce1ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a36c0debde770bd2b47cd3acc179df313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum G3D::GPUProgram::Extension</type>
      <name>extension</name>
      <anchorfile>classG3D_1_1GPUProgram.html</anchorfile>
      <anchor>a38837303120944377d66eb4708bc8629</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::WeakReferenceCountedPointer</name>
    <filename>classG3D_1_1WeakReferenceCountedPointer.html</filename>
    <templarg>class T</templarg>
    <base>G3D::_WeakPtr</base>
    <member kind="function">
      <type>ReferenceCountedPointer&lt; T &gt;</type>
      <name>createStrongPtr</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>ae70181b7b079a6655c0c557600a8f937</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeakReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>af8a91fd4343998c7274af109cacfc9c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeakReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>aad7320d6f0995afa26dfa8f552f2016a</anchor>
      <arglist>(const WeakReferenceCountedPointer&lt; S &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeakReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>a58a6efcab45955eccbe3bde01564d428</anchor>
      <arglist>(const ReferenceCountedPointer&lt; S &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeakReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>a3dc9641dde8f3a621470acae2546708c</anchor>
      <arglist>(const WeakReferenceCountedPointer&lt; T &gt; &amp;weakPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeakReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>ad8536d305e1b238167bfa7a11cb1673f</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;strongPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WeakReferenceCountedPointer</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>af25dbbfdf8031eda4c17660b5702d0eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WeakReferenceCountedPointer&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>a8551cd2f795b4e7e7304b81df48a82f5</anchor>
      <arglist>(const WeakReferenceCountedPointer&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WeakReferenceCountedPointer&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>aef9a03ac11e5e334d59452a9bd27d085</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>a48e7c7f838ea5821644573c249a42710</anchor>
      <arglist>(const WeakReferenceCountedPointer&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>a1af52323d770a3143f9f43578726e65e</anchor>
      <arglist>(const WeakReferenceCountedPointer&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>a10a293378c95f2b17bcd8197232e0c33</anchor>
      <arglist>(const WeakReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>a59002994c77f0a5c5805725cbb069c8a</anchor>
      <arglist>(const WeakReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>acd25e1d88e27715836ea6a90db25ce95</anchor>
      <arglist>(const WeakReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>a6daafea4280e8180d00314e64ae311e0</anchor>
      <arglist>(const ReferenceCountedPointer&lt; T &gt; &amp;y) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>objectCollected</name>
      <anchorfile>classG3D_1_1WeakReferenceCountedPointer.html</anchorfile>
      <anchor>a0e14e46aa0fd7589643357e6a5021411</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextInput::WrongString</name>
    <filename>classG3D_1_1TextInput_1_1WrongString.html</filename>
    <base>G3D::TextInput::TokenException</base>
    <member kind="function">
      <type></type>
      <name>WrongString</name>
      <anchorfile>classG3D_1_1TextInput_1_1WrongString.html</anchorfile>
      <anchor>a86883bcc0602f7e288de322ebabb83f7</anchor>
      <arglist>(const std::string &amp;src, int ln, int ch, const std::string &amp;e, const std::string &amp;a)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>expected</name>
      <anchorfile>classG3D_1_1TextInput_1_1WrongString.html</anchorfile>
      <anchor>a46598c1259257b5ef965418bb2f646fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>actual</name>
      <anchorfile>classG3D_1_1TextInput_1_1WrongString.html</anchorfile>
      <anchor>ad871afb40665e1974b1157c4c29ceee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sourceFile</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>abcd39df9c67e0709fa105fbfd24c8a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>line</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>aaaf3f18635e6a9b3643f28e0cd3f0e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>character</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a5ab563ebe76fef1b28868263ced30047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a9da33e4ac4fa617ce7f19d0014d78cbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextInput::WrongSymbol</name>
    <filename>classG3D_1_1TextInput_1_1WrongSymbol.html</filename>
    <base>G3D::TextInput::TokenException</base>
    <member kind="function">
      <type></type>
      <name>WrongSymbol</name>
      <anchorfile>classG3D_1_1TextInput_1_1WrongSymbol.html</anchorfile>
      <anchor>aada4f3bbca32d12d0bedbd640b7ccbdd</anchor>
      <arglist>(const std::string &amp;src, int ln, int ch, const std::string &amp;e, const std::string &amp;a)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>expected</name>
      <anchorfile>classG3D_1_1TextInput_1_1WrongSymbol.html</anchorfile>
      <anchor>a6eea29d2dca390d11fa43e37710a3559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>actual</name>
      <anchorfile>classG3D_1_1TextInput_1_1WrongSymbol.html</anchorfile>
      <anchor>a19c6fa9e1f8e082fc0b11e90d3c1d18e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sourceFile</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>abcd39df9c67e0709fa105fbfd24c8a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>line</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>aaaf3f18635e6a9b3643f28e0cd3f0e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>character</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a5ab563ebe76fef1b28868263ced30047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a9da33e4ac4fa617ce7f19d0014d78cbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::TextInput::WrongTokenType</name>
    <filename>classG3D_1_1TextInput_1_1WrongTokenType.html</filename>
    <base>G3D::TextInput::TokenException</base>
    <member kind="function">
      <type></type>
      <name>WrongTokenType</name>
      <anchorfile>classG3D_1_1TextInput_1_1WrongTokenType.html</anchorfile>
      <anchor>a6e17540ca127df052679fce7b1e7025f</anchor>
      <arglist>(const std::string &amp;src, int ln, int ch, Token::Type e, Token::Type a)</arglist>
    </member>
    <member kind="variable">
      <type>Token::Type</type>
      <name>expected</name>
      <anchorfile>classG3D_1_1TextInput_1_1WrongTokenType.html</anchorfile>
      <anchor>af0bbc16c5da59859daa0ecacfb80a6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Token::Type</type>
      <name>actual</name>
      <anchorfile>classG3D_1_1TextInput_1_1WrongTokenType.html</anchorfile>
      <anchor>aea46e3cbc08f5bd747862c5b6942e1df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sourceFile</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>abcd39df9c67e0709fa105fbfd24c8a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>line</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>aaaf3f18635e6a9b3643f28e0cd3f0e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>character</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a5ab563ebe76fef1b28868263ced30047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classG3D_1_1TextInput_1_1TokenException.html</anchorfile>
      <anchor>a9da33e4ac4fa617ce7f19d0014d78cbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>G3D::AnyVal::WrongType</name>
    <filename>classG3D_1_1AnyVal_1_1WrongType.html</filename>
    <base>G3D::AnyVal::Exception</base>
    <member kind="function">
      <type></type>
      <name>WrongType</name>
      <anchorfile>classG3D_1_1AnyVal_1_1WrongType.html</anchorfile>
      <anchor>a55cb4b27dc9b1cb1671350b9fd42463f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WrongType</name>
      <anchorfile>classG3D_1_1AnyVal_1_1WrongType.html</anchorfile>
      <anchor>a02a6b3d2f2baf011f92834f1ee7edf31</anchor>
      <arglist>(Type e, Type a)</arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>expected</name>
      <anchorfile>classG3D_1_1AnyVal_1_1WrongType.html</anchorfile>
      <anchor>af99fc5d04ae1c3b19beddfdd3b77255a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>actual</name>
      <anchorfile>classG3D_1_1AnyVal_1_1WrongType.html</anchorfile>
      <anchor>a62813185bf5c22ec5dcdb8fcdf7ffa71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>G3D</name>
    <filename>namespaceG3D.html</filename>
    <namespace>G3D::_internal</namespace>
    <class kind="class">G3D::_WeakPtr</class>
    <class kind="class">G3D::_WeakPtrLinkedList</class>
    <class kind="class">G3D::AABox</class>
    <class kind="class">G3D::AABSPTree</class>
    <class kind="class">G3D::AnyVal</class>
    <class kind="class">G3D::Array</class>
    <class kind="class">G3D::AtomicInt32</class>
    <class kind="class">G3D::AxesShape</class>
    <class kind="class">G3D::BinaryInput</class>
    <class kind="class">G3D::BinaryOutput</class>
    <class kind="class">G3D::Box</class>
    <class kind="class">G3D::BoxShape</class>
    <class kind="class">G3D::Capsule</class>
    <class kind="class">G3D::CapsuleShape</class>
    <class kind="class">G3D::CollisionDetection</class>
    <class kind="class">G3D::Color3</class>
    <class kind="class">G3D::Color3uint8</class>
    <class kind="class">G3D::Color4</class>
    <class kind="class">G3D::Color4uint8</class>
    <class kind="class">G3D::Conduit</class>
    <class kind="class">G3D::Cone</class>
    <class kind="class">G3D::ConvexPolygon</class>
    <class kind="class">G3D::ConvexPolygon2D</class>
    <class kind="class">G3D::ConvexPolyhedron</class>
    <class kind="class">G3D::CoordinateFrame</class>
    <class kind="class">G3D::Crypto</class>
    <class kind="class">G3D::Cylinder</class>
    <class kind="class">G3D::CylinderShape</class>
    <class kind="class">G3D::DirectedEdge</class>
    <class kind="class">G3D::Discovery</class>
    <class kind="class">G3D::DiscoveryAdvertisement</class>
    <class kind="class">G3D::DiscoveryClient</class>
    <class kind="class">G3D::DiscoveryServer</class>
    <class kind="class">G3D::DiscoveryServerAddressMessage</class>
    <class kind="class">G3D::DiscoverySettings</class>
    <class kind="class">G3D::Draw</class>
    <class kind="class">G3D::DXCaps</class>
    <class kind="class">G3D::FirstPersonManipulator</class>
    <class kind="class">G3D::Framebuffer</class>
    <class kind="class">G3D::GApp</class>
    <class kind="class">G3D::GApplet</class>
    <class kind="class">G3D::GCamera</class>
    <class kind="class">G3D::GFont</class>
    <class kind="class">G3D::GImage</class>
    <class kind="class">G3D::GLCaps</class>
    <class kind="class">G3D::GLight</class>
    <class kind="class">G3D::GMaterial</class>
    <class kind="class">G3D::GModule</class>
    <class kind="class">G3D::GModuleManager</class>
    <class kind="class">G3D::GMutex</class>
    <class kind="class">G3D::GMutexLock</class>
    <class kind="class">G3D::GPUProgram</class>
    <class kind="class">G3D::GThread</class>
    <class kind="class">G3D::GWindow</class>
    <class kind="class">G3D::Hashable</class>
    <class kind="class">G3D::IFSModel</class>
    <class kind="class">G3D::IncompatibleServerDescription</class>
    <class kind="class">G3D::Lighting</class>
    <class kind="class">G3D::LightingParameters</class>
    <class kind="class">G3D::LightweightConduit</class>
    <class kind="class">G3D::Line</class>
    <class kind="class">G3D::LineSegment</class>
    <class kind="class">G3D::LineSegment2D</class>
    <class kind="class">G3D::Log</class>
    <class kind="class">G3D::Manipulator</class>
    <class kind="class">G3D::Matrix3</class>
    <class kind="class">G3D::Matrix4</class>
    <class kind="class">G3D::MD2Model</class>
    <class kind="class">G3D::MD5Hash</class>
    <class kind="class">G3D::MeshAlg</class>
    <class kind="class">G3D::MeshBuilder</class>
    <class kind="class">G3D::MeshShape</class>
    <class kind="class">G3D::Milestone</class>
    <class kind="class">G3D::NetAddress</class>
    <class kind="class">G3D::NetListener</class>
    <class kind="class">G3D::NetMessage</class>
    <class kind="class">G3D::NetworkDevice</class>
    <class kind="class">G3D::ObjectShader</class>
    <class kind="class">G3D::PhysicsFrame</class>
    <class kind="class">G3D::PixelProgram</class>
    <class kind="class">G3D::Plane</class>
    <class kind="class">G3D::PlaneShape</class>
    <class kind="class">G3D::PosedModel</class>
    <class kind="class">G3D::PosedModel2D</class>
    <class kind="class">G3D::PosedModelWrapper</class>
    <class kind="class">G3D::Quat</class>
    <class kind="class">G3D::Queue</class>
    <class kind="class">G3D::Ray</class>
    <class kind="class">G3D::RayShape</class>
    <class kind="class">G3D::Rect2D</class>
    <class kind="class">G3D::ReferenceCountedObject</class>
    <class kind="class">G3D::ReferenceCountedPointer</class>
    <class kind="class">G3D::ReliableConduit</class>
    <class kind="class">G3D::Renderbuffer</class>
    <class kind="class">G3D::RenderDevice</class>
    <class kind="class">G3D::SDLWindow</class>
    <class kind="class">G3D::Set</class>
    <class kind="class">G3D::Shader</class>
    <class kind="class">G3D::Shape</class>
    <class kind="class">G3D::Sky</class>
    <class kind="class">G3D::Sphere</class>
    <class kind="class">G3D::SphereShape</class>
    <class kind="class">G3D::Stopwatch</class>
    <class kind="class">G3D::System</class>
    <class kind="class">G3D::Table</class>
    <class kind="class">G3D::TextInput</class>
    <class kind="class">G3D::TextOutput</class>
    <class kind="class">G3D::Texture</class>
    <class kind="class">G3D::TextureFormat</class>
    <class kind="class">G3D::TextureManager</class>
    <class kind="class">G3D::ThirdPersonManipulator</class>
    <class kind="class">G3D::Token</class>
    <class kind="class">G3D::Triangle</class>
    <class kind="class">G3D::UserInput</class>
    <class kind="class">G3D::VAR</class>
    <class kind="class">G3D::VARArea</class>
    <class kind="class">G3D::Vector2</class>
    <class kind="class">G3D::Vector2int16</class>
    <class kind="class">G3D::Vector3</class>
    <class kind="class">G3D::Vector3int16</class>
    <class kind="class">G3D::Vector4</class>
    <class kind="class">G3D::VertexAndPixelShader</class>
    <class kind="class">G3D::VertexProgram</class>
    <class kind="class">G3D::WeakReferenceCountedPointer</class>
    <member kind="typedef">
      <type>bool(*</type>
      <name>AssertionHook</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac97e9172aaee640a18fa33cdde9bf5bf</anchor>
      <arglist>)(const char *_expression, const std::string &amp;message, const char *filename, int lineNumber, bool &amp;ignoreAlways, bool useGuiPrompt)</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>GameTime</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a65c3594e0b218102b589abc601e6f097</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>SimTime</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a46b383b9a11b1aac160fdfedd9919ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>RealTime</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad49e47c89967bad86fea21371fbceaa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>signed char</type>
      <name>int8</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a52f06b82ab34c3c466bf4b6179dc398f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>uint8</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a28062c3a4f8d0e8b6c26a05a0c8d5e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>int16</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7c4e39b52c958fdf58c65d5cd28df8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>uint16</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a8870e4f2c283146d5ae3f3af21d187d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>int32</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af01f1d6054f06a1083938737b4cb9f20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>uint32</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a73608b0fe77eba28a8816d969a6c54e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>int64</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7c7632a8da7a635447996a6df9f27939</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long long</type>
      <name>uint64</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7e53e590eb2666fe37d92f05ea2e9d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>uint</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac32a03cb66c81bbafbc5a51aa66e0369</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>float32</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3b69f362fda0c8d273d1891a47e47248</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>float64</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afaff5e8addb8336427c289fb19a24c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GImage</type>
      <name>CImage</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0f0d042998619e0d9f386e4d590ee047</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class ReliableConduit &gt;</type>
      <name>ReliableConduitRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a17daa734485206fcb295074f12f2b35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class LightweightConduit &gt;</type>
      <name>LightweightConduitRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a25ec85af3a5cef1d654acd553ba6c0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class NetListener &gt;</type>
      <name>NetListenerRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a4f81186c6e3879c1c46a167877704f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class Framebuffer &gt;</type>
      <name>FramebufferRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aa51c743801f1a681a5ecc57635fdd3cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GApp::Settings</type>
      <name>GAppSettings</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0c92265070df1ff2f1639fec1aceb31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class GFont &gt;</type>
      <name>GFontRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a272a14c3b24b9282061a336b3c29b3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GFont</type>
      <name>CFont</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac289f8b5da0d8bb4ccd631d1e4302179</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GFontRef</type>
      <name>CFontRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a363df0da2ef4556f9e0d42ee0a81c23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class GModule &gt;</type>
      <name>GModuleRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aa016e01397575974f3a2a65a58dd866d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class GModuleManager &gt;</type>
      <name>GModuleManagerRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab0e7a21569b918e07ca65c7a59bcf95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class GPUProgram &gt;</type>
      <name>GPUProgramRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7fd011746a18f0ddc590499dabd55a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SDL_Event</type>
      <name>GEvent</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a65525257b33fb0b6d73a43251ecfeb9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GWindow::Settings</type>
      <name>GWindowSettings</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7fe5e33ed5120f8401e0f8d42c5d8660</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GWindowSettings</type>
      <name>RenderDeviceSettings</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a610f898e2b53f8cee307ada1082c4b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class IFSModel &gt;</type>
      <name>IFSModelRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae62246a16311d817bdd021848c095170</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; Lighting &gt;</type>
      <name>LightingRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a05680d9851d4cc19b38ebf9f804664ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class FirstPersonManipulator &gt;</type>
      <name>FirstPersonManipulatorRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aac435cf750074c8072a99af53ba33542</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FirstPersonManipulator</type>
      <name>FPCameraController</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a80fab001a428679125e3634a523392fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FirstPersonManipulator</type>
      <name>ManualCameraController</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aac6f6de2c0e5629fbc875f9e5a611130</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class MD2Model &gt;</type>
      <name>MD2ModelRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aaf3b7f18d490ca947e041eaf57433225</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class Milestone &gt;</type>
      <name>MilestoneRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aa5e2b16597426165006a46e3c74dc928</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class PixelProgram &gt;</type>
      <name>PixelProgramRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac394b1d87f065eed28db4a354e24982b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class PosedModel &gt;</type>
      <name>PosedModelRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2da5703c78f5a55913c8d76971e2d40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class PosedModel2D &gt;</type>
      <name>PosedModel2DRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a314953afce7dcfbf2ea576c20f55460d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class Renderbuffer &gt;</type>
      <name>RenderbufferRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0ba62851e42e2caab686c9e1618644de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class VertexAndPixelShader &gt;</type>
      <name>VertexAndPixelShaderRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a56fb36191a3753074f0b14b12c737ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class ObjectShader &gt;</type>
      <name>ObjectShaderRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a42e32ad710e66bd242994b87ca1412e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class Shader &gt;</type>
      <name>ShaderRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac41710ea575a973afa41862e9852815f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class Shape &gt;</type>
      <name>ShapeRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af4133e8410f09397963b648b9be2b65e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class Sky &gt;</type>
      <name>SkyRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a448f150a46cfdb468ce9639a4650dc9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class Texture &gt;</type>
      <name>TextureRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7ccfed4492917150cd5367ce005a3694</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class ThirdPersonManipulator &gt;</type>
      <name>ThirdPersonManipulatorRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>acc42e7044a9a820e2b840e7117c9af93</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class VARArea &gt;</type>
      <name>VARAreaRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a48cd9bfceebb5758787c4120534ce0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCountedPointer&lt; class VertexProgram &gt;</type>
      <name>VertexProgramRef</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a222e055c5c3397ee489c93c64c8613f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BinaryFormat</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIRST_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca0792a3ce0c549a2f90d90b4d1f10539d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL8_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca39e083388d2029cad6d5c9b9776a016e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UINT8_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cac0461d381758638f6527a48dc44f3113</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT8_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701caac35395305ec503d07b00180ea4ac231</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UINT16_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cabc592cf00c20b414d2f361411856e162</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT16_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cae58bf8ca1bca5e8f78d1174b6467fc6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UINT32_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca4ac43a0b47a42e403b9998fefb141371</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT32_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701caca50b5ec235b80567e145845b2e776ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UINT64_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cad55ef81d2ee9345db3f4767b8543c745</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT64_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca4f9263298ac3c75b73cedf5ed93f1961</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UINT128_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca4afeb605c7d5a1dab31c5edd5f03dafb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT128_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cacb8f49594c207be9aa290d161a789aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT16_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cabba9f5af891469696a1ee1f1f8de646b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT32_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701caeedd38c56e011d53567360b827c3715d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT64_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca28ce93d40a21573d648f05d9ae53689e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR2_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca3d0d85e668cb70d22512ab6c60cdee64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR2INT16_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701caf4062b8a9c56ba91642a56e74bc45db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR3_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca4130ec58a8183b312bd9c6faf4d8dea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR3INT16_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca3a9e8603f18e3359d8cef51ecb63d756</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR4_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701caf1d344bbf7ff8e2b4c986bb5c93bfb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VECTOR4INT16_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca937a1eaa0f6f0227a2e6e4f204fe9063</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR3_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca80c665d39f982e89e4e56e95e03b7dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR3UINT8_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca9a02db901df8b6ff82bf1db07ac54e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR3INT16_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cac2fcca2b7f74c50b771cddbc8e349beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR4_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca2611966ecc35d8c119396e412222132f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR4UINT8_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cab940d64b949146409cbf0c2b91d37a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR4INT16_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca7254939d418e82fb32ce8e0dc18e8538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca65254877ea844a11fbc976c425343eff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRINGEVEN_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cac9e5ca45f715c81ddcd3f763b2421c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING8_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca53ae093ff38fe4e685c16e1c80b940c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING16_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca8898b3a6b0fdd2419882812ae620e550</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING32_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701ca651827d90c116c18a4645005a3185ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHUNK_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cad4f1fa6e2f4105d9b470de1286614039</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CUSTOM_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cad6e0996316b0b556952a80535e5e23db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_BINFMT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afdda53e29dd2b815f57940108bd3701cad15a5cf6a01d0dfd56f9cc3c6aae2239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>G3DEndian</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>adddfd9dd263aa8d3e2ea04a92d3aa1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>G3D_BIG_ENDIAN</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>adddfd9dd263aa8d3e2ea04a92d3aa1f9a0ec1112c92e627f4662e4bb1745ef4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>G3D_LITTLE_ENDIAN</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>adddfd9dd263aa8d3e2ea04a92d3aa1f9a99b43ff80d759e7de6565799f9cf1a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ErrorConstant</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ace9f296fd92595efa3d06e412e081c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IGNORE_ERROR</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ace9f296fd92595efa3d06e412e081c38a000852b807117b40562345b5d5ea3da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUIT_ERROR</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ace9f296fd92595efa3d06e412e081c38a2ff1dbbbc499f2fa7153e8bbfe7a94a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AMPM</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9cc8ef02496fbe521c91f49b3b0785e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AM</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9cc8ef02496fbe521c91f49b3b0785e6aace5880122b32ce97bbd77d42ccf5e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PM</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9cc8ef02496fbe521c91f49b3b0785e6ab12121e28bcf938d8012886817840f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SECOND</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2747935dd30dd7220a0ba9109e2c1610a69f9bd61f09959b18add0d1126f40594</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUTE</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2747935dd30dd7220a0ba9109e2c1610afe59d308c0223808226fadb8df1354d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HOUR</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2747935dd30dd7220a0ba9109e2c1610a2286dc991f2fbe38f45b5e38ca00a9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DAY</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2747935dd30dd7220a0ba9109e2c1610a859f88848a0a9fe7334a445167de0bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUNRISE</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2747935dd30dd7220a0ba9109e2c1610a8741043200ea27e9efe7d6c30ce88b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUNSET</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2747935dd30dd7220a0ba9109e2c1610ad72455e82ad742f29b20279b693c0a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIDNIGHT</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2747935dd30dd7220a0ba9109e2c1610a17c64c219336687c3062e909fe9ca850</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>METER</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2747935dd30dd7220a0ba9109e2c1610aeebbdd3b7816c8f98f0189103aff10ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KILOMETER</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2747935dd30dd7220a0ba9109e2c1610af3370cc9d50839e598810c81eb97e126</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UseG3DUniforms</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a31f21e95c82767ab7fa6dd95c05ce25d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFINE_G3D_UNIFORMS</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a31f21e95c82767ab7fa6dd95c05ce25da470eededf80cdc36f934d79ff59c3518</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO_NOT_DEFINE_G3D_UNIFORMS</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a31f21e95c82767ab7fa6dd95c05ce25da3aec1337aa09c101719602e6dde2ba0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CustomKeyCode</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1d7d37dc76b6aeb402636f66f1f8ccc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDL_LEFT_MOUSE_KEY</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1d7d37dc76b6aeb402636f66f1f8ccc3ab86eddb6bc4fd4edb5efd5026f2359c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDL_MIDDLE_MOUSE_KEY</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1d7d37dc76b6aeb402636f66f1f8ccc3a780f9f9a314259f9f79f0b3474870009</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDL_RIGHT_MOUSE_KEY</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1d7d37dc76b6aeb402636f66f1f8ccc3a8f4087feaac4ab1b5c7bf844c6914c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDL_MOUSE_WHEEL_UP_KEY</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1d7d37dc76b6aeb402636f66f1f8ccc3a84c097395ab8c9634b7f2a5d66351123</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDL_MOUSE_WHEEL_DOWN_KEY</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1d7d37dc76b6aeb402636f66f1f8ccc3a091361d82a94043d3a1396e4765548b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDL_CUSTOM_LAST</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1d7d37dc76b6aeb402636f66f1f8ccc3a10b5f7f11cc9aa9137abd8ea12f7d0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab8bbb1c155944c3222a4863d273442c8</anchor>
      <arglist>(const T *array, int len, const T &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>G3D::Color3</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a8ec522be1601d7e71895599e99443e9f</anchor>
      <arglist>(float s, const G3D::Color3 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a818f42ec520b35f1e18b12eb9e75db79</anchor>
      <arglist>(const Color3 &amp;c3, const Color4 &amp;c4)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidHeapPointer</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0790a0dbb21d74ea7d12909c48e2d79d</anchor>
      <arglist>(const void *x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidPointer</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9c969a87247b46c2fb87960306015e66</anchor>
      <arglist>(const void *x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAssertionHook</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae2ae04f1c57b87509b0be039c5f8fb9a</anchor>
      <arglist>(AssertionHook hook)</arglist>
    </member>
    <member kind="function">
      <type>AssertionHook</type>
      <name>assertionHook</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a20660c1b7d31527327935e966d7e2b2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFailureHook</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a092b7a86c8d438102b2dd2da23ec40ff</anchor>
      <arglist>(AssertionHook hook)</arglist>
    </member>
    <member kind="function">
      <type>AssertionHook</type>
      <name>failureHook</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3dffa10a2164a244ff7a13c3a7c38cdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void __cdecl</type>
      <name>debugPrintf</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aadafd7456f133e40d46156228fd3dfc1</anchor>
      <arglist>(const char *fmt ...)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; std::string &gt;</type>
      <name>filesUsed</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab79bd8afe1f33008897e7917f029e60e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readFileAsString</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a8c9c212ff56b34a5854baf434f74a10f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeStringToFile</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a460a6f418347c91aa13fc0d4b78bd06e</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;filename, bool flush=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createDirectory</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aaabdce3ea24df000941132b6102f7817</anchor>
      <arglist>(const std::string &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>resolveFilename</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2fe4b7cfbc35f5deff5dac1848bce607</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFiles</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a478aa0b579fba34a4ae2c246efb9b91d</anchor>
      <arglist>(const std::string &amp;filespec, Array&lt; std::string &gt; &amp;files, bool includePath=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDirs</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0d01cc7ca07d1e271f8082f4f9f68ec0</anchor>
      <arglist>(const std::string &amp;filespec, Array&lt; std::string &gt; &amp;files, bool includePath=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirectory</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>adc2c2537aebba5ba91a7950bf8b902c1</anchor>
      <arglist>(const std::string &amp;filespec)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>fileLength</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1ed73260920746afae1b29db0f974fb7</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFile</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1f754ede1b9627a50fd93ebe36016fc0</anchor>
      <arglist>(const std::string &amp;source, const std::string &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>createTempFile</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a59b538adb888ca6f1992b79215813d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fileExists</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2188dc11b38abda2c783dda264e0cb09</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parseFilename</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0417ac14820128a4d9d4ba03ece8feef</anchor>
      <arglist>(const std::string &amp;filename, std::string &amp;drive, Array&lt; std::string &gt; &amp;path, std::string &amp;base, std::string &amp;ext)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filenameBaseExt</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a969c4d9ae39e37acd592b05e4bde71ab</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filenameExt</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a8507a5482949fee377159ba676bf0cd9</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filenamePath</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a35f7521247c0b90fee9548a9727d74ed</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filenameContainsWildcards</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a05a5d1cb15f1ed71b7474bc6d0fe9c16</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fileIsNewer</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0c751c2f5a302c7560c677ffc13dd3a9</anchor>
      <arglist>(const std::string &amp;src, const std::string &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>std::string __cdecl</type>
      <name>format</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9fe98902afdd037b4215686e8a4051f8</anchor>
      <arglist>(const char *fmt ...) G3D_CHECK_PRINTF_ARGS</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>vformat</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7eac5738fe421ba870dca60ec5a2192d</anchor>
      <arglist>(const char *fmt, va_list argPtr) G3D_CHECK_VPRINTF_ARGS</arglist>
    </member>
    <member kind="function">
      <type>SimTime</type>
      <name>toSeconds</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3395888343dac5b4b2844a986b9cfff6</anchor>
      <arglist>(int hour, int minute, double seconds, AMPM ap)</arglist>
    </member>
    <member kind="function">
      <type>SimTime</type>
      <name>toSeconds</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afa2d16ab67c323fdfbec13092cce61a5</anchor>
      <arglist>(int hour, int minute, AMPM ap)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>inf</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0549182f635f79bfaae047c97b7a120d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>nan</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>add688b715330ec08f4acc0fe148aa2fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>pi</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad2389e324c7fc9435e224390086a4b00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>halfPi</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a157a68a00c7b522d31724dfe52da6217</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>twoPi</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a859f8a0d64cd5ab190a0ffe781e30ecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iAbs</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>adc2db9c657bc74605e2ad2fd8d886ded</anchor>
      <arglist>(int iValue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iCeil</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae6848fac0ed7225d93d01bd81d193269</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iClamp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9b59903cd7fb8a426763830c7684e35f</anchor>
      <arglist>(int val, int low, int hi)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>clamp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a190f1d60ffcfb2fdea117c59bb68515d</anchor>
      <arglist>(double val, double low, double hi)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>clamp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afb2825057d04be15b22fbc6a205f6d99</anchor>
      <arglist>(float val, float low, float hi)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lerp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae423d5a17c037fa123070ef74281d001</anchor>
      <arglist>(double a, double b, double f)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>lerp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a359807bf70625fceee617f000c9ddcd5</anchor>
      <arglist>(float a, float b, float f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iWrap</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab49eed205877897235945f7b028fee37</anchor>
      <arglist>(int val, int hi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iFloor</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a089858f78e3de462ca594a17c07efbd5</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iSign</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a61109d6a97d2ae31aaa0cfdafa7d1821</anchor>
      <arglist>(int iValue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iSign</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a94e295e88756a025e2e9c968b999664b</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iSign</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad7cdd784a4856053ec2db2799f04a8a1</anchor>
      <arglist>(float f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iRound</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a8c0bdbdedb08f02f063437e31d171075</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iRound</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3705dbb6b1a95f0777a178cb85b336b9</anchor>
      <arglist>(float f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iRandom</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af098ff4c523bcffb25fd8ee95a3694c2</anchor>
      <arglist>(int low, int hi)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>abs</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aca937b9666bc57d5f6319bcbd847fd4c</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>aCos</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abbcbb2b5a79f413522f707e2f59f6424</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>aSin</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a25d32bdaa3d26cfdad7c6f4faf7d6853</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>aTan</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab15f10d93984f182e5ee4e9b6c3bad79</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>aTan2</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aa8ddc582695e72301bc3acee0839228d</anchor>
      <arglist>(double fY, double fX)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sign</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aea285fce2b3a1379d5c1bab02c183156</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>square</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9ed85275ce24e11643ffca6cf6b26f26</anchor>
      <arglist>(double fValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFinite</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abc9e90a9bc8513570a75e74904222927</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aeec080ab3f08bc0674465c6009afeb29</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iMod3</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad195ffe2ece812f62be9addd09b3c8c8</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>unitRandom</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a70eb739e4962d55be4929ec98bff22bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1b5df7fcd29f7e9acee4a58efa032528</anchor>
      <arglist>(double low, double hi)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>symmetricRandom</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a43c8689b7e329ee9b508b7aff64f5c32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>uniformRandom</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2fa5a1328d952b9c825c4c9d49d41e19</anchor>
      <arglist>(float low=0.0f, float hi=1.0f)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gaussRandom</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3d4c0d155ee7b92b78b756e040cb93dc</anchor>
      <arglist>(float mean=0.0f, float stdev=1.0f)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac963e578ad7f1b9c9ad9fbc82b0f034c</anchor>
      <arglist>(const T &amp;x, const T &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a08c0c3adc7299e964bea91de6cf24b8e</anchor>
      <arglist>(const T &amp;x, const T &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iMin</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac2f67d78322a6125115ba9be6dd2b094</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iMax</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a25674ff9ce0edf425d1672b5bbb8df1c</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumSquares</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aaa6fde0a7fe506e7b504ffa5c273481b</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumSquares</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a04db1dc86344abc3796bc63db88ef165</anchor>
      <arglist>(double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae446db55e6d09c13766b1f634a5a01a4</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a712935c09a304baec3d6873ef88baf4f</anchor>
      <arglist>(double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>highestBit</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae0b3516ec87de8762d9213bbfbb12e35</anchor>
      <arglist>(uint32 x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyEq</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a777646c1deb0c353be54782691193ac4</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyNe</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a340ff43f419487ceaefa72d9fd0bc830</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyGt</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0fa5530f314f7ce9c2c7e15307ec0249</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyGe</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aee693066a0570279756234fcd558f9ae</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyLt</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac43a6b427f1bf375f1bffef4c3ea08f3</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fuzzyLe</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a6a004907d22b076a5ceb2785cbab98e6</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>rsq</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abf8c1be1461551acf2fcb82eae61aa57</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>SSErsq</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9712e82db72fd8d7877ed5f14c3f4b6f</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ceilPow2</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1659da93db05db5c0d24d5def02fddb4</anchor>
      <arglist>(unsigned int in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPow2</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abe6966b0b01b78dfde5c6c247b708441</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOdd</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a42be92ee280eeb7fc915da697762f593</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEven</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af60de00ce4b12e428f9cac11d419dd5e</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toRadians</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae4a7221971c6927a7e8e5f4f39e5fe93</anchor>
      <arglist>(double deg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toDegrees</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac1c89920fcfb53ce04dc72d0fe8eba7d</anchor>
      <arglist>(double rad)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>any</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aa35c8e4edb80fd1e98044a26cb556b9d</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>all</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aefc9cf5566d4389e2f9c8762fe92fd95</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>normalize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1fa53333af2cacda5b7aebc1b9645343</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a5450781dfebf6bfcd42487a6c62042a1</anchor>
      <arglist>(float a, float b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>mul</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae29ca88451208bb859b8722636277e51</anchor>
      <arglist>(float a, float b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>exp2</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aaa91457914b8d5d76972534742f1f2f4</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rsqrt</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a67559058ff31278cd557d8321f8a36cf</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sinc</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a20ab2c081867c20e0dbf7bcad422f3b6</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wrap</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac8213cc995ce7d111f6378b94ef6f1db</anchor>
      <arglist>(double t, double lo, double hi)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>wrap</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aa989c7edc5ac3e7f06ae7545dfa99a18</anchor>
      <arglist>(double t, double hi)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>RGBtoRGBA</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aaa9f9658c2a72d3f0188f9e489a6e6d9</anchor>
      <arglist>(const uint8 *in, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>RGBtoBGR</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aff6b26f8f9f79723f5942984a6343659</anchor>
      <arglist>(const uint8 *in, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>RGBtoBGRA</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac8310bd0a8181496fa088112197a7779</anchor>
      <arglist>(const uint8 *in, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>RGBtoARGB</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a77bd0d1937b6efb704ab6d11c60771b4</anchor>
      <arglist>(const uint8 *in, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>RGBxRGBtoRGBA</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7fe5eb055c367b368c131c806d437660</anchor>
      <arglist>(const uint8 *colorRGB, const uint8 *alphaRGB, uint8 *out, int numPixels)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>flipRGBVertical</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0c4d2a46a7003b739409d1f77bab827d</anchor>
      <arglist>(const uint8 *in, uint8 *out, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>flipRGBAVertical</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a088c82bca97f8f16a4d1b0f0d075c020</anchor>
      <arglist>(const uint8 *in, uint8 *out, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>computeNormalMap</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af076731027c4109e267acd5ce316cb2f</anchor>
      <arglist>(const class GImage &amp;bump, class GImage &amp;normal, bool lowPassBump=false, bool scaleHeightByNz=false)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>BAYER_G8B8_R8G8_to_R8G8B8_MHC</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a06e9ec6c7d56fa894b7e665cfb5fdfd8</anchor>
      <arglist>(int w, int h, const uint8 *in, uint8 *_out)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>BAYER_G8B8_R8G8_to_Quarter_R8G8B8</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a71da0f40c5471794351a25bb76411e85</anchor>
      <arglist>(int inWidth, int inHeight, const uint8 *in, uint8 *out)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>Quarter_R8G8B8_to_BAYER_G8B8_R8G8</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab296af591c0043eee7645e3e324b5287</anchor>
      <arglist>(int inWidth, int inHeight, const uint8 *in, uint8 *out)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a45c641ac4c15772975e81b8aa2dfabcf</anchor>
      <arglist>(const Vector3 &amp;rkPoint, const Matrix3 &amp;rkMatrix)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9dab12505e4f5b730c2a35de2e2b296a</anchor>
      <arglist>(std::ostream &amp;os, const NetAddress &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a26e837f6fcaa72db6651e817c0ab4f24</anchor>
      <arglist>(const NetAddress &amp;a, const NetAddress &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae526bf6f1dd0fcfcdd8f26feaf1b31a9</anchor>
      <arglist>(const NetAddress &amp;a, const NetAddress &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>int G3D_DEPRECATED</type>
      <name>prompt</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a35af82f9dafa7e3651ec33b14152f32b</anchor>
      <arglist>(const char *windowTitle, const char *promptx, const char **choice, int numChoices, bool useGui)</arglist>
    </member>
    <member kind="function">
      <type>int G3D_DEPRECATED</type>
      <name>prompt</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0e52f05fcffc4ab438d66f3546d8724e</anchor>
      <arglist>(const char *windowTitle, const char *promptx, const char **choice, int numChoices)</arglist>
    </member>
    <member kind="function">
      <type>void G3D_DEPRECATED</type>
      <name>msgBox</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab28a086047e9c0aab87d783a70a54d0f</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;title=&quot;Message&quot;)</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>exp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7529ff626e08c7c393329927606813b0</anchor>
      <arglist>(const Quat &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>Quat</type>
      <name>log</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad7c62d85bad4ae40f783aeddb642f874</anchor>
      <arglist>(const Quat &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>G3D::Quat</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aba7e0b55a72796d1cd4a4e0f26d04ecb</anchor>
      <arglist>(double s, const G3D::Quat &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>G3D::Quat</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a29431bd84bf0db15e236fb526170add0</anchor>
      <arglist>(float s, const G3D::Quat &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>YType</type>
      <name>linearSpline</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3c2216a3196cfcc41d424798756141ea</anchor>
      <arglist>(double x, const XType *controlX, const YType *controlY, int numControl)</arglist>
    </member>
    <member kind="function">
      <type>YType</type>
      <name>cyclicCatmullRomSpline</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a63cbaff71ec1201b72e3c385cc02aeb9</anchor>
      <arglist>(double t, const YType *controlY, int numPoints)</arglist>
    </member>
    <member kind="function">
      <type>YType</type>
      <name>cyclicCatmullRomSpline</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab539c0b1e1e4957e994fd84e84e9feec</anchor>
      <arglist>(double t, const Array&lt; YType &gt; &amp;controlY)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginsWith</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a4f9cce2b618dc4aa9da295eb3a0f9abf</anchor>
      <arglist>(const std::string &amp;test, const std::string &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endsWith</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a099ad667c3d882502da845397741fafc</anchor>
      <arglist>(const std::string &amp;test, const std::string &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>wordWrap</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a45dc0f8dd2fad63fee9acd4a25b4a42c</anchor>
      <arglist>(const std::string &amp;input, int numCols)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stringCompare</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afd20c28e6100e6a28411a5a2e8819bc4</anchor>
      <arglist>(const std::string &amp;s1, const std::string &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>stringPtrCompare</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad8b84a537bae3678f830fed0ba041d9d</anchor>
      <arglist>(const std::string *s1, const std::string *s2)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toUpper</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac10acb2787daeb05f31b54a2cd7fa3d7</anchor>
      <arglist>(const std::string &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toLower</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aa3b94c92cc334739473c9b295923ffce</anchor>
      <arglist>(const std::string &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>G3D::Array&lt; std::string &gt;</type>
      <name>stringSplit</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a97ac5504eb057c96f62ea9fe220f9a33</anchor>
      <arglist>(const std::string &amp;x, char splitChar)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stringJoin</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9e455f7debbcecf332533cd2261633cf</anchor>
      <arglist>(const G3D::Array&lt; std::string &gt; &amp;a, char joinChar)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stringJoin</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab9097e8f865b8b19db4b7293ef87a761</anchor>
      <arglist>(const G3D::Array&lt; std::string &gt; &amp;a, const std::string &amp;joinStr)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trimWhitespace</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ade0386b7cbf0c4d67a8fa024edd09e2d</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWhiteSpace</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a79ae7bff6bfc648c7463b39200f98fea</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNewline</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a31e6398d5bea58d853bcc9415a940090</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDigit</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae76986682a6795060c6886cc542df47a</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLetter</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a5fd757fa2ccd8ecdabbcc3115aeb49f5</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSlash</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a44ba53bfa74006a1b28d42784d5b773a</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isQuote</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aebe9cc02cdae7fde03bb86d07f44de41</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>demoFindData</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1ce825c442d9b9f81500b976699adb5e</anchor>
      <arglist>(bool errorIfNotFound=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>license</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2d6bccd0c2fa5b44882b7d0c732e2712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32 G3D_DEPRECATED</type>
      <name>crc32</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af159a400468565cd3ff8ddbcd73928d2</anchor>
      <arglist>(const void *bytes, size_t numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9d025f4537b75cc60e63d29beee0dc88</anchor>
      <arglist>(bool &amp;b, TextInput &amp;ti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac11912aefc20b0bbf57df398ebfe116e</anchor>
      <arglist>(int &amp;b, TextInput &amp;ti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af7825a9d0cceed6263747a822ef0c320</anchor>
      <arglist>(uint8 &amp;b, TextInput &amp;ti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aed69c326bbf740f6a70a39201930f756</anchor>
      <arglist>(double &amp;b, TextInput &amp;ti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac3ef0be913c826bdc4fbb19615677a39</anchor>
      <arglist>(float &amp;b, TextInput &amp;ti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a18b5491efa535c6bf026a15e4797976d</anchor>
      <arglist>(std::string &amp;b, TextInput &amp;ti)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afbff09c901a7cfc958bfe6b7c42a0ee2</anchor>
      <arglist>(const bool &amp;b, TextOutput &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afa46b5bedd380379f551d5a0042778eb</anchor>
      <arglist>(const int &amp;b, TextOutput &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>adc900bf90917faf27f4f74ff45b189bd</anchor>
      <arglist>(const uint8 &amp;b, TextOutput &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a14545b28ff13ab23f973345270324252</anchor>
      <arglist>(const double &amp;b, TextOutput &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a93442d3cd63164906489bdf703d85a01</anchor>
      <arglist>(const float &amp;b, TextOutput &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7cf978ac1311f7e4627f1e3988c80945</anchor>
      <arglist>(const std::string &amp;b, TextOutput &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3347529c644430399906e1ce4f83febf</anchor>
      <arglist>(const char *b, TextOutput &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a8140765026aea6c2e5a291fc3162a5a7</anchor>
      <arglist>(double s, const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aac4a083d6aaf74248fea48da280d133d</anchor>
      <arglist>(float s, const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ace6eea13748166c7c1bea77662d489a4</anchor>
      <arglist>(int s, const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>hashCode</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abbe00f1367de30a2f9f1824b860080eb</anchor>
      <arglist>(const G3D::Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>G3D::Vector3</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abb515b197a194dc5f1ab2fd514396728</anchor>
      <arglist>(float s, const G3D::Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>G3D::Vector3</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a5da9eaea32c02d69401439fbc32a6f59</anchor>
      <arglist>(double s, const G3D::Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>G3D::Vector3</type>
      <name>operator*</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3dd5f95aa7cb95d9ef55f1aa420fbfc0</anchor>
      <arglist>(int s, const G3D::Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad5258d209f202a6453586942d6e23a4d</anchor>
      <arglist>(std::ostream &amp;os, const Vector3 &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a686f930e2f431cf4e3a6c95ec74682f3</anchor>
      <arglist>(const Vector3::Axis &amp;a, class BinaryOutput &amp;bo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad08200f1ee2b2a1b9191498c08111534</anchor>
      <arglist>(Vector3::Axis &amp;a, class BinaryInput &amp;bo)</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>mul</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0b1be29751b9aa669b1d0cb68b5a9ded</anchor>
      <arglist>(const Matrix4 &amp;a, const Matrix4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>mul</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af0160ee5b2ed9e41b64d48f86e20f98a</anchor>
      <arglist>(const Matrix4 &amp;m, const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>mul</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a21a19077a160d8ee96ad25bc1a318444</anchor>
      <arglist>(const Matrix3 &amp;m, const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>mul</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1c74a5ab7cee8cac19f8f7d234096d0b</anchor>
      <arglist>(const Matrix3 &amp;a, const Matrix3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae38185e9a906ede73c60143b9f236f12</anchor>
      <arglist>(const Vector2 &amp;a, const Vector2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad9c704638ea092b429160633efdecee2</anchor>
      <arglist>(const Vector3 &amp;a, const Vector3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>acdf12deb6e0dc2954efbfa4f2b1e8611</anchor>
      <arglist>(const Vector4 &amp;a, const Vector4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>normalize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a63fc594dd2957b58bee17b1b4643cc39</anchor>
      <arglist>(const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>normalize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a72fa7874336e3326a73a74c45823939b</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>normalize</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad4033563a0a1b99fec20a78d89e6998d</anchor>
      <arglist>(const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>abs</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a17cfaf892d5a7c2593d3535fbbfa202a</anchor>
      <arglist>(const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>abs</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2542751d54896139f86358b63a8dd167</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>abs</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aaa5bc3b8adea3294fbc0c40d3cfee3ea</anchor>
      <arglist>(const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>all</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a57f01d97edcd2556bcb2d2c5ad055f52</anchor>
      <arglist>(const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>all</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a990a7820442b1887ea5354788ba493e1</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>all</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a599311008dd2b4efede25ed59bd80ed4</anchor>
      <arglist>(const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>any</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab417fcc1de926ea5ef615e90e433c414</anchor>
      <arglist>(const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>any</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a00a79574e5ad538f8d92edca432e5604</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>any</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae148be892a35119888101c23a03f28a6</anchor>
      <arglist>(const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>clamp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a65f2ab9b9af08806430fadc51ca596cf</anchor>
      <arglist>(const Vector2 &amp;v, const Vector2 &amp;a, const Vector2 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>clamp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9b21bcc4283f8b395e06efd5f8f4b241</anchor>
      <arglist>(const Vector3 &amp;v, const Vector3 &amp;a, const Vector3 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>clamp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a15563c25c54e2c692960914ec8210def</anchor>
      <arglist>(const Vector4 &amp;v, const Vector4 &amp;a, const Vector4 &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>lerp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a6b629f45510f3988ae78187fb0ffc5d0</anchor>
      <arglist>(const Vector2 &amp;v1, const Vector2 &amp;v2, float f)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>lerp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad1d6a47cbd701951ae7b48dcf6f850d7</anchor>
      <arglist>(const Vector3 &amp;v1, const Vector3 &amp;v2, float f)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>lerp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9b36735203baa4cc93ba735f60dca269</anchor>
      <arglist>(const Vector4 &amp;v1, const Vector4 &amp;v2, float f)</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>lerp</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac0bc0994a1a2a7fdbc84cd6fb13331a3</anchor>
      <arglist>(const Color3 &amp;v1, const Color3 &amp;v2, float f)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>cross</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a81dbffac4ab63d0bd07aaf4cbdc5dd35</anchor>
      <arglist>(const Vector3 &amp;v1, const Vector3 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>determinant</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a35a9b290252b91a95dd77c0a53682641</anchor>
      <arglist>(const Matrix3 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>determinant</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae2082a6f841d29f05b75856420de5629</anchor>
      <arglist>(const Matrix4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>min</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae7e753cfe3c31d8aa02702e0039c421b</anchor>
      <arglist>(const Vector2 &amp;v1, const Vector2 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>min</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a5e6e532864f6255ba0285e92a3881141</anchor>
      <arglist>(const Vector3 &amp;v1, const Vector3 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>min</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af648c2dedf11e564cf503cbbfaf8edd9</anchor>
      <arglist>(const Vector4 &amp;v1, const Vector4 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>min</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2551559f2656300d7bef1a6b38f6e20b</anchor>
      <arglist>(const Color3 &amp;v1, const Color3 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>min</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abff682c5fe0fff21c7cb28640900192b</anchor>
      <arglist>(const Color4 &amp;v1, const Color4 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>max</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a98e57baccdcce5b3775e5dfd3c459ece</anchor>
      <arglist>(const Vector2 &amp;v1, const Vector2 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>max</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1074731ed37b3a598494e3ee5e866a08</anchor>
      <arglist>(const Vector3 &amp;v1, const Vector3 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>max</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a7c3370ddbad6b1492bf6513acec02ae4</anchor>
      <arglist>(const Vector4 &amp;v1, const Vector4 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>max</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a73a656d607c2f49520d84899e3e84362</anchor>
      <arglist>(const Color3 &amp;v1, const Color3 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Color4</type>
      <name>max</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae7739ec183a39496bf8e865c720850b5</anchor>
      <arglist>(const Color4 &amp;v1, const Color4 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>sign</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>acce80793e3fa7d7e4bc507e9fa558237</anchor>
      <arglist>(const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>sign</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afd1e13d7e0f62ecf049af5e43903ba1c</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>sign</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aafdbd89b1d54f059718c309768f9939d</anchor>
      <arglist>(const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>length</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a69a355f92fa3aab4f301667be00cd3eb</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>length</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3ba10d32453a43b207c4b1744436cafe</anchor>
      <arglist>(const Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>length</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad1d7429943f3ec2e2a9c25ddf1f4fdd1</anchor>
      <arglist>(const Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>length</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a10632f01e789393a8a183549592745dc</anchor>
      <arglist>(const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Color3</type>
      <name>log</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ad6fb1400031f34a3c56d8c76a02614d7</anchor>
      <arglist>(const Color3 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawFeatureEdges</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a769d6a93599cdf005defa718dfb15f2e</anchor>
      <arglist>(class RenderDevice *renderDevice, const PosedModelRef &amp;model, float creaseAngle=toRadians(40))</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getOpenGLState</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a6e5149c6b3500a4f47c03d236b8a4fae</anchor>
      <arglist>(bool showDisabled=true)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sizeOfGLFormat</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a8db3a9fe319b872894d5a0cf72fc2763</anchor>
      <arglist>(GLenum format)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GLenumToString</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a90f9a292d8d411bf8a04752b9ad5d073</anchor>
      <arglist>(GLenum i)</arglist>
    </member>
    <member kind="function">
      <type>GLint</type>
      <name>glGetInteger</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac229d0a10a47fdffe28d9df7d52c5134</anchor>
      <arglist>(GLenum which)</arglist>
    </member>
    <member kind="function">
      <type>GLfloat</type>
      <name>glGetFloat</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2909f64d25b39731b0b693e1f2c8c0e4</anchor>
      <arglist>(GLenum which)</arglist>
    </member>
    <member kind="function">
      <type>GLboolean</type>
      <name>glGetBoolean</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aec8766d2304792f531f30e3aa1d6793a</anchor>
      <arglist>(GLenum which)</arglist>
    </member>
    <member kind="function">
      <type>GLdouble</type>
      <name>glGetDouble</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a48b1e92ee58d4762e96ed45111682c9e</anchor>
      <arglist>(GLenum which)</arglist>
    </member>
    <member kind="function">
      <type>Vector2</type>
      <name>glGetVector2</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>afe3db2966dda8744ce9c9483340e65d7</anchor>
      <arglist>(GLenum which)</arglist>
    </member>
    <member kind="function">
      <type>Vector3</type>
      <name>glGetVector3</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a454c5e0e722b89a282507a1d00cc8c9e</anchor>
      <arglist>(GLenum which)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>glGetVector4</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2306dccf6dd22cd13a19a49a18cbaf4a</anchor>
      <arglist>(GLenum which)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glMultiTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a6c0b124b50432a0f574940e92695ff37</anchor>
      <arglist>(GLint unit, float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glMultiTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a886f6eef720b07736047a4d512a7e77c</anchor>
      <arglist>(GLint unit, const G3D::Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glMultiTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3fe2609e9d85808cc7a5d373075522af</anchor>
      <arglist>(GLint unit, const G3D::Vector2int16 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glMultiTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a941bae5f1b13c3fe25c8e64def4c5116</anchor>
      <arglist>(GLint unit, const G3D::Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glMultiTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3b24ef21c5db3ecc2a36f886eeabcf68</anchor>
      <arglist>(GLint unit, const G3D::Vector3int16 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glMultiTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0e21d2fb4ccb65639bd6f45ab6c8bb3b</anchor>
      <arglist>(GLint unit, const G3D::Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glVertex</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a482fdcef2817d7adcc78aaf2b69843aa</anchor>
      <arglist>(const G3D::Vector2 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glVertex</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a93a688f2efeb4b87306926f931f5d64b</anchor>
      <arglist>(const G3D::Vector2int16 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glVertex</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a344b16be65653c06a698391d54eaa7d9</anchor>
      <arglist>(const G3D::Vector3 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glVertex</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a8946dbdd178d06554ffeedcae46d3e6f</anchor>
      <arglist>(const G3D::Vector3int16 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glVertex</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a5f5a0eac66f676eace89ee14fd6f07d6</anchor>
      <arglist>(const G3D::Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glColor</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a79b84c8283ad31604c48418234fe34ae</anchor>
      <arglist>(const G3D::Color3 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glColor</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a1033d857a906538df40da26fb3b676b8</anchor>
      <arglist>(const G3D::Color4 &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glColor</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abd984a9feb484f7b5748a9c5c5165cac</anchor>
      <arglist>(float r, float g, float b, float a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glColor</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>adb3514497c64eb9e01f1478a49f3723d</anchor>
      <arglist>(float r, float g, float b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glNormal</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a80c8708307fc6b0c477523d97b2860bd</anchor>
      <arglist>(const G3D::Vector3 &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae5bdd3793968215555b300b876cd66a6</anchor>
      <arglist>(const G3D::Vector4 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>aefdc6ff9234ea21fef65cf403eb062b0</anchor>
      <arglist>(const G3D::Vector3 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a0823938081ae94a595b8782644c4fba0</anchor>
      <arglist>(const G3D::Vector2 &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glTexCoord</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a102a33ca24e8eaed4f50d3bbf5e851a1</anchor>
      <arglist>(const float t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glLoadMatrix</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af6a27bf011c7a7cbf2fb61975e9eefbb</anchor>
      <arglist>(const CoordinateFrame &amp;cf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glLoadMatrix</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab1855b5e6a639cc6ae0310164cdb0690</anchor>
      <arglist>(const Matrix4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glGetMatrix</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a95e782ff16dfe2a812448bff95a2d9be</anchor>
      <arglist>(GLenum name, Matrix4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>Matrix4</type>
      <name>glGetMatrix</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ade542cc7ee32215074f015bfd1e9545b</anchor>
      <arglist>(GLenum name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glLoadInvMatrix</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abd9979d1e80746e9c7605dec3a60a3da</anchor>
      <arglist>(const CoordinateFrame &amp;cf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glMultInvMatrix</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ab92005fd19955108e11566f217803235</anchor>
      <arglist>(const CoordinateFrame &amp;cf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glMultMatrix</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ae6da13c8e46a35d3e8b1e3528cce2baf</anchor>
      <arglist>(const CoordinateFrame &amp;cf)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>glGetProcAddress</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a5350cc1f0e44174bbc56b980ba27c41c</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>Vector4</type>
      <name>glToScreen</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac1b1a257f9c6c7ccdf6a08371ad55313</anchor>
      <arglist>(const Vector4 &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>glDisableAllTextures</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a9e0e3012058313899c135f2ed34eb7fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describeSystem</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>af51623852ebce429e3f1a34d10e64095</anchor>
      <arglist>(class RenderDevice *rd, class NetworkDevice *nd, class TextOutput &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describeSystem</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a5059d172aed03515f0f872dbfeca61ea</anchor>
      <arglist>(class RenderDevice *rd, class NetworkDevice *nd, std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginMarkShadows</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>ac7b67cf9a840ac04199b8e670c82f5df</anchor>
      <arglist>(RenderDevice *renderDevice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endMarkShadows</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a87434618a9424d4856daca167816ce37</anchor>
      <arglist>(RenderDevice *renderDevice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markShadows</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a2d03014b6ce33db0376e66b1f198bcd1</anchor>
      <arglist>(RenderDevice *renderDevice, const PosedModelRef &amp;model, const Vector4 &amp;light)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>adb5eaa5b9d60ab55fb02cfba2af74ee2</anchor>
      <arglist>(const SkyRef &amp;a, const void *b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a59e4355353ac389045e39b6bba89349c</anchor>
      <arglist>(const void *a, const SkyRef &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a90ab52002f4d8146ef85668549f78277</anchor>
      <arglist>(const SkyRef &amp;a, const void *b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a34d99ef2d0ce61859c5a276bad8e3bc3</anchor>
      <arglist>(const void *b, const SkyRef &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tesselateComplexPolygon</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a934f1491ba2eb1496fc92e017f9f83a3</anchor>
      <arglist>(Array&lt; Vector3 &gt; &amp;input, Array&lt; Triangle &gt; &amp;output)</arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>DONT_SHRINK_UNDERLYING_ARRAY</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>acc755cdcaf4dcc80c25fe84b44924022</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SORT_INCREASING</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a57e4fccfbfb90c1cdeac65e55ff8c41f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>SORT_DECREASING</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3117447f2fb4d4ba9f9e22911a13a6b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>fuzzyEpsilon</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>a3566cf25f57e858f1d0465533dbba011</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>NEWLINE</name>
      <anchorfile>namespaceG3D.html</anchorfile>
      <anchor>abf16b50584ca0eb39a816d4e0c305489</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>G3D::_internal</name>
    <filename>namespaceG3D_1_1__internal.html</filename>
    <class kind="class">G3D::_internal::_BinaryFormat</class>
    <class kind="class">G3D::_internal::_GLFormat</class>
    <class kind="class">G3D::_internal::PolyLineGeneric</class>
    <class kind="class">G3D::_internal::UIGeom</class>
    <member kind="typedef">
      <type>PolyLineGeneric&lt; LineSegment, Vector3 &gt;</type>
      <name>PolyLine</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>a499b54e125a0d96cb9510a1ad146c1c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PolyLineGeneric&lt; LineSegment2D, Vector2 &gt;</type>
      <name>PolyLine2D</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>a41d2db939f117e172fbddb0da24e572a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_handleDebugAssert_</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>a790770180fa5315a426efdc5708a69ff</anchor>
      <arglist>(const char *expression, const std::string &amp;message, const char *filename, int lineNumber, bool &amp;ignoreAlways, bool useGuiPrompt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_handleErrorCheck_</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>af572817d961d6cbd102e481869a99d21</anchor>
      <arglist>(const char *expression, const std::string &amp;message, const char *filename, int lineNumber, bool &amp;ignoreAlways, bool useGuiPrompt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_releaseInputGrab_</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>a3d064cce2d55003ca69654fa54417a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_restoreInputGrab_</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>afe361b282c7a0b5159de59fe05c25e9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ErrorConstant</type>
      <name>_utility_error</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>ab364acb84e8a1aee11265daa1561a8d3</anchor>
      <arglist>(const char *level, const char *message, bool showPrompt, const char *filename, int line)</arglist>
    </member>
    <member kind="function">
      <type>ErrorConstant</type>
      <name>_utility_error</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>a747038e5797679a6f16e80e0a9220458</anchor>
      <arglist>(const char *level, const std::string &amp;message, bool showPrompt, const char *filename, int line)</arglist>
    </member>
    <member kind="function">
      <type>ErrorConstant</type>
      <name>_utility_error</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>a9902451bb6cc05a4228c731446a9077b</anchor>
      <arglist>(const std::string &amp;level, const std::string &amp;message, bool showPrompt, const char *filename, int line)</arglist>
    </member>
    <member kind="variable">
      <type>AssertionHook</type>
      <name>_debugHook</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>a7e3f9a1346d98dfa9ef79637b1c63a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssertionHook</type>
      <name>_failureHook</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>a1c51d769d74d953c02893baff9c53304</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; std::string &gt;</type>
      <name>currentFilesUsed</name>
      <anchorfile>namespaceG3D_1_1__internal.html</anchorfile>
      <anchor>abb7d2090dc8aa2d4ef2b13444e12481c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>changelog</name>
    <title>Change Log</title>
    <filename>changelog.html</filename>
  </compound>
  <compound kind="page">
    <name>contributors</name>
    <title>Contributors</title>
    <filename>contributors.html</filename>
  </compound>
  <compound kind="page">
    <name>errorfaq</name>
    <title>Error FAQ</title>
    <filename>errorfaq.html</filename>
  </compound>
  <compound kind="page">
    <name>faq</name>
    <title>General FAQ</title>
    <filename>faq.html</filename>
    <docanchor file="faq.html">graphicscard</docanchor>
    <docanchor file="faq.html">no3d</docanchor>
    <docanchor file="faq.html">matrices</docanchor>
    <docanchor file="faq.html">pbuffers</docanchor>
    <docanchor file="faq.html">unicode</docanchor>
    <docanchor file="faq.html">nextrelease</docanchor>
    <docanchor file="faq.html">slowdemos</docanchor>
    <docanchor file="faq.html">indexarrays</docanchor>
    <docanchor file="guideintro.html">otherlibs</docanchor>
    <docanchor file="faq.html">intersectmodel</docanchor>
    <docanchor file="faq.html">rotation</docanchor>
    <docanchor file="faq.html">orthographic</docanchor>
    <docanchor file="faq.html">worldmouse</docanchor>
    <docanchor file="faq.html">VS2005</docanchor>
    <docanchor file="faq.html">fullscreen</docanchor>
    <docanchor file="faq.html">headers</docanchor>
    <docanchor file="faq.html">buildsystem</docanchor>
    <docanchor file="faq.html">precision</docanchor>
    <docanchor file="faq.html">join</docanchor>
  </compound>
  <compound kind="page">
    <name>frequent</name>
    <title>Frequently Used Documentation</title>
    <filename>frequent.html</filename>
  </compound>
  <compound kind="page">
    <name>guideapp</name>
    <title>Application Framework</title>
    <filename>guideapp.html</filename>
    <docanchor file="guidetutorial.html">Introduction</docanchor>
    <docanchor file="guideapp.html" title="GApp and GAppSettings">gapps</docanchor>
    <docanchor file="guideapp.html" title="Applets">applets</docanchor>
    <docanchor file="guideapp.html" title="Or Not!">ornotgapp</docanchor>
    <docanchor file="guidemeshes.html" title="Models">models</docanchor>
    <docanchor file="guideapp.html" title="Selection">selection</docanchor>
    <docanchor file="guideapp.html" title="User Interface">controls</docanchor>
  </compound>
  <compound kind="page">
    <name>guidebrown</name>
    <title>Brown-Specific Instructions</title>
    <filename>guidebrown.html</filename>
    <docanchor file="guidebrown.html" title="G3D in Courses at Brown">introcourses</docanchor>
    <docanchor file="guidebrown.html" title="Linux Setup at Brown">linuxbrown</docanchor>
    <docanchor file="guidebrown.html" title="Windows Setup at Brown">windowsbrown</docanchor>
  </compound>
  <compound kind="page">
    <name>guidecollision</name>
    <title>Collisions and Intersections</title>
    <filename>guidecollision.html</filename>
  </compound>
  <compound kind="page">
    <name>guidecompiling</name>
    <title>Compiling and Linking with G3D</title>
    <filename>guidecompiling.html</filename>
  </compound>
  <compound kind="page">
    <name>guideconcepts</name>
    <title>Concepts</title>
    <filename>guideconcepts.html</filename>
    <docanchor file="guideconcepts.html" title="Immediate Mode Graphics">imm</docanchor>
    <docanchor file="guideconcepts.html" title="Coordinate Systems">coordinates</docanchor>
    <docanchor file="guideconcepts.html" title="Reference Counting">ref</docanchor>
    <docanchor file="guideconcepts.html" title="Naming">nm</docanchor>
    <docanchor file="guideconcepts.html" title="STL vs. G3D">stl</docanchor>
    <docanchor file="guideconcepts.html" title="Layered APIs">layer</docanchor>
    <docanchor file="guideconcepts.html" title="Data Directory">data</docanchor>
    <docanchor file="guideconcepts.html" title="OpenGL Websites">glsites</docanchor>
  </compound>
  <compound kind="page">
    <name>guidedebug</name>
    <title>Debugging</title>
    <filename>guidedebug.html</filename>
  </compound>
  <compound kind="page">
    <name>guideeffects</name>
    <title>Effects</title>
    <filename>guideeffects.html</filename>
    <docanchor file="guideeffects.html" title="Cartoon Rendering">cartoon</docanchor>
    <docanchor file="guideeffects.html" title="Shadows">shadows</docanchor>
    <docanchor file="guideeffects.html" title="Reflections">reflections</docanchor>
  </compound>
  <compound kind="page">
    <name>guidefbo</name>
    <title>Framebuffer Class Tutorial</title>
    <filename>guidefbo.html</filename>
  </compound>
  <compound kind="page">
    <name>guidefiles</name>
    <title>Working with Files &amp; Networks</title>
    <filename>guidefiles.html</filename>
    <docanchor file="guidefiles.html" title="File Management">filemanagement</docanchor>
    <docanchor file="guidefiles.html" title="Text Files">textfiles</docanchor>
    <docanchor file="guidefiles.html" title="Binary Files">binaryfiles</docanchor>
    <docanchor file="guidefiles.html" title="Network">network</docanchor>
    <docanchor file="guidefiles.html" title="Images">images</docanchor>
  </compound>
  <compound kind="page">
    <name>guideinstall</name>
    <title>Installing G3D</title>
    <filename>guideinstall.html</filename>
    <docanchor file="guideinstall.html" title="Windows XP &amp; Windows 2000">windows</docanchor>
    <docanchor file="guidetutorial.html" title="Linux">linux</docanchor>
    <docanchor file="guideinstall.html" title="Mac OS X">osx</docanchor>
    <docanchor file="guideinstall.html" title="Building G3D">build</docanchor>
    <docanchor file="guideinstall.html" title="#defines">defines</docanchor>
  </compound>
  <compound kind="page">
    <name>guideintro</name>
    <title>Introduction</title>
    <filename>guideintro.html</filename>
    <docanchor file="guideintro.html" title="Documentation and Support">documentation</docanchor>
    <docanchor file="guideintro.html" title="Platform and Functionality">platform</docanchor>
    <docanchor file="guideintro.html" title="Design Philosophy">philosophy</docanchor>
    <docanchor file="guideintro.html" title="Data Formats">formats</docanchor>
    <docanchor file="guideintro.html" title="Team">team</docanchor>
    <docanchor file="guideintro.html" title="Release Schedule">b1</docanchor>
    <docanchor file="guideintro.html" title="Beta and Deprecated APIs">beta</docanchor>
    <docanchor file="guideintro.html" title="Notes for Expert Users">experts</docanchor>
  </compound>
  <compound kind="page">
    <name>guidemacosx</name>
    <title>Setting up a Project in Mac OS X</title>
    <filename>guidemacosx.html</filename>
    <docanchor file="guidemacosx.html" title="Introduction">introduction</docanchor>
    <docanchor file="guidemacosx.html">Prerequisites</docanchor>
    <docanchor file="guidemacosx.html" title="Installing G3D on Mac OS X">installg3d</docanchor>
    <docanchor file="guidemacosx.html" title="Starting a New Project in Xcode">startingxcode</docanchor>
  </compound>
  <compound kind="page">
    <name>guidemeshes</name>
    <title>Working with Meshes</title>
    <filename>guidemeshes.html</filename>
    <docanchor file="guidemeshes.html" title="Important Definitions">mesh_define</docanchor>
    <docanchor file="guidemeshes.html" title="G3D::MeshAlg">meshalg</docanchor>
    <docanchor file="guidemeshes.html" title="G3D::MeshBuilder">meshbuilder</docanchor>
    <docanchor file="guidemeshes.html" title="Contrib Examples">examples</docanchor>
  </compound>
  <compound kind="page">
    <name>guidenetwork</name>
    <title>Networking with G3D</title>
    <filename>guidenetwork.html</filename>
    <docanchor file="guidenetwork.html" title="Concepts in Networking">concepts</docanchor>
    <docanchor file="guidenetwork.html" title="Code Samples">codesamples</docanchor>
  </compound>
  <compound kind="page">
    <name>guideopengl</name>
    <title>Using OpenGL with G3D</title>
    <filename>guideopengl.html</filename>
    <docanchor file="guideopengl.html" title="Limitations">limit</docanchor>
    <docanchor file="guideopengl.html" title="Benefits">benefits</docanchor>
    <docanchor file="guideopengl.html" title="Other Information">otherinfo</docanchor>
    <docanchor file="guideopengl.html" title="Code Example">example</docanchor>
  </compound>
  <compound kind="page">
    <name>guidephysics</name>
    <title>Physics and Ray Tracing</title>
    <filename>guidephysics.html</filename>
    <docanchor file="guidephysics.html" title="Physics">physics</docanchor>
    <docanchor file="guidephysics.html" title="Ray Tracing">raytracing</docanchor>
    <docanchor file="guidephysics.html" title="Bounding Volumes">bounding</docanchor>
    <docanchor file="guidephysics.html" title="BSP Tree">bsptree</docanchor>
  </compound>
  <compound kind="page">
    <name>guideshaders</name>
    <title>Shaders</title>
    <filename>guideshaders.html</filename>
    <docanchor file="guideshaders.html" title="Supported Languages">supported</docanchor>
    <docanchor file="guideshaders.html" title="Tools">tools</docanchor>
    <docanchor file="guideshaders.html" title="Sample Shaders">sample</docanchor>
  </compound>
  <compound kind="page">
    <name>guidetutorial</name>
    <title>Tutorial</title>
    <filename>guidetutorial.html</filename>
    <docanchor file="guidetutorial.html" title="Prerequisites">prereqs</docanchor>
    <docanchor file="guidetutorial.html" title="Project Setup">setup</docanchor>
    <docanchor file="guidetutorial.html" title="Microsoft Visual C++ 6.0">vc6</docanchor>
    <docanchor file="guidetutorial.html" title="Microsoft Visual Studio .NET 2003">vc7</docanchor>
    <docanchor file="guidetutorial.html" title="Mac OS X Setup">macrefer</docanchor>
    <docanchor file="guidetutorial.html" title="Create an Empty World">emptyworld</docanchor>
    <docanchor file="guidetutorial.html" title="main.cpp">main_cpp</docanchor>
    <docanchor file="guidetutorial.html" title="App.h">app_h</docanchor>
    <docanchor file="guidetutorial.html" title="Filling out the new project">more</docanchor>
    <docanchor file="guidetutorial.html" title="Add a Sky and Lighting">sky</docanchor>
    <docanchor file="guidetutorial.html" title="Create a Ground Plane">groundplane</docanchor>
    <docanchor file="guidetutorial.html" title="Create a Scene Graph">scenegraph</docanchor>
    <docanchor file="guidetutorial.html" title="User Interaction">interaction</docanchor>
    <docanchor file="guidetutorial.html" title="Shaders">shaders</docanchor>
    <docanchor file="guidetutorial.html" title="About Shaders">aboutshaders</docanchor>
    <docanchor file="guidetutorial.html" title="Getting Ready for Custom Shaders">gettingreadyforshaders</docanchor>
    <docanchor file="guidetutorial.html" title="Shader Vocabulary">shadervocabulary</docanchor>
    <docanchor file="guidetutorial.html" title="Initializing a Shader">creatingshader</docanchor>
    <docanchor file="guidetutorial.html" title="Invoking a Shader">invokingshader</docanchor>
    <docanchor file="guidetutorial.html" title="Convenience Variables in G3D Shaders">shader_extras</docanchor>
    <docanchor file="guidetutorial.html" title="Passing in Custom Arguments">additional_arguments</docanchor>
    <docanchor file="guidetutorial.html" title="Try This: A Simple Shader">yours</docanchor>
    <docanchor file="guidetutorial.html" title="Going Crazy">crazy</docanchor>
  </compound>
  <compound kind="page">
    <name>guideui</name>
    <title>User Input</title>
    <filename>guideui.html</filename>
    <docanchor file="guideui.html" title="G3D::UserInput">gui</docanchor>
    <docanchor file="guideui.html">ui_button</docanchor>
    <docanchor file="guideui.html" title="G3D::FPCameraController">ui_fpcamera</docanchor>
    <docanchor file="guideui.html" title="G3D::GWindow">gwindow</docanchor>
  </compound>
  <compound kind="page">
    <name>guidevar</name>
    <title>Vertex Arrays</title>
    <filename>guidevar.html</filename>
    <docanchor file="guidevar.html" title="A Faster Way to Render">fast</docanchor>
    <docanchor file="guidevar.html" title="Rendering Vertex Arrays">render</docanchor>
    <docanchor file="guidevar.html" title="Converting from sendVertex to Vertex Arrays">convert</docanchor>
    <docanchor file="guidevar.html" title="Creating Vertex Arrays">create</docanchor>
    <docanchor file="guidevar.html" title="How Many VARAreas?">how</docanchor>
  </compound>
  <compound kind="page">
    <name>guidevideo</name>
    <title>Video and Image Processing</title>
    <filename>guidevideo.html</filename>
    <docanchor file="guidevideo.html">Classes</docanchor>
    <docanchor file="guidevideo.html">Software</docanchor>
    <docanchor file="guidevideo.html" title="Video on the GPU">GPU</docanchor>
  </compound>
  <compound kind="page">
    <name>license</name>
    <title>License</title>
    <filename>license.html</filename>
    <docanchor file="license.html" title="Intent of License">intent</docanchor>
    <docanchor file="license.html" title="License">reallicense</docanchor>
  </compound>
  <compound kind="page">
    <name>indexedbytopic</name>
    <title>APIs by Topic</title>
    <filename>indexedbytopic.html</filename>
    <docanchor file="indexedbytopic.html" title="Application Framework (G3DAll.h, glg3d.lib)">app</docanchor>
    <docanchor file="indexedbytopic.html" title="Hardware Rendering (G3DAll.h, glg3d.lib)">gl</docanchor>
    <docanchor file="indexedbytopic.html" title="3D Math and Systems (graphics3d.h, g3d.lib)">math</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>G3D Manual</title>
    <filename>index.html</filename>
    <docanchor file="index.html">Welcome</docanchor>
    <docanchor file="index.html" title="Table of Contents">chapters</docanchor>
  </compound>
</tagfile>
